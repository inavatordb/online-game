{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\inava\\\\online-game\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithCustomToken, onAuthStateChanged } from 'firebase/auth';\nimport { getFirestore, doc, addDoc, updateDoc, deleteDoc, onSnapshot, collection, query, where, arrayUnion, serverTimestamp, getDocs } from 'firebase/firestore';\n\n// Firebase configuration from environment variables\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = JSON.parse(process.env.REACT_APP_FIREBASE_CONFIG || '{}');\nconst appId = process.env.REACT_APP_ID || 'default-app-id';\n\n// Initialize Firebase outside the component to avoid re-initialization\nconst app = initializeApp(firebaseConfig);\nconst db = getFirestore(app);\nconst auth = getAuth(app);\n\n// Helper for generating unique IDs (not cryptographically secure, but fine for game items)\nconst generateId = () => Math.random().toString(36).substring(2, 11);\n\n// Pre-defined game data\nconst PROMPT_CARDS = {\n  \"First Dates\": [{\n    type: \"fill\",\n    pillar: \"Boundaries\",\n    text: \"My date set a clear boundary by stating they wouldn't discuss anything before __________________.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Communication\",\n    text: \"I knew there would be communication challenges when their opening line was, 'So, do you believe in __________________?'\"\n  }, {\n    type: \"fill\",\n    pillar: \"Respect\",\n    text: \"My date showed a shocking lack of respect when they started __________________ mid-conversation.\"\n  }, {\n    type: \"thisSoundsLike\",\n    pillar: \"Compromise\",\n    text: \"This sounds like... someone who, on a first date, orders for both of you and then says, 'No compromise on the appetizers!'\"\n  }, {\n    type: \"fill\",\n    pillar: \"Boundaries\",\n    text: \"The biggest red flag on our first date was when they instantly started talking about __________________.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Communication\",\n    text: \"Their idea of 'getting to know you' involved asking about my __________________.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Respect\",\n    text: \"I lost all respect for them when they pulled out a __________________ at the table.\"\n  }, {\n    type: \"thisSoundsLike\",\n    pillar: \"Boundaries\",\n    text: \"This sounds like... someone who brings their ex to a first date as a 'wingman'.\"\n  }],\n  \"Proposals & Engagements\": [{\n    type: \"fill\",\n    pillar: \"Compromise\",\n    text: \"When I tried to compromise on the wedding theme, they firmly stated, 'It's either __________________ or nothing!'\"\n  }, {\n    type: \"fill\",\n    pillar: \"Communication\",\n    text: \"They proposed using an elaborate code only they understood, which made for terrible __________________.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Respect\",\n    text: \"My partner showed their true respect for my wishes by including __________________ in the engagement announcement.\"\n  }, {\n    type: \"thisSoundsLike\",\n    pillar: \"Boundaries\",\n    text: \"This sounds like... someone whose engagement photo shoot involved breaking into a national park for 'the perfect shot,' ignoring all signs.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Compromise\",\n    text: \"Our engagement almost ended when we couldn't compromise on __________________.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Communication\",\n    text: \"The proposal would have been perfect if only their communication hadn't involved __________________.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Respect\",\n    text: \"I knew they respected me when their proposal included a promise to never __________________.\"\n  }, {\n    type: \"thisSoundsLike\",\n    pillar: \"Communication\",\n    text: \"This sounds like... a proposal delivered via carrier pigeon, with a misspelled 'marry' note.\"\n  }],\n  \"Family & Children\": [{\n    type: \"fill\",\n    pillar: \"Communication\",\n    text: \"My partner and I communicate solely through __________________ when discussing bedtime routines.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Boundaries\",\n    text: \"My in-laws always cross the boundary by __________________ every time they visit.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Respect\",\n    text: \"Our toddler shows respect for household rules by __________________ at bedtime.\"\n  }, {\n    type: \"thisSoundsLike\",\n    pillar: \"Compromise\",\n    text: \"This sounds like... someone who, during a family road trip, insists on listening to their obscure polka music playlist for eight hours straight with no compromise.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Communication\",\n    text: \"Family dinners often devolve into chaos when someone mentions __________________.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Boundaries\",\n    text: \"We had to set a strict boundary about __________________ after the last family gathering.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Respect\",\n    text: \"Our kids finally learned respect when we introduced the rule about __________________.\"\n  }, {\n    type: \"thisSoundsLike\",\n    pillar: \"Boundaries\",\n    text: \"This sounds like... parents who track their adult children's every move using a GPS chip.\"\n  }],\n  \"Friends with Benefits (FWB)\": [{\n    type: \"fill\",\n    pillar: \"Boundaries\",\n    text: \"Our FWB arrangement works because we both respect the boundary of never discussing __________________.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Communication\",\n    text: \"They suggested we communicate solely through __________________ to keep things strictly casual.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Compromise\",\n    text: \"The biggest compromise in our FWB situation was agreeing to __________________.\"\n  }, {\n    type: \"thisSoundsLike\",\n    pillar: \"Respect\",\n    text: \"This sounds like... someone who shows respect for their FWB's space by only 'dropping by' unannounced at 3 AM.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Boundaries\",\n    text: \"The moment our FWB boundary was crossed was when they started leaving __________________ at my place.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Communication\",\n    text: \"Our FWB 'talks' often involved more __________________ than actual words.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Compromise\",\n    text: \"We finally had to compromise on whether our FWB status included __________________.\"\n  }, {\n    type: \"thisSoundsLike\",\n    pillar: \"Communication\",\n    text: \"This sounds like... an FWB who communicates exclusively through cryptic TikTok dances.\"\n  }],\n  \"Long-Term Relationships & Marriage\": [{\n    type: \"fill\",\n    pillar: \"Communication\",\n    text: \"After 10 years of marriage, we've mastered the art of communicating solely through __________________.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Respect\",\n    text: \"Our secret to a happy marriage is respecting each other's need for __________________.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Compromise\",\n    text: \"We knew our compromise skills were peak when we finally agreed on __________________ for dinner.\"\n  }, {\n    type: \"thisSoundsLike\",\n    pillar: \"Boundaries\",\n    text: \"This sounds like... a couple whose idea of healthy boundaries involves separate houses in different states.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Communication\",\n    text: \"The key to our long-term happiness is never discussing __________________.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Respect\",\n    text: \"My partner truly respects my need for solitude by always __________________.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Compromise\",\n    text: \"Our biggest compromise yet involved deciding on __________________ for our anniversary.\"\n  }, {\n    type: \"thisSoundsLike\",\n    pillar: \"Compromise\",\n    text: \"This sounds like... a couple who compromises on vacation destinations by alternating between a swamp tour and a taxidermy convention.\"\n  }],\n  \"Breakups & Moving On\": [{\n    type: \"fill\",\n    pillar: \"Boundaries\",\n    text: \"After the breakup, I learned to respect my own boundaries by refusing to __________________.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Compromise\",\n    text: \"My ex tried to compromise on splitting our possessions by offering me __________________.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Communication\",\n    text: \"The most effective post-breakup communication we had involved __________________.\"\n  }, {\n    type: \"thisSoundsLike\",\n    pillar: \"Respect\",\n    text: \"This sounds like... someone who, to show respect for their ex's new relationship, sends them a framed photo of their ex's ex every holiday.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Boundaries\",\n    text: \"Setting a boundary about __________________ was crucial for my healing after the breakup.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Compromise\",\n    text: \"There was no compromise possible when it came to who kept __________________.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Communication\",\n    text: \"Our post-breakup communication strategy was strictly limited to __________________.\"\n  }, {\n    type: \"thisSoundsLike\",\n    pillar: \"Boundaries\",\n    text: \"This sounds like... someone who 'moves on' by getting a tattoo of their ex's face, but with devil horns.\"\n  }]\n};\nconst ANSWER_CARDS = [\"a pet rock named 'Gary'\", \"my extensive collection of toenail clippings\", \"the concept of personal hygiene\", \"a five-hour interpretive dance\", \"my imaginary friend, Bartholomew\", \"the meaning of life, according to a squirrel\", \"their ex's entire family tree\", \"a spontaneous trip to the moon\", \"a heated debate about flat earth theories\", \"my obsession with competitive eating\", \"the ghost of my past relationship\", \"a really bad karaoke performance\", \"a detailed PowerPoint presentation on my insecurities\", \"my unique collection of lint\", \"a crying baby simulator\", \"the sound of a kazoo orchestra\", \"their unedited diary entries from middle school\", \"a sock puppet show\", \"the recipe for my grandma's infamous fruitcake\", \"a detailed analysis of my dream journal\", \"their pet goldfish\", \"a surprise visit from a mariachi band\", \"a 30-page manifesto on why cats are superior to dogs\", \"my crippling fear of ducks\", \"a life-sized cardboard cutout of myself\", \"the exact moment I realized I was allergic to gluten\", \"my collection of antique staplers\", \"a detailed explanation of quantum physics\", \"their personal alien abduction story\", \"a single, lonely potato\", \"the dark secrets of my childhood treehouse\", \"my profound love for glitter\", \"a dramatic re-enactment of my last dentist visit\", \"a squirrel dressed as a tiny chef\", \"my secret talent for burping the alphabet backwards\", \"a miniature alpaca farm\", \"the lingering smell of old gym socks\", \"my deep philosophical thoughts on cheese\", \"a very aggressive snail\", \"a conspiracy theory involving garden gnomes\", \"my questionable fashion choices from the 90s\", \"the universal language of farts\", \"a spontaneous opera performance\", \"my collection of rare, vintage sporks\", \"the exact number of hairs on my head\", \"a detailed map of my internal organs\", \"my uncanny ability to predict the weather with my knee\", \"a flock of angry pigeons\", \"my personal brand of awkward silence\", \"a very confused mime\", \"the entire script of a terrible B-movie\", \"a deep dive into celebrity gossip from 2003\", \"my most embarrassing childhood story, told in interpretive dance\", \"a rogue tumbleweed\", \"my collection of forgotten dreams\", \"a perpetually confused stare\", \"the subtle art of passive aggression\", \"a commitment to never folding laundry again\", \"the true identity of Santa Claus\", \"a never-ending loop of elevator music\", \"my inability to tell left from right\", \"a lifetime supply of questionable advice\", \"the secret to perfect toast\", \"a spontaneous act of kindness towards a pigeon\", \"my irrational fear of balloons\", \"a detailed budget of my impulse purchases\", \"the surprising history of garden hoses\", \"my unwavering dedication to napping\", \"a profound appreciation for mundane objects\", \"my personal record for most consecutive sneezes\", \"a hidden talent for imitating barnyard animals\", \"the shocking truth about socks\", \"my unwavering belief in unicorns\", \"a detailed analysis of my coffee preferences\", \"the silent language of eyebrow raises\", \"a deep philosophical debate about condiments\", \"my surprising expertise in competitive napping\", \"the existential dread of a Monday morning\", \"a profound understanding of cat psychology\", \"my secret stash of emergency chocolate\", \"the art of graceful awkwardness\", \"a detailed plan for world domination (starting with my pantry)\", \"my most cherished collection of bottle caps\", \"the subtle nuances of air guitar\", \"a profound appreciation for bad puns\", \"my impressive ability to procrastinate creatively\", \"the surprising comfort of mismatched socks\", \"a detailed study of dust bunnies\", \"my personal philosophy on the optimal way to butter toast\", \"the quiet rebellion of untamed hair\", \"a deep contemplation of the universe while staring at a ceiling fan\", \"my unwavering commitment to collecting novelty erasers\", \"the dramatic flair of a well-timed eye-roll\"];\n\n// Component for displaying temporary messages/modals instead of alerts\nconst MessageModal = ({\n  message,\n  onClose\n}) => {\n  if (!message) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-gray-900 bg-opacity-75 flex items-center justify-center z-50 p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg p-6 shadow-xl max-w-sm w-full text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xl font-semibold mb-4 text-gray-800\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        className: \"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-6 rounded-full transition duration-300 transform hover:scale-105\",\n        children: \"OK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 9\n  }, this);\n};\n\n// Main App Component\n_c = MessageModal;\nfunction App() {\n  _s();\n  const [userId, setUserId] = useState(null);\n  const [currentPage, setCurrentPage] = useState('home'); // home, lobby, game, leaderboard, winner\n  const [gameId, setGameId] = useState(null);\n  const [gameData, setGameData] = useState(null);\n  const [message, setMessage] = useState(null);\n  const [isAuthReady, setIsAuthReady] = useState(false);\n  const [playerName, setPlayerName] = useState(''); // New state for player nickname\n\n  // Auth state listener and initial sign-in logic\n  useEffect(() => {\n    const SESSION_USER_ID_KEY = 'redFlagsGameTempUserId';\n    const unsubscribe = onAuthStateChanged(auth, async currentUser => {\n      const initialAuthToken = process.env.REACT_APP_INITIAL_AUTH_TOKEN;\n      if (initialAuthToken) {\n        // If an initial auth token is provided (e.g., from the Canvas environment)\n        // Use Firebase authentication with the provided token.\n        if (!currentUser) {\n          try {\n            await signInWithCustomToken(auth, initialAuthToken);\n          } catch (error) {\n            console.error(\"Firebase Auth Error with custom token:\", error);\n            setMessage(`Authentication failed: ${error.message}. Please refresh.`);\n          }\n        }\n        // Once authenticated, set the user and their UID from Firebase.\n        if (auth.currentUser) {\n          setUserId(auth.currentUser.uid);\n          // Set default player name if not already set, or load from storage\n          if (!playerName) {\n            setPlayerName(`Player ${auth.currentUser.uid.substring(0, 4)}`);\n          }\n        }\n      } else {\n        // If no initial auth token (e.g., in a standalone browser tab for testing)\n        // Generate and use a temporary, session-based user ID.\n        let tempUserId = sessionStorage.getItem(SESSION_USER_ID_KEY);\n        if (!tempUserId) {\n          tempUserId = `guest_${crypto.randomUUID()}`; // Generate a unique ID\n          sessionStorage.setItem(SESSION_USER_ID_KEY, tempUserId);\n          console.log(\"Generated new session userId:\", tempUserId);\n        } else {\n          console.log(\"Reusing session userId:\", tempUserId);\n        }\n        setUserId(tempUserId); // Use the session ID as the userId\n        // Set default player name for guest\n        if (!playerName) {\n          setPlayerName(`Player ${tempUserId.substring(0, 4)}`);\n        }\n      }\n      setIsAuthReady(true); // Auth listener has completed its initial check or temp ID is set\n    });\n    return () => unsubscribe();\n  }, [playerName]); // Added playerName to dependencies to prevent re-rendering issues\n\n  // Firebase game data listener\n  useEffect(() => {\n    if (!gameId || !isAuthReady || !userId) return; // Ensure auth and user are ready\n\n    const gameDocRef = doc(db, `artifacts/${appId}/public/data/games`, gameId);\n    const unsubscribeGame = onSnapshot(gameDocRef, docSnap => {\n      if (docSnap.exists()) {\n        const data = docSnap.data();\n        setGameData(data);\n        // Navigate based on game status\n        if (data.status === 'playing' || data.status === 'submission' || data.status === 'voting') {\n          setCurrentPage('game');\n        } else if (data.status === 'round_end') {\n          setCurrentPage('leaderboard');\n        } else if (data.status === 'game_over') {\n          setCurrentPage('winner');\n        } else if (data.status === 'lobby') {\n          setCurrentPage('lobby');\n        }\n      } else {\n        console.log(\"Game does not exist or has been deleted.\");\n        setGameId(null);\n        setGameData(null);\n        setCurrentPage('home');\n        setMessage(\"Game not found or ended.\");\n      }\n    }, error => {\n      console.error(\"Error listening to game data:\", error);\n      setMessage(\"Failed to load game data. Please try again.\");\n    });\n    return () => unsubscribeGame();\n  }, [gameId, isAuthReady, userId]);\n  const showMessage = msg => {\n    setMessage(msg);\n    setTimeout(() => setMessage(null), 5000); // Clear message after 5 seconds\n  };\n\n  // Render based on current page\n  let content;\n  switch (currentPage) {\n    case 'home':\n      content = /*#__PURE__*/_jsxDEV(HomePage, {\n        setCurrentPage: setCurrentPage,\n        setGameId: setGameId,\n        userId: userId,\n        showMessage: showMessage,\n        playerName: playerName,\n        setPlayerName: setPlayerName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 23\n      }, this);\n      break;\n    case 'lobby':\n      content = /*#__PURE__*/_jsxDEV(LobbyPage, {\n        gameData: gameData,\n        gameId: gameId,\n        userId: userId,\n        showMessage: showMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 23\n      }, this);\n      break;\n    case 'game':\n      content = /*#__PURE__*/_jsxDEV(GamePage, {\n        gameData: gameData,\n        gameId: gameId,\n        userId: userId,\n        showMessage: showMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 23\n      }, this);\n      break;\n    case 'leaderboard':\n      content = /*#__PURE__*/_jsxDEV(LeaderboardPage, {\n        gameData: gameData,\n        userId: userId,\n        onNextRound: handleNextRound\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 23\n      }, this);\n      break;\n    case 'winner':\n      content = /*#__PURE__*/_jsxDEV(WinnerPage, {\n        gameData: gameData,\n        userId: userId,\n        onPlayAgain: () => {\n          setGameId(null);\n          setGameData(null);\n          setCurrentPage('home');\n        },\n        setMessage: setMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 23\n      }, this);\n      break;\n    default:\n      content = /*#__PURE__*/_jsxDEV(HomePage, {\n        setCurrentPage: setCurrentPage,\n        setGameId: setGameId,\n        userId: userId,\n        showMessage: showMessage,\n        playerName: playerName,\n        setPlayerName: setPlayerName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 23\n      }, this);\n  }\n  if (!isAuthReady) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center bg-gradient-to-br from-purple-800 via-pink-600 to-red-500 text-white font-inter\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-3xl animate-pulse\",\n        children: \"Loading game...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-purple-800 via-pink-600 to-red-500 text-white font-inter flex flex-col items-center justify-center p-4\",\n    children: [/*#__PURE__*/_jsxDEV(MessageModal, {\n      message: message,\n      onClose: () => setMessage(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-5xl md:text-6xl font-extrabold text-center mb-8 drop-shadow-lg leading-tight\",\n      children: \"Red Flags & Relationship Goals\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg md:text-xl text-center mb-6 text-white text-opacity-90\",\n      children: [\"Your Player ID: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font-mono bg-white bg-opacity-20 rounded-md px-3 py-1 break-all\",\n        children: userId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-4xl bg-white bg-opacity-10 backdrop-filter backdrop-blur-sm rounded-3xl shadow-2xl p-6 md:p-10 border border-white border-opacity-30\",\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 267,\n    columnNumber: 9\n  }, this);\n}\n\n// HomePage Component\n_s(App, \"9v8n/9zPmtSDBzz4wPit4kEFs9Q=\");\n_c2 = App;\nconst HomePage = ({\n  setCurrentPage,\n  setGameId,\n  userId,\n  showMessage,\n  playerName,\n  setPlayerName\n}) => {\n  _s2();\n  const [joinCode, setJoinCode] = useState('');\n  const handleCreateGame = async () => {\n    if (!playerName.trim()) {\n      showMessage(\"Please enter your nickname.\");\n      return;\n    }\n    try {\n      const categories = Object.keys(PROMPT_CARDS);\n      const randomCategory = categories[Math.floor(Math.random() * categories.length)];\n      const gameCode = Math.random().toString(36).substring(2, 8).toUpperCase(); // 6-char code\n      console.log(\"Generated Game Code:\", gameCode); // Debugging log\n\n      const initialPlayers = {};\n      // Use the userId passed from App component (which is now guaranteed unique per tab)\n      initialPlayers[userId] = {\n        id: userId,\n        // Added unique ID for the player object\n        name: playerName.trim(),\n        // Use custom player name\n        score: 0,\n        isHost: true,\n        hand: shuffleArray([...ANSWER_CARDS]).slice(0, 10),\n        // Give 10 unique cards\n        hasSubmitted: false,\n        hasVoted: false\n      };\n      const newGameRef = await addDoc(collection(db, `artifacts/${appId}/public/data/games`), {\n        hostId: userId,\n        category: randomCategory,\n        currentRound: 1,\n        maxRounds: 10,\n        currentPrompt: null,\n        status: 'lobby',\n        // lobby, submission, voting, round_end, game_over\n        players: initialPlayers,\n        submittedAnswers: {},\n        votes: {},\n        gameCode: gameCode,\n        // Ensure gameCode is always a string\n        createdAt: serverTimestamp(),\n        promptHistory: [],\n        // To store played prompts\n        answerCardPool: shuffleArray([...ANSWER_CARDS]) // All available answer cards\n      });\n      console.log(`Game created with Firestore path: artifacts/${appId}/public/data/games/${newGameRef.id}`); // New debugging log with full path\n      setGameId(newGameRef.id);\n      setCurrentPage('lobby');\n      showMessage(`Game created! Share code: ${gameCode}`);\n    } catch (error) {\n      console.error(\"Error creating game:\", error);\n      showMessage(\"Failed to create game. Please try again.\");\n    }\n  };\n  const handleJoinGame = async () => {\n    if (!playerName.trim()) {\n      showMessage(\"Please enter your nickname.\");\n      return;\n    }\n    if (!joinCode) {\n      showMessage(\"Please enter a game code.\");\n      return;\n    }\n    try {\n      console.log(`Attempting to query Firestore for collection: artifacts/${appId}/public/data/games with gameCode: ${joinCode.toUpperCase()}`); // More detailed debugging log\n      const q = query(collection(db, `artifacts/${appId}/public/data/games`), where(\"gameCode\", \"==\", joinCode.toUpperCase()));\n      const querySnapshot = await getDocs(q);\n      console.log(\"Query Snapshot empty:\", querySnapshot.empty); // Debugging log\n\n      if (!querySnapshot.empty) {\n        const gameDoc = querySnapshot.docs[0];\n        const gameData = gameDoc.data();\n        const gameRef = doc(db, `artifacts/${appId}/public/data/games`, gameDoc.id);\n        if (gameData.players[userId]) {\n          showMessage(\"You are already in this game.\");\n          setGameId(gameDoc.id);\n          setCurrentPage('lobby'); // Go to lobby if already in\n          return;\n        }\n\n        // If joining after game started, give initial cards\n        const playerHand = shuffleArray([...ANSWER_CARDS]).slice(0, 10);\n        await updateDoc(gameRef, {\n          [`players.${userId}`]: {\n            id: userId,\n            // Added unique ID for the player object\n            name: playerName.trim(),\n            // Use custom player name\n            score: 0,\n            isHost: false,\n            hand: playerHand,\n            hasSubmitted: false,\n            hasVoted: false\n          }\n        });\n        setGameId(gameDoc.id);\n        setCurrentPage('lobby'); // Will change based on game status from listener\n        showMessage(`Joined game ${joinCode}!`);\n      } else {\n        showMessage(\"Invalid game code.\");\n      }\n    } catch (error) {\n      console.error(\"Error joining game:\", error);\n      showMessage(\"Failed to join game. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter your nickname\",\n      value: playerName,\n      onChange: e => setPlayerName(e.target.value),\n      className: \"w-full p-3 rounded-xl bg-white bg-opacity-20 text-white placeholder-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-400 mb-4 text-center\",\n      maxLength: \"20\" // Limit nickname length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreateGame,\n      className: \"w-full mb-4 bg-gradient-to-r from-blue-500 to-teal-400 hover:from-blue-600 hover:to-teal-500 text-white font-bold py-4 px-8 rounded-full shadow-lg transition duration-300 transform hover:scale-105\",\n      children: \"Create New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-200 mb-2\",\n        children: \"OR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Game Code\",\n        value: joinCode,\n        onChange: e => setJoinCode(e.target.value),\n        className: \"w-full p-3 rounded-xl bg-white bg-opacity-20 text-white placeholder-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-400 mb-3 text-center uppercase\",\n        maxLength: \"6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleJoinGame,\n        className: \"w-full bg-gradient-to-r from-green-500 to-lime-400 hover:from-green-600 hover:to-lime-500 text-white font-bold py-4 px-8 rounded-full shadow-lg transition duration-300 transform hover:scale-105\",\n        children: \"Join Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-sm text-gray-300 mt-4\",\n      children: \"Minimum 2 players needed to start a game.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 389,\n    columnNumber: 9\n  }, this);\n};\n\n// LobbyPage Component\n_s2(HomePage, \"42J/m0wXRcmRnUDiHpTJ/GtKQxM=\");\n_c3 = HomePage;\nconst LobbyPage = ({\n  gameData,\n  gameId,\n  userId,\n  showMessage\n}) => {\n  if (!gameData) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"text-center text-xl text-gray-200\",\n    children: \"Loading lobby...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 430,\n    columnNumber: 27\n  }, this);\n  const players = Object.values(gameData.players || {});\n  const isHost = gameData.hostId === userId;\n  const canStartGame = players.length >= 2;\n  const gameCode = gameData.gameCode;\n  const handleStartGame = async () => {\n    if (!isHost) return;\n    if (!canStartGame) {\n      showMessage(\"Need at least 2 players to start the game.\");\n      return;\n    }\n    try {\n      const gameRef = doc(db, `artifacts/${appId}/public/data/games`, gameId);\n      const promptCardsForCategory = PROMPT_CARDS[gameData.category];\n\n      // Initialize played prompts to avoid duplicates\n      const initialPromptHistory = [];\n\n      // Reset player states for new game\n      const updatedPlayers = {};\n      for (const pId in gameData.players) {\n        // Replenish player hands for the new round\n        const currentHand = gameData.players[pId].hand || [];\n        const cardsNeeded = 10 - currentHand.length;\n        const newCards = gameData.answerCardPool.slice(0, cardsNeeded);\n        const remainingPool = gameData.answerCardPool.slice(cardsNeeded);\n        updatedPlayers[pId] = {\n          ...gameData.players[pId],\n          score: 0,\n          // Reset scores for new game\n          hand: [...currentHand, ...newCards],\n          // Replenish hand\n          hasSubmitted: false,\n          hasVoted: false\n        };\n        gameData.answerCardPool = remainingPool; // Update pool immediately for next player in loop\n      }\n\n      // Draw initial prompt\n      const initialPrompt = getRandomPrompt(promptCardsForCategory, initialPromptHistory);\n      initialPromptHistory.push(initialPrompt); // Add to history\n\n      await updateDoc(gameRef, {\n        status: 'submission',\n        // Start the game in submission phase\n        currentRound: 1,\n        currentPrompt: initialPrompt,\n        promptHistory: initialPromptHistory,\n        players: updatedPlayers,\n        submittedAnswers: {},\n        votes: {},\n        answerCardPool: gameData.answerCardPool // Save updated pool to Firestore\n      });\n    } catch (error) {\n      console.error(\"Error starting game:\", error);\n      showMessage(\"Failed to start game. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-4xl font-bold mb-4 text-white\",\n      children: \"Game Lobby\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-xl text-gray-200 mb-6\",\n      children: [\"Game Code: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font-bold text-yellow-300\",\n        children: gameCode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg text-gray-200 mb-2\",\n      children: [\"Category: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font-semibold text-pink-200\",\n        children: gameData.category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 65\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg text-gray-200 mb-4\",\n      children: \"Players Connected:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-disc list-inside text-left mx-auto max-w-xs mb-8 text-gray-100\",\n      children: players.map(player => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"py-1\",\n        children: [player.name, \" \", player.isHost && \"(Host)\"]\n      }, player.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 13\n    }, this), isHost && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartGame,\n      disabled: !canStartGame,\n      className: `w-full py-4 px-8 rounded-full shadow-lg transition duration-300 transform ${canStartGame ? 'bg-gradient-to-r from-purple-500 to-indigo-600 hover:from-purple-600 hover:to-indigo-700 text-white font-bold hover:scale-105' : 'bg-gray-600 text-gray-300 cursor-not-allowed'}`,\n      children: canStartGame ? 'Start Game' : `Need ${2 - players.length} more player(s) to start`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 17\n    }, this), !isHost && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-xl text-gray-300 italic\",\n      children: \"Waiting for host to start the game!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 491,\n    columnNumber: 9\n  }, this);\n};\n\n// GamePage Component\n_c4 = LobbyPage;\nconst GamePage = ({\n  gameData,\n  gameId,\n  userId,\n  showMessage\n}) => {\n  if (!gameData || !gameData.currentPrompt) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-xl text-gray-200\",\n      children: \"Waiting for game to start...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(GameRound, {\n    gameData: gameData,\n    gameId: gameId,\n    userId: userId,\n    showMessage: showMessage\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 531,\n    columnNumber: 12\n  }, this);\n};\n_c5 = GamePage;\nconst GameRound = ({\n  gameData,\n  gameId,\n  userId,\n  showMessage\n}) => {\n  _s3();\n  // State for player's current action\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [customAnswer, setCustomAnswer] = useState('');\n  const [nominationData, setNominationData] = useState({\n    nominatedPlayerId: '',\n    justification: ''\n  });\n  const [selectedVote, setSelectedVote] = useState(null);\n  const gameRef = doc(db, `artifacts/${appId}/public/data/games`, gameId);\n  const currentPlayer = gameData.players[userId];\n  const isHost = gameData.hostId === userId;\n  const currentPrompt = gameData.currentPrompt;\n  const submittedAnswers = Object.values(gameData.submittedAnswers || {});\n  const playersInGame = Object.values(gameData.players || {});\n\n  // Reset local state when game phase changes\n  useEffect(() => {\n    setSelectedCard(null);\n    setCustomAnswer('');\n    setNominationData({\n      nominatedPlayerId: '',\n      justification: ''\n    });\n    setSelectedVote(null);\n  }, [gameData.status, gameData.currentRound]);\n  const handleSelectCard = card => {\n    setSelectedCard(card);\n    setCustomAnswer(''); // Clear custom answer if a card is selected\n  };\n  const handleCustomAnswerChange = e => {\n    setCustomAnswer(e.target.value);\n    setSelectedCard(\"BLANK_CARD_SELECTED\"); // Mark as blank card chosen\n  };\n  const handleNominationChange = (field, value) => {\n    setNominationData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n  const handleSubmitAnswer = async () => {\n    if (currentPlayer.hasSubmitted) {\n      showMessage(\"You have already submitted an answer for this round.\");\n      return;\n    }\n    let answerContent = '';\n    if (currentPrompt.type === 'fill') {\n      if (selectedCard === null) {\n        showMessage(\"Please select a card or type a custom answer.\");\n        return;\n      }\n      if (selectedCard === \"BLANK_CARD_SELECTED\") {\n        if (!customAnswer.trim()) {\n          showMessage(\"Please type your custom answer.\");\n          return;\n        }\n        answerContent = customAnswer.trim();\n      } else {\n        answerContent = selectedCard;\n      }\n    } else if (currentPrompt.type === 'thisSoundsLike') {\n      if (!nominationData.nominatedPlayerId || !nominationData.justification.trim()) {\n        showMessage(\"Please select a player and provide a justification.\");\n        return;\n      }\n      answerContent = {\n        nominatedPlayerId: nominationData.nominatedPlayerId,\n        justification: nominationData.justification.trim()\n      };\n    } else {\n      showMessage(\"Invalid prompt type.\");\n      return;\n    }\n    try {\n      const submissionId = generateId();\n      const updates = {\n        [`players.${userId}.hasSubmitted`]: true,\n        // Only remove the card if it was selected from the hand\n        [`players.${userId}.hand`]: currentPrompt.type === 'fill' && selectedCard !== \"BLANK_CARD_SELECTED\" ? currentPlayer.hand.filter(card => card !== selectedCard) : currentPlayer.hand,\n        [`submittedAnswers.${submissionId}`]: {\n          id: submissionId,\n          playerId: userId,\n          answer: answerContent,\n          votes: 0,\n          voters: []\n        }\n      };\n      await updateDoc(gameRef, updates);\n      showMessage(\"Answer submitted!\");\n    } catch (error) {\n      console.error(\"Error submitting answer:\", error);\n      showMessage(\"Failed to submit answer. Please try again.\");\n    }\n  };\n\n  // Check if all active players have submitted their answers\n  const submittedCount = submittedAnswers.length;\n\n  // Host manages phase transitions\n  useEffect(() => {\n    // Only trigger if current phase is 'submission' and all relevant players have submitted\n    if (isHost && gameData.status === 'submission' && submittedCount === playersInGame.length && playersInGame.length > 0) {\n      updateDoc(gameRef, {\n        status: 'voting'\n      }).catch(e => console.error(\"Error setting status to voting:\", e));\n    }\n  }, [submittedCount, playersInGame, isHost, gameData.status, gameRef]);\n  const handleVote = async submissionId => {\n    if (currentPlayer.hasVoted) {\n      showMessage(\"You have already voted this round.\");\n      return;\n    }\n    const submission = gameData.submittedAnswers[submissionId];\n    if (!submission) return;\n\n    // Prevent voting for own card for fill-in-the-blank\n    if (currentPrompt.type === 'fill' && submission.playerId === userId) {\n      showMessage(\"You cannot vote for your own answer.\");\n      return;\n    }\n\n    // Prevent voting for own nomination or if you are the nominee\n    if (currentPrompt.type === 'thisSoundsLike') {\n      if (submission.playerId === userId) {\n        showMessage(\"You cannot vote for your own nomination.\");\n        return;\n      }\n      if (submission.answer.nominatedPlayerId === userId) {\n        showMessage(\"You cannot vote for a nomination where you are the nominee.\");\n        return;\n      }\n    }\n    try {\n      await updateDoc(gameRef, {\n        [`submittedAnswers.${submissionId}.votes`]: (submission.votes || 0) + 1,\n        [`submittedAnswers.${submissionId}.voters`]: arrayUnion(userId),\n        [`players.${userId}.hasVoted`]: true\n      });\n      setSelectedVote(submissionId); // Mark local state\n      showMessage(\"Vote cast!\");\n    } catch (error) {\n      console.error(\"Error casting vote:\", error);\n      showMessage(\"Failed to cast vote. Please try again.\");\n    }\n  };\n\n  // Check if all players have voted\n  const votersCount = playersInGame.filter(p => p.hasVoted).length;\n  const allPlayersVoted = votersCount === playersInGame.length;\n  useEffect(() => {\n    // Trigger only if current phase is 'voting' and all players have voted\n    if (isHost && gameData.status === 'voting' && allPlayersVoted && votersCount > 0) {\n      // All players voted, move to round end phase\n      // Calculate winner and update scores\n      let winningSubmission = null;\n      let maxVotes = -1;\n      for (const subId in gameData.submittedAnswers) {\n        const sub = gameData.submittedAnswers[subId];\n        if (sub.votes > maxVotes) {\n          maxVotes = sub.votes;\n          winningSubmission = sub;\n        } else if (sub.votes === maxVotes) {\n          // Tie-breaker: pick one randomly (or based on submission time if available)\n          if (Math.random() > 0.5) {\n            // Simple random tie-breaker\n            winningSubmission = sub;\n          }\n        }\n      }\n      const updates = {\n        status: 'round_end',\n        currentWinningSubmission: winningSubmission ? {\n          id: winningSubmission.id,\n          playerId: winningSubmission.playerId,\n          answer: winningSubmission.answer\n        } : null\n      };\n      if (winningSubmission) {\n        const winningPlayerId = winningSubmission.playerId;\n        updates[`players.${winningPlayerId}.score`] = (gameData.players[winningPlayerId].score || 0) + 1;\n      }\n      updateDoc(gameRef, updates).catch(e => console.error(\"Error setting status to round_end:\", e));\n    }\n  }, [allPlayersVoted, isHost, gameData.status, votersCount, gameData.submittedAnswers, gameData.players, gameRef]); // Added votersCount to dependencies for accuracy\n\n  // Host controls advancing rounds / ending game\n  const handleNextRound = async () => {\n    if (!isHost) return;\n    try {\n      const gameRef = doc(db, `artifacts/${appId}/public/data/games`, gameId);\n      const nextRound = gameData.currentRound + 1;\n      if (nextRound > gameData.maxRounds) {\n        await updateDoc(gameRef, {\n          status: 'game_over'\n        });\n      } else {\n        const promptCardsForCategory = PROMPT_CARDS[gameData.category];\n        const newPrompt = getRandomPrompt(promptCardsForCategory, gameData.promptHistory || []);\n        const updatedPromptHistory = arrayUnion(newPrompt); // Add new prompt to history\n\n        // Reset player states for the new round and replenish hands\n        const updatedPlayers = {};\n        let currentAnswerCardPool = [...gameData.answerCardPool]; // Make a mutable copy\n\n        for (const pId in gameData.players) {\n          const player = gameData.players[pId];\n          let currentHand = player.hand || [];\n          const cardsNeeded = 10 - currentHand.length; // Ensure hand size is 10\n\n          let newCards = [];\n          if (cardsNeeded > 0) {\n            if (currentAnswerCardPool.length < cardsNeeded) {\n              // If pool runs low, replenish it with all ANSWER_CARDS shuffled\n              currentAnswerCardPool = shuffleArray([...ANSWER_CARDS]);\n              console.warn(\"Answer card pool replenished by reshuffling all cards.\");\n            }\n            newCards = currentAnswerCardPool.slice(0, cardsNeeded);\n            currentAnswerCardPool = currentAnswerCardPool.slice(cardsNeeded);\n          }\n          updatedPlayers[pId] = {\n            ...player,\n            hand: [...currentHand, ...newCards],\n            // Replenish hand\n            hasSubmitted: false,\n            hasVoted: false\n          };\n        }\n        await updateDoc(gameRef, {\n          status: 'submission',\n          currentRound: nextRound,\n          currentPrompt: newPrompt,\n          promptHistory: updatedPromptHistory,\n          players: updatedPlayers,\n          submittedAnswers: {},\n          // Clear submissions for new round\n          votes: {},\n          // Clear votes for new round\n          currentWinningSubmission: null,\n          // Clear winning submission from previous round\n          answerCardPool: currentAnswerCardPool // Save the updated pool state\n        });\n      }\n    } catch (error) {\n      console.error(\"Error advancing round:\", error);\n      showMessage(\"Failed to advance round. Please try again.\");\n    }\n  };\n  const playerHand = (currentPlayer === null || currentPlayer === void 0 ? void 0 : currentPlayer.hand) || [];\n  const hasSubmittedThisRound = currentPlayer === null || currentPlayer === void 0 ? void 0 : currentPlayer.hasSubmitted;\n  const hasVotedThisRound = currentPlayer === null || currentPlayer === void 0 ? void 0 : currentPlayer.hasVoted;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center bg-white bg-opacity-20 rounded-xl p-4 md:p-6 shadow-xl w-full max-w-2xl border border-white border-opacity-30\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xl font-bold text-yellow-200 mb-2\",\n        children: currentPrompt.pillar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 798,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-3xl md:text-4xl font-extrabold text-white leading-tight\",\n        dangerouslySetInnerHTML: {\n          __html: currentPrompt.text.replace(/__________________/g, '<span class=\"text-pink-300 underline\">BLANK</span>')\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 799,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-4 text-lg text-gray-200\",\n        children: [\"Round \", gameData.currentRound, \" of \", gameData.maxRounds]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 802,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 797,\n      columnNumber: 13\n    }, this), gameData.status === 'submission' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full text-center\",\n      children: [!hasSubmittedThisRound ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-2xl font-bold text-white mb-4\",\n          children: \"Your Turn!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 811,\n          columnNumber: 29\n        }, this), currentPrompt.type === 'fill' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4 mb-6\",\n            children: [playerHand.map((card, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n              // Use card content + index as key for uniqueness\n              onClick: () => handleSelectCard(card),\n              className: `p-4 rounded-xl text-gray-900 font-semibold shadow-md transition transform ${selectedCard === card ? 'bg-blue-300 scale-105 ring-4 ring-blue-500' : 'bg-white hover:bg-gray-100 hover:scale-105'}`,\n              children: card\n            }, card + index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 816,\n              columnNumber: 45\n            }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSelectCard(\"BLANK_CARD_SELECTED\"),\n              className: `p-4 rounded-xl text-gray-900 font-semibold shadow-md transition transform ${selectedCard === \"BLANK_CARD_SELECTED\" ? 'bg-blue-300 scale-105 ring-4 ring-blue-500' : 'bg-yellow-300 hover:bg-yellow-200 hover:scale-105'}`,\n              children: \"Type Your Own!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 827,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 814,\n            columnNumber: 37\n          }, this), selectedCard === \"BLANK_CARD_SELECTED\" && /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Type your answer here...\",\n            value: customAnswer,\n            onChange: handleCustomAnswerChange,\n            className: \"w-full p-3 rounded-xl bg-white text-gray-900 placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-400 mb-4\",\n            maxLength: \"50\" // Limit length for answers\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 837,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true) :\n        /*#__PURE__*/\n        // This Sounds Like scenario\n        _jsxDEV(\"div\", {\n          className: \"space-y-4 mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: nominationData.nominatedPlayerId,\n            onChange: e => handleNominationChange('nominatedPlayerId', e.target.value),\n            className: \"w-full p-3 rounded-xl bg-white text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-400\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a player to nominate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 854,\n              columnNumber: 41\n            }, this), playersInGame.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: p.id,\n              children: p.name\n            }, p.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 856,\n              columnNumber: 45\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 849,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Justify your nomination in one short sentence...\",\n            value: nominationData.justification,\n            onChange: e => handleNominationChange('justification', e.target.value),\n            className: \"w-full p-3 rounded-xl bg-white text-gray-900 placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-400 h-24 resize-none\",\n            maxLength: \"100\" // Limit justification length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 859,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 848,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmitAnswer,\n          className: \"w-full bg-gradient-to-r from-teal-500 to-cyan-600 hover:from-teal-600 hover:to-cyan-700 text-white font-bold py-4 px-8 rounded-full shadow-lg transition duration-300 transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\",\n          disabled: !selectedCard && currentPrompt.type === 'fill' || selectedCard === \"BLANK_CARD_SELECTED\" && !customAnswer.trim() || currentPrompt.type === 'thisSoundsLike' && (!nominationData.nominatedPlayerId || !nominationData.justification.trim()),\n          children: \"Submit Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 868,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-2xl text-gray-200 animate-pulse\",\n        children: \"Waiting for other players to submit...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 877,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-300 mt-4 text-lg\",\n        children: [\"Submitted: \", submittedAnswers.length, \" / \", playersInGame.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 879,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 808,\n      columnNumber: 17\n    }, this), gameData.status === 'voting' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-2xl font-bold text-white mb-4\",\n        children: \"Vote for your favorite!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 887,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\",\n        children: submittedAnswers.length > 0 ? submittedAnswers.map(submission => {\n          var _gameData$players$sub;\n          const submitterName = ((_gameData$players$sub = gameData.players[submission.playerId]) === null || _gameData$players$sub === void 0 ? void 0 : _gameData$players$sub.name) || 'Unknown Player';\n          const isMySubmission = submission.playerId === userId;\n          const isMyNominationOrNominee = currentPrompt.type === 'thisSoundsLike' && (submission.playerId === userId || submission.answer && submission.answer.nominatedPlayerId === userId); // Check submission.answer exists\n\n          let cardText;\n          if (currentPrompt.type === 'fill') {\n            cardText = submission.answer;\n          } else {\n            var _gameData$players$sub2;\n            const nominatedPlayerName = submission.answer && ((_gameData$players$sub2 = gameData.players[submission.answer.nominatedPlayerId]) === null || _gameData$players$sub2 === void 0 ? void 0 : _gameData$players$sub2.name) || 'Unknown Player'; // Check submission.answer exists\n            cardText = `\"${submission.answer && submission.answer.justification || ''}\" - For ${nominatedPlayerName}`; // Check submission.answer exists\n          }\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleVote(submission.id),\n            className: `relative p-6 rounded-3xl shadow-xl transition transform hover:scale-105 focus:outline-none focus:ring-4 focus:ring-offset-2 ${selectedVote === submission.id ? 'bg-blue-400 ring-blue-500' : isMySubmission || isMyNominationOrNominee ? 'bg-gray-400 cursor-not-allowed opacity-70' : 'bg-white hover:bg-gray-100'} ${hasVotedThisRound ? 'opacity-70 cursor-not-allowed' : ''}`,\n            disabled: hasVotedThisRound || isMySubmission || isMyNominationOrNominee,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute -top-4 -left-4 bg-yellow-400 text-gray-900 text-xs font-bold px-3 py-1 rounded-full shadow-md\",\n              children: [\"Submitted by \", submitterName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 913,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xl font-semibold text-gray-900 mt-2\",\n              children: cardText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 916,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute -bottom-4 -right-4 bg-pink-400 text-white text-sm font-bold px-3 py-1 rounded-full shadow-md\",\n              children: [\"Votes: \", submission.votes || 0]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 919,\n              columnNumber: 37\n            }, this)]\n          }, submission.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 903,\n            columnNumber: 33\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"col-span-full text-xl text-gray-300\",\n          children: \"No answers submitted yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 925,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 888,\n        columnNumber: 21\n      }, this), hasVotedThisRound ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-2xl text-gray-200 animate-pulse\",\n        children: \"Waiting for other players to vote...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 929,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg text-gray-300\",\n        children: \"Choose the funniest or most fitting answer!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 931,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-300 mt-4 text-lg\",\n        children: [\"Voted: \", votersCount, \" / \", playersInGame.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 933,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 886,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 796,\n    columnNumber: 9\n  }, this);\n};\n\n// LeaderboardPage Component\n_s3(GameRound, \"hzN1Iq0I24L/58XXlqO5B09usZk=\");\n_c6 = GameRound;\nconst LeaderboardPage = ({\n  gameData,\n  userId,\n  onNextRound\n}) => {\n  if (!gameData || !gameData.players) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"text-center text-xl text-gray-200\",\n    children: \"Loading leaderboard...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 944,\n    columnNumber: 48\n  }, this);\n  const isHost = gameData.hostId === userId;\n  const players = Object.values(gameData.players);\n  const sortedPlayers = [...players].sort((a, b) => b.score - a.score);\n  const winningSubmission = gameData.currentWinningSubmission;\n  const currentPrompt = gameData.currentPrompt;\n  let winningAnswerText = \"No winning answer this round.\";\n  let winningPlayerName = \"\";\n  if (winningSubmission) {\n    var _gameData$players$win;\n    winningPlayerName = ((_gameData$players$win = gameData.players[winningSubmission.playerId]) === null || _gameData$players$win === void 0 ? void 0 : _gameData$players$win.name) || 'Unknown Player';\n    if (currentPrompt.type === 'fill') {\n      winningAnswerText = winningSubmission.answer;\n    } else {\n      var _gameData$players$win2;\n      const nominatedPlayerName = winningSubmission.answer && ((_gameData$players$win2 = gameData.players[winningSubmission.answer.nominatedPlayerId]) === null || _gameData$players$win2 === void 0 ? void 0 : _gameData$players$win2.name) || 'Unknown Player';\n      winningAnswerText = `\"${winningSubmission.answer && winningSubmission.answer.justification || ''}\" - For ${nominatedPlayerName}`;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-4xl font-bold text-white mb-6\",\n      children: [\"Round \", gameData.currentRound, \" Results\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 967,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white bg-opacity-20 rounded-xl p-4 md:p-6 mb-8 shadow-xl border border-white border-opacity-30\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg font-semibold text-yellow-200 mb-2\",\n        children: currentPrompt.pillar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 970,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-2xl md:text-3xl font-extrabold text-white mb-4 leading-tight\",\n        children: [\"Question: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          dangerouslySetInnerHTML: {\n            __html: currentPrompt.text.replace(/__________________/g, '______')\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 972,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 971,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-2xl md:text-3xl font-bold text-pink-300 mb-2\",\n        children: \"Winning Answer:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 974,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-3xl md:text-4xl italic text-white leading-tight\",\n        children: [\"\\\"\", winningAnswerText, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 975,\n        columnNumber: 17\n      }, this), winningSubmission && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xl text-gray-200 mt-2\",\n        children: [\"Submitted by: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-semibold text-blue-200\",\n          children: winningPlayerName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 979,\n          columnNumber: 77\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 979,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 969,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-3xl font-bold text-white mb-4\",\n      children: \"Leaderboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 983,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"space-y-3 mb-8\",\n      children: sortedPlayers.map((player, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `flex items-center justify-between p-4 rounded-xl shadow-md ${index === 0 ? 'bg-yellow-300 text-gray-900 font-bold text-xl' : 'bg-white bg-opacity-30 text-white'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"flex items-center\",\n          children: [index === 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mr-2 text-2xl\",\n            children: \"\\uD83D\\uDC51\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 990,\n            columnNumber: 45\n          }, this), player.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 989,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-bold text-xl\",\n          children: [player.score, \" \", player.score === 1 ? 'Point' : 'Points']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 993,\n          columnNumber: 25\n        }, this)]\n      }, player.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 986,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 984,\n      columnNumber: 13\n    }, this), isHost && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onNextRound,\n      className: \"w-full bg-gradient-to-r from-purple-500 to-indigo-600 hover:from-purple-600 hover:to-indigo-700 text-white font-bold py-4 px-8 rounded-full shadow-lg transition duration-300 transform hover:scale-105\",\n      children: gameData.currentRound < gameData.maxRounds ? 'Next Round' : 'End Game'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 999,\n      columnNumber: 17\n    }, this), !isHost && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-xl text-gray-300 italic\",\n      children: \"Waiting for host to continue...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1007,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 966,\n    columnNumber: 9\n  }, this);\n};\n\n// WinnerPage Component\n_c7 = LeaderboardPage;\nconst WinnerPage = ({\n  gameData,\n  userId,\n  onPlayAgain,\n  setMessage\n}) => {\n  if (!gameData || !gameData.players) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"text-center text-xl text-gray-200\",\n    children: \"Calculating winner...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1015,\n    columnNumber: 48\n  }, this);\n  const players = Object.values(gameData.players);\n  const sortedPlayers = [...players].sort((a, b) => b.score - a.score);\n  const winner = sortedPlayers[0];\n  const isHost = gameData.hostId === userId;\n  const winnerHeadline = {\n    \"First Dates\": \"First Date Fiasco Champion!\",\n    \"Proposals & Engagements\": \"Master of Matrimony!\",\n    \"Family & Children\": \"Family Funniest!\",\n    \"Friends with Benefits (FWB)\": \"FWB Finesse King/Queen!\",\n    \"Long-Term Relationships & Marriage\": \"Relationship Guru!\",\n    \"Breakups & Moving On\": \"Breakup Boss!\"\n  };\n  const handleDeleteGame = async () => {\n    // Replaced window.confirm with MessageModal for consistency and better UX\n    setMessage(\"Are you sure you want to delete this game? This action cannot be undone. Click OK to confirm.\", () => {\n      performDeleteGame();\n    });\n  };\n  const performDeleteGame = async () => {\n    try {\n      await deleteDoc(doc(db, `artifacts/${appId}/public/data/games`, gameData.id)); // gameData.id holds the document ID\n      onPlayAgain(); // Go back to home page\n    } catch (error) {\n      console.error(\"Error deleting game:\", error);\n      setMessage(\"Failed to delete game. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-5xl font-extrabold text-yellow-300 mb-6 drop-shadow-lg\",\n      children: \"Game Over!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1051,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-3xl font-bold text-white mb-8\",\n      children: winnerHeadline[gameData.category] || \"Game Champion!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1054,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white bg-opacity-20 rounded-xl p-6 mb-8 shadow-xl border border-white border-opacity-30\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-4xl md:text-5xl font-extrabold text-pink-300 mb-4\",\n        children: [\"\\uD83D\\uDC51 \", winner.name, \" \\uD83D\\uDC51\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1059,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-3xl text-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-bold\",\n          children: winner.score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1063,\n          columnNumber: 21\n        }, this), \" \", winner.score === 1 ? 'Point' : 'Points']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1062,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1058,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-2xl font-bold text-white mb-4\",\n      children: \"Final Leaderboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1067,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"space-y-2 mb-8\",\n      children: sortedPlayers.map((player, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `flex items-center justify-between p-3 rounded-lg shadow-sm ${index === 0 ? 'bg-yellow-200 text-gray-900 font-bold' : 'bg-white bg-opacity-20 text-white'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: player.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1073,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [player.score, \" \", player.score === 1 ? 'Point' : 'Points']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1074,\n          columnNumber: 25\n        }, this)]\n      }, player.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1070,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1068,\n      columnNumber: 13\n    }, this), isHost && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onPlayAgain,\n        className: \"w-full bg-gradient-to-r from-green-500 to-lime-400 hover:from-green-600 hover:to-lime-500 text-white font-bold py-4 px-8 rounded-full shadow-lg transition duration-300 transform hover:scale-105 mb-4\",\n        children: \"Play Again!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1081,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDeleteGame,\n        className: \"w-full bg-red-600 hover:bg-red-700 text-white font-bold py-4 px-8 rounded-full shadow-lg transition duration-300 transform hover:scale-105\",\n        children: \"Delete This Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1087,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), !isHost && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-xl text-gray-300 italic\",\n      children: \"Ask the host to start a new game!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1096,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1050,\n    columnNumber: 9\n  }, this);\n};\n\n// Utility function to shuffle an array (Fisher-Yates)\n_c8 = WinnerPage;\nconst shuffleArray = array => {\n  let currentIndex = array.length,\n    randomIndex;\n  while (currentIndex !== 0) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n    [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n  }\n  return array;\n};\n\n// Utility function to get a random prompt that hasn't been played yet\nconst getRandomPrompt = (promptCards, playedPrompts) => {\n  const availablePrompts = promptCards.filter(p => !playedPrompts.some(pp => pp.text === p.text && pp.type === p.type));\n  if (availablePrompts.length === 0) {\n    // If all prompts have been played, reset history and start over (or handle game end)\n    console.warn(\"All prompts played for this category. Resetting prompt history.\");\n    return promptCards[Math.floor(Math.random() * promptCards.length)]; // Pick any if exhausted\n  }\n  const randomIndex = Math.floor(Math.random() * availablePrompts.length);\n  return availablePrompts[randomIndex];\n};\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"MessageModal\");\n$RefreshReg$(_c2, \"App\");\n$RefreshReg$(_c3, \"HomePage\");\n$RefreshReg$(_c4, \"LobbyPage\");\n$RefreshReg$(_c5, \"GamePage\");\n$RefreshReg$(_c6, \"GameRound\");\n$RefreshReg$(_c7, \"LeaderboardPage\");\n$RefreshReg$(_c8, \"WinnerPage\");","map":{"version":3,"names":["React","useState","useEffect","initializeApp","getAuth","signInWithCustomToken","onAuthStateChanged","getFirestore","doc","addDoc","updateDoc","deleteDoc","onSnapshot","collection","query","where","arrayUnion","serverTimestamp","getDocs","jsxDEV","_jsxDEV","Fragment","_Fragment","firebaseConfig","JSON","parse","process","env","REACT_APP_FIREBASE_CONFIG","appId","REACT_APP_ID","app","db","auth","generateId","Math","random","toString","substring","PROMPT_CARDS","type","pillar","text","ANSWER_CARDS","MessageModal","message","onClose","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","App","_s","userId","setUserId","currentPage","setCurrentPage","gameId","setGameId","gameData","setGameData","setMessage","isAuthReady","setIsAuthReady","playerName","setPlayerName","SESSION_USER_ID_KEY","unsubscribe","currentUser","initialAuthToken","REACT_APP_INITIAL_AUTH_TOKEN","error","console","uid","tempUserId","sessionStorage","getItem","crypto","randomUUID","setItem","log","gameDocRef","unsubscribeGame","docSnap","exists","data","status","showMessage","msg","setTimeout","content","HomePage","LobbyPage","GamePage","LeaderboardPage","onNextRound","handleNextRound","WinnerPage","onPlayAgain","_c2","_s2","joinCode","setJoinCode","handleCreateGame","trim","categories","Object","keys","randomCategory","floor","length","gameCode","toUpperCase","initialPlayers","id","name","score","isHost","hand","shuffleArray","slice","hasSubmitted","hasVoted","newGameRef","hostId","category","currentRound","maxRounds","currentPrompt","players","submittedAnswers","votes","createdAt","promptHistory","answerCardPool","handleJoinGame","q","querySnapshot","empty","gameDoc","docs","gameRef","playerHand","placeholder","value","onChange","e","target","maxLength","_c3","values","canStartGame","handleStartGame","promptCardsForCategory","initialPromptHistory","updatedPlayers","pId","currentHand","cardsNeeded","newCards","remainingPool","initialPrompt","getRandomPrompt","push","map","player","disabled","_c4","GameRound","_c5","_s3","selectedCard","setSelectedCard","customAnswer","setCustomAnswer","nominationData","setNominationData","nominatedPlayerId","justification","selectedVote","setSelectedVote","currentPlayer","playersInGame","handleSelectCard","card","handleCustomAnswerChange","handleNominationChange","field","prev","handleSubmitAnswer","answerContent","submissionId","updates","filter","playerId","answer","voters","submittedCount","catch","handleVote","submission","votersCount","p","allPlayersVoted","winningSubmission","maxVotes","subId","sub","currentWinningSubmission","winningPlayerId","nextRound","newPrompt","updatedPromptHistory","currentAnswerCardPool","warn","hasSubmittedThisRound","hasVotedThisRound","dangerouslySetInnerHTML","__html","replace","index","_gameData$players$sub","submitterName","isMySubmission","isMyNominationOrNominee","cardText","_gameData$players$sub2","nominatedPlayerName","_c6","sortedPlayers","sort","a","b","winningAnswerText","winningPlayerName","_gameData$players$win","_gameData$players$win2","_c7","winner","winnerHeadline","handleDeleteGame","performDeleteGame","_c8","array","currentIndex","randomIndex","promptCards","playedPrompts","availablePrompts","some","pp","$RefreshReg$"],"sources":["C:/Users/inava/online-game/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { initializeApp } from 'firebase/app';\r\nimport { getAuth, signInWithCustomToken, onAuthStateChanged } from 'firebase/auth';\r\nimport { getFirestore, doc, addDoc, updateDoc, deleteDoc, onSnapshot, collection, query, where, arrayUnion, serverTimestamp, getDocs } from 'firebase/firestore';\r\n\r\n// Firebase configuration from environment variables\r\nconst firebaseConfig = JSON.parse(process.env.REACT_APP_FIREBASE_CONFIG || '{}');\r\nconst appId = process.env.REACT_APP_ID || 'default-app-id';\r\n\r\n// Initialize Firebase outside the component to avoid re-initialization\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getFirestore(app);\r\nconst auth = getAuth(app);\r\n\r\n// Helper for generating unique IDs (not cryptographically secure, but fine for game items)\r\nconst generateId = () => Math.random().toString(36).substring(2, 11);\r\n\r\n// Pre-defined game data\r\nconst PROMPT_CARDS = {\r\n    \"First Dates\": [\r\n        { type: \"fill\", pillar: \"Boundaries\", text: \"My date set a clear boundary by stating they wouldn't discuss anything before __________________.\" },\r\n        { type: \"fill\", pillar: \"Communication\", text: \"I knew there would be communication challenges when their opening line was, 'So, do you believe in __________________?'\" },\r\n        { type: \"fill\", pillar: \"Respect\", text: \"My date showed a shocking lack of respect when they started __________________ mid-conversation.\" },\r\n        { type: \"thisSoundsLike\", pillar: \"Compromise\", text: \"This sounds like... someone who, on a first date, orders for both of you and then says, 'No compromise on the appetizers!'\" },\r\n        { type: \"fill\", pillar: \"Boundaries\", text: \"The biggest red flag on our first date was when they instantly started talking about __________________.\" },\r\n        { type: \"fill\", pillar: \"Communication\", text: \"Their idea of 'getting to know you' involved asking about my __________________.\" },\r\n        { type: \"fill\", pillar: \"Respect\", text: \"I lost all respect for them when they pulled out a __________________ at the table.\" },\r\n        { type: \"thisSoundsLike\", pillar: \"Boundaries\", text: \"This sounds like... someone who brings their ex to a first date as a 'wingman'.\" },\r\n    ],\r\n    \"Proposals & Engagements\": [\r\n        { type: \"fill\", pillar: \"Compromise\", text: \"When I tried to compromise on the wedding theme, they firmly stated, 'It's either __________________ or nothing!'\" },\r\n        { type: \"fill\", pillar: \"Communication\", text: \"They proposed using an elaborate code only they understood, which made for terrible __________________.\" },\r\n        { type: \"fill\", pillar: \"Respect\", text: \"My partner showed their true respect for my wishes by including __________________ in the engagement announcement.\" },\r\n        { type: \"thisSoundsLike\", pillar: \"Boundaries\", text: \"This sounds like... someone whose engagement photo shoot involved breaking into a national park for 'the perfect shot,' ignoring all signs.\" },\r\n        { type: \"fill\", pillar: \"Compromise\", text: \"Our engagement almost ended when we couldn't compromise on __________________.\" },\r\n        { type: \"fill\", pillar: \"Communication\", text: \"The proposal would have been perfect if only their communication hadn't involved __________________.\" },\r\n        { type: \"fill\", pillar: \"Respect\", text: \"I knew they respected me when their proposal included a promise to never __________________.\" },\r\n        { type: \"thisSoundsLike\", pillar: \"Communication\", text: \"This sounds like... a proposal delivered via carrier pigeon, with a misspelled 'marry' note.\" },\r\n    ],\r\n    \"Family & Children\": [\r\n        { type: \"fill\", pillar: \"Communication\", text: \"My partner and I communicate solely through __________________ when discussing bedtime routines.\" },\r\n        { type: \"fill\", pillar: \"Boundaries\", text: \"My in-laws always cross the boundary by __________________ every time they visit.\" },\r\n        { type: \"fill\", pillar: \"Respect\", text: \"Our toddler shows respect for household rules by __________________ at bedtime.\" },\r\n        { type: \"thisSoundsLike\", pillar: \"Compromise\", text: \"This sounds like... someone who, during a family road trip, insists on listening to their obscure polka music playlist for eight hours straight with no compromise.\" },\r\n        { type: \"fill\", pillar: \"Communication\", text: \"Family dinners often devolve into chaos when someone mentions __________________.\" },\r\n        { type: \"fill\", pillar: \"Boundaries\", text: \"We had to set a strict boundary about __________________ after the last family gathering.\" },\r\n        { type: \"fill\", pillar: \"Respect\", text: \"Our kids finally learned respect when we introduced the rule about __________________.\" },\r\n        { type: \"thisSoundsLike\", pillar: \"Boundaries\", text: \"This sounds like... parents who track their adult children's every move using a GPS chip.\" },\r\n    ],\r\n    \"Friends with Benefits (FWB)\": [\r\n        { type: \"fill\", pillar: \"Boundaries\", text: \"Our FWB arrangement works because we both respect the boundary of never discussing __________________.\" },\r\n        { type: \"fill\", pillar: \"Communication\", text: \"They suggested we communicate solely through __________________ to keep things strictly casual.\" },\r\n        { type: \"fill\", pillar: \"Compromise\", text: \"The biggest compromise in our FWB situation was agreeing to __________________.\" },\r\n        { type: \"thisSoundsLike\", pillar: \"Respect\", text: \"This sounds like... someone who shows respect for their FWB's space by only 'dropping by' unannounced at 3 AM.\" },\r\n        { type: \"fill\", pillar: \"Boundaries\", text: \"The moment our FWB boundary was crossed was when they started leaving __________________ at my place.\" },\r\n        { type: \"fill\", pillar: \"Communication\", text: \"Our FWB 'talks' often involved more __________________ than actual words.\" },\r\n        { type: \"fill\", pillar: \"Compromise\", text: \"We finally had to compromise on whether our FWB status included __________________.\" },\r\n        { type: \"thisSoundsLike\", pillar: \"Communication\", text: \"This sounds like... an FWB who communicates exclusively through cryptic TikTok dances.\" },\r\n    ],\r\n    \"Long-Term Relationships & Marriage\": [\r\n        { type: \"fill\", pillar: \"Communication\", text: \"After 10 years of marriage, we've mastered the art of communicating solely through __________________.\" },\r\n        { type: \"fill\", pillar: \"Respect\", text: \"Our secret to a happy marriage is respecting each other's need for __________________.\" },\r\n        { type: \"fill\", pillar: \"Compromise\", text: \"We knew our compromise skills were peak when we finally agreed on __________________ for dinner.\" },\r\n        { type: \"thisSoundsLike\", pillar: \"Boundaries\", text: \"This sounds like... a couple whose idea of healthy boundaries involves separate houses in different states.\" },\r\n        { type: \"fill\", pillar: \"Communication\", text: \"The key to our long-term happiness is never discussing __________________.\" },\r\n        { type: \"fill\", pillar: \"Respect\", text: \"My partner truly respects my need for solitude by always __________________.\" },\r\n        { type: \"fill\", pillar: \"Compromise\", text: \"Our biggest compromise yet involved deciding on __________________ for our anniversary.\" },\r\n        { type: \"thisSoundsLike\", pillar: \"Compromise\", text: \"This sounds like... a couple who compromises on vacation destinations by alternating between a swamp tour and a taxidermy convention.\" },\r\n    ],\r\n    \"Breakups & Moving On\": [\r\n        { type: \"fill\", pillar: \"Boundaries\", text: \"After the breakup, I learned to respect my own boundaries by refusing to __________________.\" },\r\n        { type: \"fill\", pillar: \"Compromise\", text: \"My ex tried to compromise on splitting our possessions by offering me __________________.\" },\r\n        { type: \"fill\", pillar: \"Communication\", text: \"The most effective post-breakup communication we had involved __________________.\" },\r\n        { type: \"thisSoundsLike\", pillar: \"Respect\", text: \"This sounds like... someone who, to show respect for their ex's new relationship, sends them a framed photo of their ex's ex every holiday.\" },\r\n        { type: \"fill\", pillar: \"Boundaries\", text: \"Setting a boundary about __________________ was crucial for my healing after the breakup.\" },\r\n        { type: \"fill\", pillar: \"Compromise\", text: \"There was no compromise possible when it came to who kept __________________.\" },\r\n        { type: \"fill\", pillar: \"Communication\", text: \"Our post-breakup communication strategy was strictly limited to __________________.\" },\r\n        { type: \"thisSoundsLike\", pillar: \"Boundaries\", text: \"This sounds like... someone who 'moves on' by getting a tattoo of their ex's face, but with devil horns.\" },\r\n    ]\r\n};\r\n\r\nconst ANSWER_CARDS = [\r\n    \"a pet rock named 'Gary'\", \"my extensive collection of toenail clippings\", \"the concept of personal hygiene\",\r\n    \"a five-hour interpretive dance\", \"my imaginary friend, Bartholomew\", \"the meaning of life, according to a squirrel\",\r\n    \"their ex's entire family tree\", \"a spontaneous trip to the moon\", \"a heated debate about flat earth theories\",\r\n    \"my obsession with competitive eating\", \"the ghost of my past relationship\", \"a really bad karaoke performance\",\r\n    \"a detailed PowerPoint presentation on my insecurities\", \"my unique collection of lint\", \"a crying baby simulator\",\r\n    \"the sound of a kazoo orchestra\", \"their unedited diary entries from middle school\", \"a sock puppet show\",\r\n    \"the recipe for my grandma's infamous fruitcake\", \"a detailed analysis of my dream journal\", \"their pet goldfish\",\r\n    \"a surprise visit from a mariachi band\", \"a 30-page manifesto on why cats are superior to dogs\", \"my crippling fear of ducks\",\r\n    \"a life-sized cardboard cutout of myself\", \"the exact moment I realized I was allergic to gluten\", \"my collection of antique staplers\",\r\n    \"a detailed explanation of quantum physics\", \"their personal alien abduction story\", \"a single, lonely potato\",\r\n    \"the dark secrets of my childhood treehouse\", \"my profound love for glitter\", \"a dramatic re-enactment of my last dentist visit\",\r\n    \"a squirrel dressed as a tiny chef\", \"my secret talent for burping the alphabet backwards\", \"a miniature alpaca farm\",\r\n    \"the lingering smell of old gym socks\", \"my deep philosophical thoughts on cheese\", \"a very aggressive snail\",\r\n    \"a conspiracy theory involving garden gnomes\", \"my questionable fashion choices from the 90s\", \"the universal language of farts\",\r\n    \"a spontaneous opera performance\", \"my collection of rare, vintage sporks\", \"the exact number of hairs on my head\",\r\n    \"a detailed map of my internal organs\", \"my uncanny ability to predict the weather with my knee\", \"a flock of angry pigeons\",\r\n    \"my personal brand of awkward silence\", \"a very confused mime\", \"the entire script of a terrible B-movie\",\r\n    \"a deep dive into celebrity gossip from 2003\", \"my most embarrassing childhood story, told in interpretive dance\", \"a rogue tumbleweed\",\r\n    \"my collection of forgotten dreams\", \"a perpetually confused stare\", \"the subtle art of passive aggression\",\r\n    \"a commitment to never folding laundry again\", \"the true identity of Santa Claus\", \"a never-ending loop of elevator music\",\r\n    \"my inability to tell left from right\", \"a lifetime supply of questionable advice\", \"the secret to perfect toast\",\r\n    \"a spontaneous act of kindness towards a pigeon\", \"my irrational fear of balloons\", \"a detailed budget of my impulse purchases\",\r\n    \"the surprising history of garden hoses\", \"my unwavering dedication to napping\", \"a profound appreciation for mundane objects\",\r\n    \"my personal record for most consecutive sneezes\", \"a hidden talent for imitating barnyard animals\", \"the shocking truth about socks\",\r\n    \"my unwavering belief in unicorns\", \"a detailed analysis of my coffee preferences\", \"the silent language of eyebrow raises\",\r\n    \"a deep philosophical debate about condiments\", \"my surprising expertise in competitive napping\", \"the existential dread of a Monday morning\",\r\n    \"a profound understanding of cat psychology\", \"my secret stash of emergency chocolate\", \"the art of graceful awkwardness\",\r\n    \"a detailed plan for world domination (starting with my pantry)\", \"my most cherished collection of bottle caps\", \"the subtle nuances of air guitar\",\r\n    \"a profound appreciation for bad puns\", \"my impressive ability to procrastinate creatively\", \"the surprising comfort of mismatched socks\",\r\n    \"a detailed study of dust bunnies\", \"my personal philosophy on the optimal way to butter toast\", \"the quiet rebellion of untamed hair\",\r\n    \"a deep contemplation of the universe while staring at a ceiling fan\", \"my unwavering commitment to collecting novelty erasers\", \"the dramatic flair of a well-timed eye-roll\"\r\n];\r\n\r\n// Component for displaying temporary messages/modals instead of alerts\r\nconst MessageModal = ({ message, onClose }) => {\r\n    if (!message) return null;\r\n    return (\r\n        <div className=\"fixed inset-0 bg-gray-900 bg-opacity-75 flex items-center justify-center z-50 p-4\">\r\n            <div className=\"bg-white rounded-lg p-6 shadow-xl max-w-sm w-full text-center\">\r\n                <p className=\"text-xl font-semibold mb-4 text-gray-800\">{message}</p>\r\n                <button\r\n                    onClick={onClose}\r\n                    className=\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-6 rounded-full transition duration-300 transform hover:scale-105\"\r\n                >\r\n                    OK\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// Main App Component\r\nfunction App() {\r\n    const [userId, setUserId] = useState(null);\r\n    const [currentPage, setCurrentPage] = useState('home'); // home, lobby, game, leaderboard, winner\r\n    const [gameId, setGameId] = useState(null);\r\n    const [gameData, setGameData] = useState(null);\r\n    const [message, setMessage] = useState(null);\r\n    const [isAuthReady, setIsAuthReady] = useState(false);\r\n    const [playerName, setPlayerName] = useState(''); // New state for player nickname\r\n\r\n    // Auth state listener and initial sign-in logic\r\n    useEffect(() => {\r\n        const SESSION_USER_ID_KEY = 'redFlagsGameTempUserId';\r\n\r\n        const unsubscribe = onAuthStateChanged(auth, async (currentUser) => {\r\n            const initialAuthToken = process.env.REACT_APP_INITIAL_AUTH_TOKEN;\r\n            if (initialAuthToken) {\r\n                // If an initial auth token is provided (e.g., from the Canvas environment)\r\n                // Use Firebase authentication with the provided token.\r\n                if (!currentUser) {\r\n                    try {\r\n                        await signInWithCustomToken(auth, initialAuthToken);\r\n                    } catch (error) {\r\n                        console.error(\"Firebase Auth Error with custom token:\", error);\r\n                        setMessage(`Authentication failed: ${error.message}. Please refresh.`);\r\n                    }\r\n                }\r\n                // Once authenticated, set the user and their UID from Firebase.\r\n                if (auth.currentUser) {\r\n                    setUserId(auth.currentUser.uid);\r\n                    // Set default player name if not already set, or load from storage\r\n                    if (!playerName) {\r\n                        setPlayerName(`Player ${auth.currentUser.uid.substring(0, 4)}`);\r\n                    }\r\n                }\r\n            } else {\r\n                // If no initial auth token (e.g., in a standalone browser tab for testing)\r\n                // Generate and use a temporary, session-based user ID.\r\n                let tempUserId = sessionStorage.getItem(SESSION_USER_ID_KEY);\r\n                if (!tempUserId) {\r\n                    tempUserId = `guest_${crypto.randomUUID()}`; // Generate a unique ID\r\n                    sessionStorage.setItem(SESSION_USER_ID_KEY, tempUserId);\r\n                    console.log(\"Generated new session userId:\", tempUserId);\r\n                } else {\r\n                    console.log(\"Reusing session userId:\", tempUserId);\r\n                }\r\n\r\n                setUserId(tempUserId); // Use the session ID as the userId\r\n                // Set default player name for guest\r\n                if (!playerName) {\r\n                    setPlayerName(`Player ${tempUserId.substring(0, 4)}`);\r\n                }\r\n            }\r\n            setIsAuthReady(true); // Auth listener has completed its initial check or temp ID is set\r\n        });\r\n        return () => unsubscribe();\r\n    }, [playerName]); // Added playerName to dependencies to prevent re-rendering issues\r\n\r\n\r\n    // Firebase game data listener\r\n    useEffect(() => {\r\n        if (!gameId || !isAuthReady || !userId) return; // Ensure auth and user are ready\r\n\r\n        const gameDocRef = doc(db, `artifacts/${appId}/public/data/games`, gameId);\r\n        const unsubscribeGame = onSnapshot(gameDocRef, (docSnap) => {\r\n            if (docSnap.exists()) {\r\n                const data = docSnap.data();\r\n                setGameData(data);\r\n                // Navigate based on game status\r\n                if (data.status === 'playing' || data.status === 'submission' || data.status === 'voting') {\r\n                    setCurrentPage('game');\r\n                } else if (data.status === 'round_end') {\r\n                    setCurrentPage('leaderboard');\r\n                } else if (data.status === 'game_over') {\r\n                    setCurrentPage('winner');\r\n                } else if (data.status === 'lobby') {\r\n                    setCurrentPage('lobby');\r\n                }\r\n            } else {\r\n                console.log(\"Game does not exist or has been deleted.\");\r\n                setGameId(null);\r\n                setGameData(null);\r\n                setCurrentPage('home');\r\n                setMessage(\"Game not found or ended.\");\r\n            }\r\n        }, (error) => {\r\n            console.error(\"Error listening to game data:\", error);\r\n            setMessage(\"Failed to load game data. Please try again.\");\r\n        });\r\n\r\n        return () => unsubscribeGame();\r\n    }, [gameId, isAuthReady, userId]);\r\n\r\n    const showMessage = (msg) => {\r\n        setMessage(msg);\r\n        setTimeout(() => setMessage(null), 5000); // Clear message after 5 seconds\r\n    };\r\n\r\n    // Render based on current page\r\n    let content;\r\n    switch (currentPage) {\r\n        case 'home':\r\n            content = <HomePage setCurrentPage={setCurrentPage} setGameId={setGameId} userId={userId} showMessage={showMessage} playerName={playerName} setPlayerName={setPlayerName} />;\r\n            break;\r\n        case 'lobby':\r\n            content = <LobbyPage gameData={gameData} gameId={gameId} userId={userId} showMessage={showMessage} />;\r\n            break;\r\n        case 'game':\r\n            content = <GamePage gameData={gameData} gameId={gameId} userId={userId} showMessage={showMessage} />;\r\n            break;\r\n        case 'leaderboard':\r\n            content = <LeaderboardPage gameData={gameData} userId={userId} onNextRound={handleNextRound} />;\r\n            break;\r\n        case 'winner':\r\n            content = <WinnerPage gameData={gameData} userId={userId} onPlayAgain={() => {\r\n                setGameId(null);\r\n                setGameData(null);\r\n                setCurrentPage('home');\r\n            }} setMessage={setMessage} />;\r\n            break;\r\n        default:\r\n            content = <HomePage setCurrentPage={setCurrentPage} setGameId={setGameId} userId={userId} showMessage={showMessage} playerName={playerName} setPlayerName={setPlayerName} />;\r\n    }\r\n\r\n    if (!isAuthReady) {\r\n        return (\r\n            <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-purple-800 via-pink-600 to-red-500 text-white font-inter\">\r\n                <p className=\"text-3xl animate-pulse\">Loading game...</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"min-h-screen bg-gradient-to-br from-purple-800 via-pink-600 to-red-500 text-white font-inter flex flex-col items-center justify-center p-4\">\r\n            <MessageModal message={message} onClose={() => setMessage(null)} />\r\n            <h1 className=\"text-5xl md:text-6xl font-extrabold text-center mb-8 drop-shadow-lg leading-tight\">\r\n                Red Flags & Relationship Goals\r\n            </h1>\r\n            <p className=\"text-lg md:text-xl text-center mb-6 text-white text-opacity-90\">\r\n                Your Player ID: <span className=\"font-mono bg-white bg-opacity-20 rounded-md px-3 py-1 break-all\">{userId}</span>\r\n            </p>\r\n            <div className=\"w-full max-w-4xl bg-white bg-opacity-10 backdrop-filter backdrop-blur-sm rounded-3xl shadow-2xl p-6 md:p-10 border border-white border-opacity-30\">\r\n                {content}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n// HomePage Component\r\nconst HomePage = ({ setCurrentPage, setGameId, userId, showMessage, playerName, setPlayerName }) => {\r\n    const [joinCode, setJoinCode] = useState('');\r\n\r\n    const handleCreateGame = async () => {\r\n        if (!playerName.trim()) {\r\n            showMessage(\"Please enter your nickname.\");\r\n            return;\r\n        }\r\n        try {\r\n            const categories = Object.keys(PROMPT_CARDS);\r\n            const randomCategory = categories[Math.floor(Math.random() * categories.length)];\r\n            const gameCode = Math.random().toString(36).substring(2, 8).toUpperCase(); // 6-char code\r\n            console.log(\"Generated Game Code:\", gameCode); // Debugging log\r\n\r\n            const initialPlayers = {};\r\n            // Use the userId passed from App component (which is now guaranteed unique per tab)\r\n            initialPlayers[userId] = {\r\n                id: userId, // Added unique ID for the player object\r\n                name: playerName.trim(), // Use custom player name\r\n                score: 0,\r\n                isHost: true,\r\n                hand: shuffleArray([...ANSWER_CARDS]).slice(0, 10), // Give 10 unique cards\r\n                hasSubmitted: false,\r\n                hasVoted: false\r\n            };\r\n\r\n            const newGameRef = await addDoc(collection(db, `artifacts/${appId}/public/data/games`), {\r\n                hostId: userId,\r\n                category: randomCategory,\r\n                currentRound: 1,\r\n                maxRounds: 10,\r\n                currentPrompt: null,\r\n                status: 'lobby', // lobby, submission, voting, round_end, game_over\r\n                players: initialPlayers,\r\n                submittedAnswers: {},\r\n                votes: {},\r\n                gameCode: gameCode, // Ensure gameCode is always a string\r\n                createdAt: serverTimestamp(),\r\n                promptHistory: [], // To store played prompts\r\n                answerCardPool: shuffleArray([...ANSWER_CARDS]), // All available answer cards\r\n            });\r\n            console.log(`Game created with Firestore path: artifacts/${appId}/public/data/games/${newGameRef.id}`); // New debugging log with full path\r\n            setGameId(newGameRef.id);\r\n            setCurrentPage('lobby');\r\n            showMessage(`Game created! Share code: ${gameCode}`);\r\n        } catch (error) {\r\n            console.error(\"Error creating game:\", error);\r\n            showMessage(\"Failed to create game. Please try again.\");\r\n        }\r\n    };\r\n\r\n    const handleJoinGame = async () => {\r\n        if (!playerName.trim()) {\r\n            showMessage(\"Please enter your nickname.\");\r\n            return;\r\n        }\r\n        if (!joinCode) {\r\n            showMessage(\"Please enter a game code.\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            console.log(`Attempting to query Firestore for collection: artifacts/${appId}/public/data/games with gameCode: ${joinCode.toUpperCase()}`); // More detailed debugging log\r\n            const q = query(collection(db, `artifacts/${appId}/public/data/games`), where(\"gameCode\", \"==\", joinCode.toUpperCase()));\r\n            const querySnapshot = await getDocs(q);\r\n            console.log(\"Query Snapshot empty:\", querySnapshot.empty); // Debugging log\r\n\r\n            if (!querySnapshot.empty) {\r\n                const gameDoc = querySnapshot.docs[0];\r\n                const gameData = gameDoc.data();\r\n                const gameRef = doc(db, `artifacts/${appId}/public/data/games`, gameDoc.id);\r\n\r\n                if (gameData.players[userId]) {\r\n                    showMessage(\"You are already in this game.\");\r\n                    setGameId(gameDoc.id);\r\n                    setCurrentPage('lobby'); // Go to lobby if already in\r\n                    return;\r\n                }\r\n\r\n                // If joining after game started, give initial cards\r\n                const playerHand = shuffleArray([...ANSWER_CARDS]).slice(0, 10);\r\n\r\n                await updateDoc(gameRef, {\r\n                    [`players.${userId}`]: {\r\n                        id: userId, // Added unique ID for the player object\r\n                        name: playerName.trim(), // Use custom player name\r\n                        score: 0,\r\n                        isHost: false,\r\n                        hand: playerHand,\r\n                        hasSubmitted: false,\r\n                        hasVoted: false\r\n                    }\r\n                });\r\n                setGameId(gameDoc.id);\r\n                setCurrentPage('lobby'); // Will change based on game status from listener\r\n                showMessage(`Joined game ${joinCode}!`);\r\n            } else {\r\n                showMessage(\"Invalid game code.\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error joining game:\", error);\r\n            showMessage(\"Failed to join game. Please try again.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"text-center\">\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Enter your nickname\"\r\n                value={playerName}\r\n                onChange={(e) => setPlayerName(e.target.value)}\r\n                className=\"w-full p-3 rounded-xl bg-white bg-opacity-20 text-white placeholder-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-400 mb-4 text-center\"\r\n                maxLength=\"20\" // Limit nickname length\r\n            />\r\n            <button\r\n                onClick={handleCreateGame}\r\n                className=\"w-full mb-4 bg-gradient-to-r from-blue-500 to-teal-400 hover:from-blue-600 hover:to-teal-500 text-white font-bold py-4 px-8 rounded-full shadow-lg transition duration-300 transform hover:scale-105\"\r\n            >\r\n                Create New Game\r\n            </button>\r\n            <div className=\"mb-6\">\r\n                <p className=\"text-gray-200 mb-2\">OR</p>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter Game Code\"\r\n                    value={joinCode}\r\n                    onChange={(e) => setJoinCode(e.target.value)}\r\n                    className=\"w-full p-3 rounded-xl bg-white bg-opacity-20 text-white placeholder-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-400 mb-3 text-center uppercase\"\r\n                    maxLength=\"6\"\r\n                />\r\n                <button\r\n                    onClick={handleJoinGame}\r\n                    className=\"w-full bg-gradient-to-r from-green-500 to-lime-400 hover:from-green-600 hover:to-lime-500 text-white font-bold py-4 px-8 rounded-full shadow-lg transition duration-300 transform hover:scale-105\"\r\n                >\r\n                    Join Game\r\n                </button>\r\n            </div>\r\n            <p className=\"text-sm text-gray-300 mt-4\">\r\n                Minimum 2 players needed to start a game.\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\n// LobbyPage Component\r\nconst LobbyPage = ({ gameData, gameId, userId, showMessage }) => {\r\n    if (!gameData) return <p className=\"text-center text-xl text-gray-200\">Loading lobby...</p>;\r\n\r\n    const players = Object.values(gameData.players || {});\r\n    const isHost = gameData.hostId === userId;\r\n    const canStartGame = players.length >= 2;\r\n    const gameCode = gameData.gameCode;\r\n\r\n    const handleStartGame = async () => {\r\n        if (!isHost) return;\r\n        if (!canStartGame) {\r\n            showMessage(\"Need at least 2 players to start the game.\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const gameRef = doc(db, `artifacts/${appId}/public/data/games`, gameId);\r\n            const promptCardsForCategory = PROMPT_CARDS[gameData.category];\r\n\r\n            // Initialize played prompts to avoid duplicates\r\n            const initialPromptHistory = [];\r\n\r\n            // Reset player states for new game\r\n            const updatedPlayers = {};\r\n            for (const pId in gameData.players) {\r\n                // Replenish player hands for the new round\r\n                const currentHand = gameData.players[pId].hand || [];\r\n                const cardsNeeded = 10 - currentHand.length;\r\n                const newCards = gameData.answerCardPool.slice(0, cardsNeeded);\r\n                const remainingPool = gameData.answerCardPool.slice(cardsNeeded);\r\n\r\n                updatedPlayers[pId] = {\r\n                    ...gameData.players[pId],\r\n                    score: 0, // Reset scores for new game\r\n                    hand: [...currentHand, ...newCards], // Replenish hand\r\n                    hasSubmitted: false,\r\n                    hasVoted: false\r\n                };\r\n                gameData.answerCardPool = remainingPool; // Update pool immediately for next player in loop\r\n            }\r\n\r\n            // Draw initial prompt\r\n            const initialPrompt = getRandomPrompt(promptCardsForCategory, initialPromptHistory);\r\n            initialPromptHistory.push(initialPrompt); // Add to history\r\n\r\n            await updateDoc(gameRef, {\r\n                status: 'submission', // Start the game in submission phase\r\n                currentRound: 1,\r\n                currentPrompt: initialPrompt,\r\n                promptHistory: initialPromptHistory,\r\n                players: updatedPlayers,\r\n                submittedAnswers: {},\r\n                votes: {},\r\n                answerCardPool: gameData.answerCardPool, // Save updated pool to Firestore\r\n            });\r\n        } catch (error) {\r\n            console.error(\"Error starting game:\", error);\r\n            showMessage(\"Failed to start game. Please try again.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"text-center p-4\">\r\n            <h2 className=\"text-4xl font-bold mb-4 text-white\">Game Lobby</h2>\r\n            <p className=\"text-xl text-gray-200 mb-6\">\r\n                Game Code: <span className=\"font-bold text-yellow-300\">{gameCode}</span>\r\n            </p>\r\n            <p className=\"text-lg text-gray-200 mb-2\">Category: <span className=\"font-semibold text-pink-200\">{gameData.category}</span></p>\r\n            <p className=\"text-lg text-gray-200 mb-4\">Players Connected:</p>\r\n            <ul className=\"list-disc list-inside text-left mx-auto max-w-xs mb-8 text-gray-100\">\r\n                {players.map(player => (\r\n                    <li key={player.id} className=\"py-1\">\r\n                        {player.name} {player.isHost && \"(Host)\"}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            {isHost && (\r\n                <button\r\n                    onClick={handleStartGame}\r\n                    disabled={!canStartGame}\r\n                    className={`w-full py-4 px-8 rounded-full shadow-lg transition duration-300 transform ${\r\n                        canStartGame\r\n                            ? 'bg-gradient-to-r from-purple-500 to-indigo-600 hover:from-purple-600 hover:to-indigo-700 text-white font-bold hover:scale-105'\r\n                            : 'bg-gray-600 text-gray-300 cursor-not-allowed'\r\n                    }`}\r\n                >\r\n                    {canStartGame ? 'Start Game' : `Need ${2 - players.length} more player(s) to start`}\r\n                </button>\r\n            )}\r\n            {!isHost && (\r\n                <p className=\"text-xl text-gray-300 italic\">Waiting for host to start the game!</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\n// GamePage Component\r\nconst GamePage = ({ gameData, gameId, userId, showMessage }) => {\r\n    if (!gameData || !gameData.currentPrompt) {\r\n        return <p className=\"text-center text-xl text-gray-200\">Waiting for game to start...</p>;\r\n    }\r\n\r\n    return <GameRound gameData={gameData} gameId={gameId} userId={userId} showMessage={showMessage} />;\r\n};\r\n\r\nconst GameRound = ({ gameData, gameId, userId, showMessage }) => {\r\n    // State for player's current action\r\n    const [selectedCard, setSelectedCard] = useState(null);\r\n    const [customAnswer, setCustomAnswer] = useState('');\r\n    const [nominationData, setNominationData] = useState({ nominatedPlayerId: '', justification: '' });\r\n    const [selectedVote, setSelectedVote] = useState(null);\r\n\r\n    const gameRef = doc(db, `artifacts/${appId}/public/data/games`, gameId);\r\n    const currentPlayer = gameData.players[userId];\r\n    const isHost = gameData.hostId === userId;\r\n    const currentPrompt = gameData.currentPrompt;\r\n    const submittedAnswers = Object.values(gameData.submittedAnswers || {});\r\n    const playersInGame = Object.values(gameData.players || {});\r\n\r\n    // Reset local state when game phase changes\r\n    useEffect(() => {\r\n        setSelectedCard(null);\r\n        setCustomAnswer('');\r\n        setNominationData({ nominatedPlayerId: '', justification: '' });\r\n        setSelectedVote(null);\r\n    }, [gameData.status, gameData.currentRound]);\r\n\r\n    const handleSelectCard = (card) => {\r\n        setSelectedCard(card);\r\n        setCustomAnswer(''); // Clear custom answer if a card is selected\r\n    };\r\n\r\n    const handleCustomAnswerChange = (e) => {\r\n        setCustomAnswer(e.target.value);\r\n        setSelectedCard(\"BLANK_CARD_SELECTED\"); // Mark as blank card chosen\r\n    };\r\n\r\n    const handleNominationChange = (field, value) => {\r\n        setNominationData(prev => ({ ...prev, [field]: value }));\r\n    };\r\n\r\n    const handleSubmitAnswer = async () => {\r\n        if (currentPlayer.hasSubmitted) {\r\n            showMessage(\"You have already submitted an answer for this round.\");\r\n            return;\r\n        }\r\n\r\n        let answerContent = '';\r\n        if (currentPrompt.type === 'fill') {\r\n            if (selectedCard === null) {\r\n                showMessage(\"Please select a card or type a custom answer.\");\r\n                return;\r\n            }\r\n            if (selectedCard === \"BLANK_CARD_SELECTED\") {\r\n                if (!customAnswer.trim()) {\r\n                    showMessage(\"Please type your custom answer.\");\r\n                    return;\r\n                }\r\n                answerContent = customAnswer.trim();\r\n            } else {\r\n                answerContent = selectedCard;\r\n            }\r\n        } else if (currentPrompt.type === 'thisSoundsLike') {\r\n            if (!nominationData.nominatedPlayerId || !nominationData.justification.trim()) {\r\n                showMessage(\"Please select a player and provide a justification.\");\r\n                return;\r\n            }\r\n            answerContent = {\r\n                nominatedPlayerId: nominationData.nominatedPlayerId,\r\n                justification: nominationData.justification.trim()\r\n            };\r\n        } else {\r\n            showMessage(\"Invalid prompt type.\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const submissionId = generateId();\r\n            const updates = {\r\n                [`players.${userId}.hasSubmitted`]: true,\r\n                // Only remove the card if it was selected from the hand\r\n                [`players.${userId}.hand`]: currentPrompt.type === 'fill' && selectedCard !== \"BLANK_CARD_SELECTED\"\r\n                    ? currentPlayer.hand.filter(card => card !== selectedCard)\r\n                    : currentPlayer.hand,\r\n                [`submittedAnswers.${submissionId}`]: {\r\n                    id: submissionId,\r\n                    playerId: userId,\r\n                    answer: answerContent,\r\n                    votes: 0,\r\n                    voters: []\r\n                }\r\n            };\r\n\r\n            await updateDoc(gameRef, updates);\r\n            showMessage(\"Answer submitted!\");\r\n        } catch (error) {\r\n            console.error(\"Error submitting answer:\", error);\r\n            showMessage(\"Failed to submit answer. Please try again.\");\r\n        }\r\n    };\r\n\r\n    // Check if all active players have submitted their answers\r\n    const submittedCount = submittedAnswers.length;\r\n\r\n\r\n    // Host manages phase transitions\r\n    useEffect(() => {\r\n        // Only trigger if current phase is 'submission' and all relevant players have submitted\r\n        if (isHost && gameData.status === 'submission' && submittedCount === playersInGame.length && playersInGame.length > 0) {\r\n            updateDoc(gameRef, { status: 'voting' }).catch(e => console.error(\"Error setting status to voting:\", e));\r\n        }\r\n    }, [submittedCount, playersInGame, isHost, gameData.status, gameRef]);\r\n\r\n\r\n    const handleVote = async (submissionId) => {\r\n        if (currentPlayer.hasVoted) {\r\n            showMessage(\"You have already voted this round.\");\r\n            return;\r\n        }\r\n\r\n        const submission = gameData.submittedAnswers[submissionId];\r\n        if (!submission) return;\r\n\r\n        // Prevent voting for own card for fill-in-the-blank\r\n        if (currentPrompt.type === 'fill' && submission.playerId === userId) {\r\n            showMessage(\"You cannot vote for your own answer.\");\r\n            return;\r\n        }\r\n\r\n        // Prevent voting for own nomination or if you are the nominee\r\n        if (currentPrompt.type === 'thisSoundsLike') {\r\n            if (submission.playerId === userId) {\r\n                showMessage(\"You cannot vote for your own nomination.\");\r\n                return;\r\n            }\r\n            if (submission.answer.nominatedPlayerId === userId) {\r\n                showMessage(\"You cannot vote for a nomination where you are the nominee.\");\r\n                return;\r\n            }\r\n        }\r\n\r\n        try {\r\n            await updateDoc(gameRef, {\r\n                [`submittedAnswers.${submissionId}.votes`]: (submission.votes || 0) + 1,\r\n                [`submittedAnswers.${submissionId}.voters`]: arrayUnion(userId),\r\n                [`players.${userId}.hasVoted`]: true\r\n            });\r\n            setSelectedVote(submissionId); // Mark local state\r\n            showMessage(\"Vote cast!\");\r\n        } catch (error) {\r\n            console.error(\"Error casting vote:\", error);\r\n            showMessage(\"Failed to cast vote. Please try again.\");\r\n        }\r\n    };\r\n\r\n    // Check if all players have voted\r\n    const votersCount = playersInGame.filter(p => p.hasVoted).length;\r\n    const allPlayersVoted = votersCount === playersInGame.length;\r\n\r\n\r\n    useEffect(() => {\r\n        // Trigger only if current phase is 'voting' and all players have voted\r\n        if (isHost && gameData.status === 'voting' && allPlayersVoted && votersCount > 0) {\r\n            // All players voted, move to round end phase\r\n            // Calculate winner and update scores\r\n            let winningSubmission = null;\r\n            let maxVotes = -1;\r\n\r\n            for (const subId in gameData.submittedAnswers) {\r\n                const sub = gameData.submittedAnswers[subId];\r\n                if (sub.votes > maxVotes) {\r\n                    maxVotes = sub.votes;\r\n                    winningSubmission = sub;\r\n                } else if (sub.votes === maxVotes) {\r\n                    // Tie-breaker: pick one randomly (or based on submission time if available)\r\n                    if (Math.random() > 0.5) { // Simple random tie-breaker\r\n                        winningSubmission = sub;\r\n                    }\r\n                }\r\n            }\r\n\r\n            const updates = {\r\n                status: 'round_end',\r\n                currentWinningSubmission: winningSubmission ? {\r\n                    id: winningSubmission.id,\r\n                    playerId: winningSubmission.playerId,\r\n                    answer: winningSubmission.answer\r\n                } : null,\r\n            };\r\n\r\n            if (winningSubmission) {\r\n                const winningPlayerId = winningSubmission.playerId;\r\n                updates[`players.${winningPlayerId}.score`] = (gameData.players[winningPlayerId].score || 0) + 1;\r\n            }\r\n\r\n            updateDoc(gameRef, updates).catch(e => console.error(\"Error setting status to round_end:\", e));\r\n        }\r\n    }, [allPlayersVoted, isHost, gameData.status, votersCount, gameData.submittedAnswers, gameData.players, gameRef]); // Added votersCount to dependencies for accuracy\r\n\r\n\r\n    // Host controls advancing rounds / ending game\r\n    const handleNextRound = async () => {\r\n        if (!isHost) return;\r\n\r\n        try {\r\n            const gameRef = doc(db, `artifacts/${appId}/public/data/games`, gameId);\r\n            const nextRound = gameData.currentRound + 1;\r\n\r\n            if (nextRound > gameData.maxRounds) {\r\n                await updateDoc(gameRef, { status: 'game_over' });\r\n            } else {\r\n                const promptCardsForCategory = PROMPT_CARDS[gameData.category];\r\n                const newPrompt = getRandomPrompt(promptCardsForCategory, gameData.promptHistory || []);\r\n                const updatedPromptHistory = arrayUnion(newPrompt); // Add new prompt to history\r\n\r\n                // Reset player states for the new round and replenish hands\r\n                const updatedPlayers = {};\r\n                let currentAnswerCardPool = [...gameData.answerCardPool]; // Make a mutable copy\r\n\r\n                for (const pId in gameData.players) {\r\n                    const player = gameData.players[pId];\r\n                    let currentHand = player.hand || [];\r\n                    const cardsNeeded = 10 - currentHand.length; // Ensure hand size is 10\r\n\r\n                    let newCards = [];\r\n                    if (cardsNeeded > 0) {\r\n                        if (currentAnswerCardPool.length < cardsNeeded) {\r\n                            // If pool runs low, replenish it with all ANSWER_CARDS shuffled\r\n                            currentAnswerCardPool = shuffleArray([...ANSWER_CARDS]);\r\n                            console.warn(\"Answer card pool replenished by reshuffling all cards.\");\r\n                        }\r\n                        newCards = currentAnswerCardPool.slice(0, cardsNeeded);\r\n                        currentAnswerCardPool = currentAnswerCardPool.slice(cardsNeeded);\r\n                    }\r\n\r\n                    updatedPlayers[pId] = {\r\n                        ...player,\r\n                        hand: [...currentHand, ...newCards], // Replenish hand\r\n                        hasSubmitted: false,\r\n                        hasVoted: false\r\n                    };\r\n                }\r\n\r\n                await updateDoc(gameRef, {\r\n                    status: 'submission',\r\n                    currentRound: nextRound,\r\n                    currentPrompt: newPrompt,\r\n                    promptHistory: updatedPromptHistory,\r\n                    players: updatedPlayers,\r\n                    submittedAnswers: {}, // Clear submissions for new round\r\n                    votes: {}, // Clear votes for new round\r\n                    currentWinningSubmission: null, // Clear winning submission from previous round\r\n                    answerCardPool: currentAnswerCardPool, // Save the updated pool state\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error advancing round:\", error);\r\n            showMessage(\"Failed to advance round. Please try again.\");\r\n        }\r\n    };\r\n\r\n\r\n    const playerHand = currentPlayer?.hand || [];\r\n    const hasSubmittedThisRound = currentPlayer?.hasSubmitted;\r\n    const hasVotedThisRound = currentPlayer?.hasVoted;\r\n\r\n    return (\r\n        <div className=\"flex flex-col items-center justify-center space-y-6\">\r\n            <div className=\"text-center bg-white bg-opacity-20 rounded-xl p-4 md:p-6 shadow-xl w-full max-w-2xl border border-white border-opacity-30\">\r\n                <p className=\"text-xl font-bold text-yellow-200 mb-2\">{currentPrompt.pillar}</p>\r\n                <p className=\"text-3xl md:text-4xl font-extrabold text-white leading-tight\"\r\n                    dangerouslySetInnerHTML={{ __html: currentPrompt.text.replace(/__________________/g, '<span class=\"text-pink-300 underline\">BLANK</span>') }}\r\n                />\r\n                <p className=\"mt-4 text-lg text-gray-200\">\r\n                    Round {gameData.currentRound} of {gameData.maxRounds}\r\n                </p>\r\n            </div>\r\n\r\n            {gameData.status === 'submission' && (\r\n                <div className=\"w-full text-center\">\r\n                    {!hasSubmittedThisRound ? (\r\n                        <>\r\n                            <h3 className=\"text-2xl font-bold text-white mb-4\">Your Turn!</h3>\r\n                            {currentPrompt.type === 'fill' ? (\r\n                                <>\r\n                                    <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4 mb-6\">\r\n                                        {playerHand.map((card, index) => (\r\n                                            <button\r\n                                                key={card + index} // Use card content + index as key for uniqueness\r\n                                                onClick={() => handleSelectCard(card)}\r\n                                                className={`p-4 rounded-xl text-gray-900 font-semibold shadow-md transition transform ${\r\n                                                    selectedCard === card ? 'bg-blue-300 scale-105 ring-4 ring-blue-500' : 'bg-white hover:bg-gray-100 hover:scale-105'\r\n                                                }`}\r\n                                            >\r\n                                                {card}\r\n                                            </button>\r\n                                        ))}\r\n                                        {/* Blank card for custom answer */}\r\n                                        <button\r\n                                            onClick={() => handleSelectCard(\"BLANK_CARD_SELECTED\")}\r\n                                            className={`p-4 rounded-xl text-gray-900 font-semibold shadow-md transition transform ${\r\n                                                selectedCard === \"BLANK_CARD_SELECTED\" ? 'bg-blue-300 scale-105 ring-4 ring-blue-500' : 'bg-yellow-300 hover:bg-yellow-200 hover:scale-105'\r\n                                            }`}\r\n                                        >\r\n                                            Type Your Own!\r\n                                        </button>\r\n                                    </div>\r\n                                    {selectedCard === \"BLANK_CARD_SELECTED\" && (\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            placeholder=\"Type your answer here...\"\r\n                                            value={customAnswer}\r\n                                            onChange={handleCustomAnswerChange}\r\n                                            className=\"w-full p-3 rounded-xl bg-white text-gray-900 placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-400 mb-4\"\r\n                                            maxLength=\"50\" // Limit length for answers\r\n                                        />\r\n                                    )}\r\n                                </>\r\n                            ) : ( // This Sounds Like scenario\r\n                                <div className=\"space-y-4 mb-6\">\r\n                                    <select\r\n                                        value={nominationData.nominatedPlayerId}\r\n                                        onChange={(e) => handleNominationChange('nominatedPlayerId', e.target.value)}\r\n                                        className=\"w-full p-3 rounded-xl bg-white text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-400\"\r\n                                    >\r\n                                        <option value=\"\">Select a player to nominate</option>\r\n                                        {playersInGame.map(p => (\r\n                                            <option key={p.id} value={p.id}>{p.name}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                    <textarea\r\n                                        placeholder=\"Justify your nomination in one short sentence...\"\r\n                                        value={nominationData.justification}\r\n                                        onChange={(e) => handleNominationChange('justification', e.target.value)}\r\n                                        className=\"w-full p-3 rounded-xl bg-white text-gray-900 placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-400 h-24 resize-none\"\r\n                                        maxLength=\"100\" // Limit justification length\r\n                                    ></textarea>\r\n                                </div>\r\n                            )}\r\n                            <button\r\n                                onClick={handleSubmitAnswer}\r\n                                className=\"w-full bg-gradient-to-r from-teal-500 to-cyan-600 hover:from-teal-600 hover:to-cyan-700 text-white font-bold py-4 px-8 rounded-full shadow-lg transition duration-300 transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                                disabled={(!selectedCard && currentPrompt.type === 'fill') || (selectedCard === \"BLANK_CARD_SELECTED\" && !customAnswer.trim()) || (currentPrompt.type === 'thisSoundsLike' && (!nominationData.nominatedPlayerId || !nominationData.justification.trim()))}\r\n                            >\r\n                                Submit Answer\r\n                            </button>\r\n                        </>\r\n                    ) : (\r\n                        <p className=\"text-2xl text-gray-200 animate-pulse\">Waiting for other players to submit...</p>\r\n                    )}\r\n                    <p className=\"text-gray-300 mt-4 text-lg\">\r\n                        Submitted: {submittedAnswers.length} / {playersInGame.length}\r\n                    </p>\r\n                </div>\r\n            )}\r\n\r\n            {gameData.status === 'voting' && (\r\n                <div className=\"w-full text-center\">\r\n                    <h3 className=\"text-2xl font-bold text-white mb-4\">Vote for your favorite!</h3>\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\r\n                        {submittedAnswers.length > 0 ? submittedAnswers.map(submission => {\r\n                            const submitterName = gameData.players[submission.playerId]?.name || 'Unknown Player';\r\n                            const isMySubmission = submission.playerId === userId;\r\n                            const isMyNominationOrNominee = currentPrompt.type === 'thisSoundsLike' && (submission.playerId === userId || (submission.answer && submission.answer.nominatedPlayerId === userId)); // Check submission.answer exists\r\n\r\n                            let cardText;\r\n                            if (currentPrompt.type === 'fill') {\r\n                                cardText = submission.answer;\r\n                            } else {\r\n                                const nominatedPlayerName = (submission.answer && gameData.players[submission.answer.nominatedPlayerId]?.name) || 'Unknown Player'; // Check submission.answer exists\r\n                                cardText = `\"${(submission.answer && submission.answer.justification) || ''}\" - For ${nominatedPlayerName}`; // Check submission.answer exists\r\n                            }\r\n\r\n                            return (\r\n                                <button\r\n                                    key={submission.id}\r\n                                    onClick={() => handleVote(submission.id)}\r\n                                    className={`relative p-6 rounded-3xl shadow-xl transition transform hover:scale-105 focus:outline-none focus:ring-4 focus:ring-offset-2 ${\r\n                                        selectedVote === submission.id ? 'bg-blue-400 ring-blue-500' :\r\n                                        (isMySubmission || isMyNominationOrNominee) ? 'bg-gray-400 cursor-not-allowed opacity-70' :\r\n                                        'bg-white hover:bg-gray-100'\r\n                                    } ${hasVotedThisRound ? 'opacity-70 cursor-not-allowed' : ''}`}\r\n                                    disabled={hasVotedThisRound || isMySubmission || isMyNominationOrNominee}\r\n                                >\r\n                                    <div className=\"absolute -top-4 -left-4 bg-yellow-400 text-gray-900 text-xs font-bold px-3 py-1 rounded-full shadow-md\">\r\n                                        Submitted by {submitterName}\r\n                                    </div>\r\n                                    <p className=\"text-xl font-semibold text-gray-900 mt-2\">\r\n                                        {cardText}\r\n                                    </p>\r\n                                    <div className=\"absolute -bottom-4 -right-4 bg-pink-400 text-white text-sm font-bold px-3 py-1 rounded-full shadow-md\">\r\n                                        Votes: {submission.votes || 0}\r\n                                    </div>\r\n                                </button>\r\n                            );\r\n                        }) : (\r\n                            <p className=\"col-span-full text-xl text-gray-300\">No answers submitted yet.</p>\r\n                        )}\r\n                    </div>\r\n                    {hasVotedThisRound ? (\r\n                        <p className=\"text-2xl text-gray-200 animate-pulse\">Waiting for other players to vote...</p>\r\n                    ) : (\r\n                        <p className=\"text-lg text-gray-300\">Choose the funniest or most fitting answer!</p>\r\n                    )}\r\n                    <p className=\"text-gray-300 mt-4 text-lg\">\r\n                        Voted: {votersCount} / {playersInGame.length}\r\n                    </p>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\n// LeaderboardPage Component\r\nconst LeaderboardPage = ({ gameData, userId, onNextRound }) => {\r\n    if (!gameData || !gameData.players) return <p className=\"text-center text-xl text-gray-200\">Loading leaderboard...</p>;\r\n\r\n    const isHost = gameData.hostId === userId;\r\n    const players = Object.values(gameData.players);\r\n    const sortedPlayers = [...players].sort((a, b) => b.score - a.score);\r\n    const winningSubmission = gameData.currentWinningSubmission;\r\n    const currentPrompt = gameData.currentPrompt;\r\n\r\n    let winningAnswerText = \"No winning answer this round.\";\r\n    let winningPlayerName = \"\";\r\n\r\n    if (winningSubmission) {\r\n        winningPlayerName = gameData.players[winningSubmission.playerId]?.name || 'Unknown Player';\r\n        if (currentPrompt.type === 'fill') {\r\n            winningAnswerText = winningSubmission.answer;\r\n        } else {\r\n            const nominatedPlayerName = (winningSubmission.answer && gameData.players[winningSubmission.answer.nominatedPlayerId]?.name) || 'Unknown Player';\r\n            winningAnswerText = `\"${(winningSubmission.answer && winningSubmission.answer.justification) || ''}\" - For ${nominatedPlayerName}`;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"text-center p-4\">\r\n            <h2 className=\"text-4xl font-bold text-white mb-6\">Round {gameData.currentRound} Results</h2>\r\n\r\n            <div className=\"bg-white bg-opacity-20 rounded-xl p-4 md:p-6 mb-8 shadow-xl border border-white border-opacity-30\">\r\n                <p className=\"text-lg font-semibold text-yellow-200 mb-2\">{currentPrompt.pillar}</p>\r\n                <p className=\"text-2xl md:text-3xl font-extrabold text-white mb-4 leading-tight\">\r\n                    Question: <span dangerouslySetInnerHTML={{ __html: currentPrompt.text.replace(/__________________/g, '______') }} />\r\n                </p>\r\n                <p className=\"text-2xl md:text-3xl font-bold text-pink-300 mb-2\">Winning Answer:</p>\r\n                <p className=\"text-3xl md:text-4xl italic text-white leading-tight\">\r\n                    \"{winningAnswerText}\"\r\n                </p>\r\n                {winningSubmission && (\r\n                    <p className=\"text-xl text-gray-200 mt-2\">Submitted by: <span className=\"font-semibold text-blue-200\">{winningPlayerName}</span></p>\r\n                )}\r\n            </div>\r\n\r\n            <h3 className=\"text-3xl font-bold text-white mb-4\">Leaderboard</h3>\r\n            <ul className=\"space-y-3 mb-8\">\r\n                {sortedPlayers.map((player, index) => (\r\n                    <li key={player.id} className={`flex items-center justify-between p-4 rounded-xl shadow-md ${\r\n                        index === 0 ? 'bg-yellow-300 text-gray-900 font-bold text-xl' : 'bg-white bg-opacity-30 text-white'\r\n                    }`}>\r\n                        <span className=\"flex items-center\">\r\n                            {index === 0 && <span className=\"mr-2 text-2xl\">👑</span>}\r\n                            {player.name}\r\n                        </span>\r\n                        <span className=\"font-bold text-xl\">{player.score} {player.score === 1 ? 'Point' : 'Points'}</span>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n\r\n            {isHost && (\r\n                <button\r\n                    onClick={onNextRound}\r\n                    className=\"w-full bg-gradient-to-r from-purple-500 to-indigo-600 hover:from-purple-600 hover:to-indigo-700 text-white font-bold py-4 px-8 rounded-full shadow-lg transition duration-300 transform hover:scale-105\"\r\n                >\r\n                    {gameData.currentRound < gameData.maxRounds ? 'Next Round' : 'End Game'}\r\n                </button>\r\n            )}\r\n            {!isHost && (\r\n                <p className=\"text-xl text-gray-300 italic\">Waiting for host to continue...</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\n// WinnerPage Component\r\nconst WinnerPage = ({ gameData, userId, onPlayAgain, setMessage }) => {\r\n    if (!gameData || !gameData.players) return <p className=\"text-center text-xl text-gray-200\">Calculating winner...</p>;\r\n\r\n    const players = Object.values(gameData.players);\r\n    const sortedPlayers = [...players].sort((a, b) => b.score - a.score);\r\n    const winner = sortedPlayers[0];\r\n    const isHost = gameData.hostId === userId;\r\n\r\n    const winnerHeadline = {\r\n        \"First Dates\": \"First Date Fiasco Champion!\",\r\n        \"Proposals & Engagements\": \"Master of Matrimony!\",\r\n        \"Family & Children\": \"Family Funniest!\",\r\n        \"Friends with Benefits (FWB)\": \"FWB Finesse King/Queen!\",\r\n        \"Long-Term Relationships & Marriage\": \"Relationship Guru!\",\r\n        \"Breakups & Moving On\": \"Breakup Boss!\"\r\n    };\r\n\r\n    const handleDeleteGame = async () => {\r\n        // Replaced window.confirm with MessageModal for consistency and better UX\r\n        setMessage(\"Are you sure you want to delete this game? This action cannot be undone. Click OK to confirm.\", () => {\r\n            performDeleteGame();\r\n        });\r\n    };\r\n\r\n    const performDeleteGame = async () => {\r\n        try {\r\n            await deleteDoc(doc(db, `artifacts/${appId}/public/data/games`, gameData.id)); // gameData.id holds the document ID\r\n            onPlayAgain(); // Go back to home page\r\n        } catch (error) {\r\n            console.error(\"Error deleting game:\", error);\r\n            setMessage(\"Failed to delete game. Please try again.\");\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"text-center p-4\">\r\n            <h2 className=\"text-5xl font-extrabold text-yellow-300 mb-6 drop-shadow-lg\">\r\n                Game Over!\r\n            </h2>\r\n            <p className=\"text-3xl font-bold text-white mb-8\">\r\n                {winnerHeadline[gameData.category] || \"Game Champion!\"}\r\n            </p>\r\n\r\n            <div className=\"bg-white bg-opacity-20 rounded-xl p-6 mb-8 shadow-xl border border-white border-opacity-30\">\r\n                <p className=\"text-4xl md:text-5xl font-extrabold text-pink-300 mb-4\">\r\n                    👑 {winner.name} 👑\r\n                </p>\r\n                <p className=\"text-3xl text-white\">\r\n                    <span className=\"font-bold\">{winner.score}</span> {winner.score === 1 ? 'Point' : 'Points'}\r\n                </p>\r\n            </div>\r\n\r\n            <h3 className=\"text-2xl font-bold text-white mb-4\">Final Leaderboard</h3>\r\n            <ul className=\"space-y-2 mb-8\">\r\n                {sortedPlayers.map((player, index) => (\r\n                    <li key={player.id} className={`flex items-center justify-between p-3 rounded-lg shadow-sm ${\r\n                        index === 0 ? 'bg-yellow-200 text-gray-900 font-bold' : 'bg-white bg-opacity-20 text-white'\r\n                    }`}>\r\n                        <span>{player.name}</span>\r\n                        <span>{player.score} {player.score === 1 ? 'Point' : 'Points'}</span>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n\r\n            {isHost && (\r\n                <>\r\n                    <button\r\n                        onClick={onPlayAgain}\r\n                        className=\"w-full bg-gradient-to-r from-green-500 to-lime-400 hover:from-green-600 hover:to-lime-500 text-white font-bold py-4 px-8 rounded-full shadow-lg transition duration-300 transform hover:scale-105 mb-4\"\r\n                    >\r\n                        Play Again!\r\n                    </button>\r\n                    <button\r\n                        onClick={handleDeleteGame}\r\n                        className=\"w-full bg-red-600 hover:bg-red-700 text-white font-bold py-4 px-8 rounded-full shadow-lg transition duration-300 transform hover:scale-105\"\r\n                    >\r\n                        Delete This Game\r\n                    </button>\r\n                </>\r\n            )}\r\n            {!isHost && (\r\n                <p className=\"text-xl text-gray-300 italic\">Ask the host to start a new game!</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\n// Utility function to shuffle an array (Fisher-Yates)\r\nconst shuffleArray = (array) => {\r\n    let currentIndex = array.length, randomIndex;\r\n    while (currentIndex !== 0) {\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex--;\r\n        [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\r\n    }\r\n    return array;\r\n};\r\n\r\n// Utility function to get a random prompt that hasn't been played yet\r\nconst getRandomPrompt = (promptCards, playedPrompts) => {\r\n    const availablePrompts = promptCards.filter(p =>\r\n        !playedPrompts.some(pp => pp.text === p.text && pp.type === p.type)\r\n    );\r\n\r\n    if (availablePrompts.length === 0) {\r\n        // If all prompts have been played, reset history and start over (or handle game end)\r\n        console.warn(\"All prompts played for this category. Resetting prompt history.\");\r\n        return promptCards[Math.floor(Math.random() * promptCards.length)]; // Pick any if exhausted\r\n    }\r\n\r\n    const randomIndex = Math.floor(Math.random() * availablePrompts.length);\r\n    return availablePrompts[randomIndex];\r\n};\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}