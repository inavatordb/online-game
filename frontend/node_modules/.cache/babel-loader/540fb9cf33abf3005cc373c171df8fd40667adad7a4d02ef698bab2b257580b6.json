{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\inava\\\\online-game\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, signInAnonymously, signInWithCustomToken, onAuthStateChanged } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, addDoc, setDoc, updateDoc, deleteDoc, onSnapshot, collection, query, where, arrayUnion, arrayRemove, serverTimestamp, getDocs, deleteField, increment } from 'firebase/firestore';\n\n// Firebase configuration from environment variables\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = JSON.parse(process.env.REACT_APP_FIREBASE_CONFIG || '{}');\nconst appId = process.env.REACT_APP_ID || 'default-app-id';\n\n// Initialize Firebase outside the component to avoid re-initialization\nconst app = initializeApp(firebaseConfig);\nconst db = getFirestore(app);\nconst auth = getAuth(app);\n\n// Helper for generating unique IDs (not cryptographically secure, but fine for game items)\nconst generateId = () => Math.random().toString(36).substring(2, 11);\n\n// Pre-defined game data\nconst PROMPT_CARDS = {\n  \"First Dates\": [{\n    type: \"fill\",\n    pillar: \"Boundaries\",\n    text: \"My date set a clear boundary by stating they wouldn't discuss anything before __________________.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Communication\",\n    text: \"I knew there would be communication challenges when their opening line was, 'So, do you believe in __________________?'\"\n  }, {\n    type: \"fill\",\n    pillar: \"Respect\",\n    text: \"My date showed a shocking lack of respect when they started __________________ mid-conversation.\"\n  }, {\n    type: \"thisSoundsLike\",\n    pillar: \"Compromise\",\n    text: \"This sounds like... someone who, on a first date, orders for both of you and then says, 'No compromise on the appetizers!'\"\n  }, {\n    type: \"fill\",\n    pillar: \"Boundaries\",\n    text: \"The biggest red flag on our first date was when they instantly started talking about __________________.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Communication\",\n    text: \"Their idea of 'getting to know you' involved asking about my __________________.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Respect\",\n    text: \"I lost all respect for them when they pulled out a __________________ at the table.\"\n  }, {\n    type: \"thisSoundsLike\",\n    pillar: \"Boundaries\",\n    text: \"This sounds like... someone who brings their ex to a first date as a 'wingman'.\"\n  }, {\n    type: \"image_judgment\",\n    pillar: \"Boundaries\",\n    text: \"What's your red flag reaction to this scene?\",\n    ai_prompt_description: \"A photo of a person setting up a large, elaborate, and overly aggressive 'no trespassing' sign with barbed wire around a small, innocent-looking flower bed.\"\n  }],\n  \"Proposals & Engagements\": [{\n    type: \"fill\",\n    pillar: \"Compromise\",\n    text: \"When I tried to compromise on the wedding theme, they firmly stated, 'It's either __________________ or nothing!'\"\n  }, {\n    type: \"fill\",\n    pillar: \"Communication\",\n    text: \"They proposed using an elaborate code only they understood, which made for terrible __________________.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Respect\",\n    text: \"My partner showed their true respect for my wishes by including __________________ in the engagement announcement.\"\n  }, {\n    type: \"thisSoundsLike\",\n    pillar: \"Boundaries\",\n    text: \"This sounds like... someone whose engagement photo shoot involved breaking into a national park for 'the perfect shot,' ignoring all signs.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Compromise\",\n    text: \"Our engagement almost ended when we couldn't compromise on __________________.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Communication\",\n    text: \"The proposal would have been perfect if only their communication hadn't involved __________________.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Respect\",\n    text: \"I knew they respected me when their proposal included a promise to never __________________.\"\n  }, {\n    type: \"thisSoundsLike\",\n    pillar: \"Communication\",\n    text: \"This sounds like... a proposal delivered via carrier pigeon, with a misspelled 'marry' note.\"\n  }, {\n    type: \"image_judgment\",\n    pillar: \"Compromise\",\n    text: \"What does this image say about compromise?\",\n    ai_prompt_description: \"A photo of two people trying to assemble a piece of IKEA furniture with no instructions, one holding the manual upside down, the other trying to use a banana as a screwdriver. Stress and confusion on their faces.\"\n  }],\n  \"Family & Children\": [{\n    type: \"fill\",\n    pillar: \"Communication\",\n    text: \"My partner and I communicate solely through __________________ when discussing bedtime routines.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Boundaries\",\n    text: \"My in-laws always cross the boundary by __________________ every time they visit.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Respect\",\n    text: \"Our toddler shows respect for household rules by __________________ at bedtime.\"\n  }, {\n    type: \"thisSoundsLike\",\n    pillar: \"Compromise\",\n    text: \"This sounds like... someone who, during a family road trip, insists on listening to their obscure polka music playlist for eight hours straight with no compromise.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Communication\",\n    text: \"Family dinners often devolve into chaos when someone mentions __________________.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Boundaries\",\n    text: \"We had to set a strict boundary about __________________ after the last family gathering.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Respect\",\n    text: \"Our kids finally learned respect when we introduced the rule about __________________.\"\n  }, {\n    type: \"thisSoundsLike\",\n    pillar: \"Boundaries\",\n    text: \"This sounds like... parents who track their adult children's every move using a GPS chip.\"\n  }, {\n    type: \"image_judgment\",\n    pillar: \"Communication\",\n    text: \"How would you handle this communication breakdown in a family setting?\",\n    ai_prompt_description: \"A close-up photo of a family dinner table where one person is enthusiastically talking while everyone else at the table is looking down at their phones, clearly disengaged.\"\n  }],\n  \"Friends with Benefits (FWB)\": [{\n    type: \"fill\",\n    pillar: \"Boundaries\",\n    text: \"Our FWB arrangement works because we both respect the boundary of never discussing __________________.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Communication\",\n    text: \"They suggested we communicate solely through __________________ to keep things strictly casual.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Compromise\",\n    text: \"The biggest compromise in our FWB situation was agreeing to __________________.\"\n  }, {\n    type: \"thisSoundsLike\",\n    pillar: \"Respect\",\n    text: \"This sounds like... someone who shows respect for their FWB's space by only 'dropping by' unannounced at 3 AM.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Boundaries\",\n    text: \"The moment our FWB boundary was crossed was when they started leaving __________________ at my place.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Communication\",\n    text: \"Our FWB 'talks' often involved more __________________ than actual words.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Compromise\",\n    text: \"We finally had to compromise on whether our FWB status included __________________.\"\n  }, {\n    type: \"thisSoundsLike\",\n    pillar: \"Communication\",\n    text: \"This sounds like... an FWB who communicates exclusively through cryptic TikTok dances.\"\n  }, {\n    type: \"image_judgment\",\n    pillar: \"Boundaries\",\n    text: \"What boundary is being tested here?\",\n    ai_prompt_description: \"A photo of one person awkwardly trying to enter another person's apartment using a key they clearly shouldn't have, while the resident looks surprised and uncomfortable.\"\n  }],\n  \"Long-Term Relationships & Marriage\": [{\n    type: \"fill\",\n    pillar: \"Communication\",\n    text: \"After 10 years of marriage, we've mastered the art of communicating solely through __________________.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Respect\",\n    text: \"Our secret to a happy marriage is respecting each other's need for __________________.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Compromise\",\n    text: \"We knew our compromise skills were peak when we finally agreed on __________________ for dinner.\"\n  }, {\n    type: \"thisSoundsLike\",\n    pillar: \"Boundaries\",\n    text: \"This sounds like... a couple whose idea of healthy boundaries involves separate houses in different states.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Communication\",\n    text: \"The key to our long-term happiness is never discussing __________________.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Respect\",\n    text: \"My partner truly respects my need for solitude by always __________________.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Compromise\",\n    text: \"Our biggest compromise yet involved deciding on __________________ for our anniversary.\"\n  }, {\n    type: \"thisSoundsLike\",\n    pillar: \"Compromise\",\n    text: \"This sounds like... a couple who compromises on vacation destinations by alternating between a swamp tour and a taxidermy convention.\"\n  }, {\n    type: \"image_judgment\",\n    pillar: \"Respect\",\n    text: \"Does this image show respect or disrespect?\",\n    ai_prompt_description: \"A photo of two people sitting on a couch, one engrossed in their phone, the other trying to talk to them but being completely ignored, looking sad.\"\n  }],\n  \"Breakups & Moving On\": [{\n    type: \"fill\",\n    pillar: \"Boundaries\",\n    text: \"After the breakup, I learned to respect my own boundaries by refusing to __________________.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Compromise\",\n    text: \"My ex tried to compromise on splitting our possessions by offering me __________________.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Communication\",\n    text: \"The most effective post-breakup communication we had involved __________________.\"\n  }, {\n    type: \"thisSoundsLike\",\n    pillar: \"Respect\",\n    text: \"This sounds like... someone who, to show respect for their ex's new relationship, sends them a framed photo of their ex's ex every holiday.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Boundaries\",\n    text: \"Setting a boundary about __________________ was crucial for my healing after the breakup.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Compromise\",\n    text: \"There was no compromise possible when it came to who kept __________________.\"\n  }, {\n    type: \"fill\",\n    pillar: \"Communication\",\n    text: \"Our post-breakup communication strategy was strictly limited to __________________.\"\n  }, {\n    type: \"thisSoundsLike\",\n    pillar: \"Boundaries\",\n    text: \"This sounds like... someone who 'moves on' by getting a tattoo of their ex's face, but with devil horns.\"\n  }, {\n    type: \"image_judgment\",\n    pillar: \"Moving On\",\n    text: \"What does this image tell you about moving on?\",\n    ai_prompt_description: \"A photo of a person confidently walking towards a bright, new path, with a blurry, faded image of a broken heart behind them, symbolizing leaving the past behind.\"\n  }],\n  \"Looks Like\": [{\n    type: \"image_judgment\",\n    pillar: \"Communication\",\n    text: \"What are these two *really* thinking?\",\n    ai_prompt_description: \"Realistic photograph of a long-term romantic couple showing emotional distance. They are sitting on a couch in a dimly lit living room, both illuminated only by the glow of their smartphones, ignoring each other completely. The image should have a cinematic mood, with a soft focus on the space between them, highlighting their isolation from each other. The composition should feel intimate yet cold.\"\n  }, {\n    type: \"image_judgment\",\n    pillar: \"Compromise\",\n    text: \"Caption this scene of domestic bliss.\",\n    ai_prompt_description: \"A photorealistic image capturing a failure of compromise in a shared living space. The scene is a kitchen perfectly divided in half with a sharp, jarring line. One side is sparkling clean, organized, and minimalist. The other side is a chaotic explosion of dirty dishes, spilled food, and clutter. Use vibrant colors to emphasize the stark contrast. Wide shot composition to capture the entire surreal scene of domestic conflict.\"\n  }, {\n    type: \"image_judgment\",\n    pillar: \"Respect\",\n    text: \"What's the story here?\",\n    ai_prompt_description: \"Cinematic, realistic photograph showing a moment of disrespect between two friends in a coffee shop. One person is in the foreground, slightly out of focus, excitedly showing something on their smartphone. The focus is on the other friend's face, who is pointedly looking away with a clear expression of boredom and disinterest. Use a shallow depth of field and natural lighting to highlight the uncomfortable social dynamic.\"\n  }, {\n    type: \"image_judgment\",\n    pillar: \"Boundaries\",\n    text: \"Describe this situation in one word.\",\n    ai_prompt_description: \"A realistic photograph capturing the violation of personal boundaries. A person is sitting at a home office desk, their face showing stress and discomfort. Their partner is looming directly over their shoulder, peering intensely at the computer screen. Use a slightly wide-angle 'over the shoulder' composition to create a crowded, claustrophobic feeling. The lighting should be harsh, casting a shadow from the standing partner over the person working, emphasizing the invasion of their space.\"\n  }],\n  \"Red Flag or Relationship Goal\": [{\n    type: \"scenario_vote\",\n    text: \"You've just introduced your partner to your closest friends, and the conversation flows, everyone seems to be getting along. Later, your friends text you saying they had a great time, but your partner immediately starts grilling you about what your friends really think, nitpicking every comment. What's going on here?\",\n    choices: {\n      a: \"Oh, they're just, you know, collecting data. Like a relationship spy trying to figure out if your squad is worthy of their presence. It's not insecurity, it's... strategic vetting. Yeah, that's it.\",\n      b: \"Nah, that's just the prelude to the 'Great Friend Purge.' Soon, it'll be just you and them. Alone. In a quiet room. With their thoughts. Good luck with that.\",\n      c: \"See, this is that real growth right here! They're invested, man. They wanna know if the vibes were authentic, if there's any room for improvement, because they're trying to build a strong, integrated social unit. That's a team player!\",\n      d: \"They're trying to figure out which of your friends they can hang with when you're busy. You know, diversifying their social portfolio. Smart move. They ain't trying to just sit around waiting on you. That's freedom right there!\"\n    }\n  }]\n};\nconst ANSWER_CARDS = [\"a pet rock named 'Gary'\", \"my extensive collection of toenail clippings\", \"the concept of personal hygiene\", \"a five-hour interpretive dance\", \"my imaginary friend, Bartholomew\", \"the meaning of life, according to a squirrel\", \"their ex's entire family tree\", \"a spontaneous trip to the moon\", \"a heated debate about flat earth theories\", \"my obsession with competitive eating\", \"the ghost of my past relationship\", \"a really bad karaoke performance\", \"a detailed PowerPoint presentation on my insecurities\", \"my unique collection of lint\", \"a crying baby simulator\", \"the sound of a kazoo orchestra\", \"their unedited diary entries from middle school\", \"a sock puppet show\", \"the recipe for my grandma's infamous fruitcake\", \"a detailed analysis of my dream journal\", \"their pet goldfish\", \"a surprise visit from a mariachi band\", \"a 30-page manifesto on why cats are superior to dogs\", \"my crippling fear of ducks\", \"a life-sized cardboard cutout of myself\", \"the exact moment I realized I was allergic to gluten\", \"my collection of antique staplers\", \"a detailed explanation of quantum physics\", \"their personal alien abduction story\", \"a single, lonely potato\", \"the dark secrets of my childhood treehouse\", \"my profound love for glitter\", \"a dramatic re-enactment of my last dentist visit\", \"a squirrel dressed as a tiny chef\", \"my secret talent for burping the alphabet backwards\", \"a miniature alpaca farm\", \"the lingering smell of old gym socks\", \"my deep philosophical thoughts on cheese\", \"a very aggressive snail\", \"a conspiracy theory involving garden gnomes\", \"my questionable fashion choices from the 90s\", \"the universal language of farts\", \"a spontaneous opera performance\", \"my collection of rare, vintage sporks\", \"the exact number of hairs on my head\", \"a detailed map of my internal organs\", \"my uncanny ability to predict the weather with my knee\", \"a flock of angry pigeons\", \"my personal brand of awkward silence\", \"a very confused mime\", \"the entire script of a terrible B-movie\", \"a deep dive into celebrity gossip from 2003\", \"my most embarrassing childhood story, told in interpretive dance\", \"a rogue tumbleweed\", \"my collection of forgotten dreams\", \"a perpetually confused stare\", \"the subtle art of passive aggression\", \"a commitment to never folding laundry again\", \"the true identity of Santa Claus\", \"a never-ending loop of elevator music\", \"my inability to tell left from right\", \"a lifetime supply of questionable advice\", \"the secret to perfect toast\", \"a spontaneous act of kindness towards a pigeon\", \"my irrational fear of balloons\", \"a detailed budget of my impulse purchases\", \"the surprising history of garden hoses\", \"my unwavering dedication to napping\", \"a profound appreciation for mundane objects\", \"my personal record for most consecutive sneezes\", \"a hidden talent for imitating barnyard animals\", \"the shocking truth about socks\", \"my unwavering belief in unicorns\", \"a detailed analysis of my coffee preferences\", \"the silent language of eyebrow raises\", \"a deep philosophical debate about condiments\", \"my surprising expertise in competitive napping\", \"the existential dread of a Monday morning\", \"a profound understanding of cat psychology\", \"my secret stash of emergency chocolate\", \"the art of graceful awkwardness\", \"a detailed plan for world domination (starting with my pantry)\", \"my most cherished collection of bottle caps\", \"the subtle nuances of air guitar\", \"a profound appreciation for bad puns\", \"my impressive ability to procrastinate creatively\", \"the surprising comfort of mismatched socks\", \"a detailed study of dust bunnies\", \"my personal philosophy on the optimal way to butter toast\", \"the quiet rebellion of untamed hair\", \"a deep contemplation of the universe while staring at a ceiling fan\", \"my unwavering commitment to collecting novelty erasers\", \"the dramatic flair of a well-timed eye-roll\"];\n\n// Component for displaying temporary messages/modals instead of alerts\nconst MessageModal = ({\n  message,\n  onClose\n}) => {\n  if (!message) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-gray-900 bg-opacity-75 flex items-center justify-center z-50 p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg p-6 shadow-xl max-w-sm w-full text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xl font-semibold mb-4 text-gray-800\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        className: \"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-6 rounded-full transition duration-300 transform hover:scale-105\",\n        children: \"OK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 9\n  }, this);\n};\n\n// Main App Component\n_c = MessageModal;\nfunction App() {\n  _s();\n  const [userId, setUserId] = useState(null);\n  const [currentPage, setCurrentPage] = useState('home'); // home, lobby, game, leaderboard, winner\n  const [gameId, setGameId] = useState(null);\n  const [gameData, setGameData] = useState(null);\n  const [message, setMessage] = useState(null);\n  const [isAuthReady, setIsAuthReady] = useState(false);\n  const [isLoadingImage, setIsLoadingImage] = useState(false); // For host loading state\n  const [playerName, setPlayerName] = useState(''); // New state for player nickname\n\n  // Auth state listener and initial sign-in logic\n  useEffect(() => {\n    const SESSION_USER_ID_KEY = 'redFlagsGameTempUserId';\n    const unsubscribe = onAuthStateChanged(auth, async currentUser => {\n      const initialAuthToken = process.env.REACT_APP_INITIAL_AUTH_TOKEN;\n      if (initialAuthToken) {\n        // If an initial auth token is provided (e.g., from the Canvas environment)\n        // Use Firebase authentication with the provided token.\n        if (!currentUser) {\n          try {\n            await signInWithCustomToken(auth, initialAuthToken);\n          } catch (error) {\n            console.error(\"Firebase Auth Error with custom token:\", error);\n            setMessage(`Authentication failed: ${error.message}. Please refresh.`);\n          }\n        }\n        // Once authenticated, set the user and their UID from Firebase.\n        if (auth.currentUser) {\n          setUserId(auth.currentUser.uid);\n          // Set default player name if not already set, or load from storage\n          if (!playerName) {\n            setPlayerName(`Player ${auth.currentUser.uid.substring(0, 4)}`);\n          }\n        }\n      } else {\n        // If no initial auth token (e.g., in a standalone browser tab for testing)\n        // Generate and use a temporary, session-based user ID.\n        let tempUserId = sessionStorage.getItem(SESSION_USER_ID_KEY);\n        if (!tempUserId) {\n          tempUserId = `guest_${crypto.randomUUID()}`; // Generate a unique ID\n          sessionStorage.setItem(SESSION_USER_ID_KEY, tempUserId);\n          console.log(\"Generated new session userId:\", tempUserId);\n        } else {\n          console.log(\"Reusing session userId:\", tempUserId);\n        }\n        setUserId(tempUserId); // Use the session ID as the userId\n        // Set default player name for guest\n        if (!playerName) {\n          setPlayerName(`Player ${tempUserId.substring(0, 5)}`);\n        }\n      }\n      setIsAuthReady(true); // Auth listener has completed its initial check or temp ID is set\n    });\n    return () => unsubscribe();\n  }, [playerName]); // Added playerName to dependencies to prevent re-rendering issues\n\n  // Firebase game data listener\n  useEffect(() => {\n    if (!gameId || !isAuthReady || !userId) return; // Ensure auth and user are ready\n\n    const gameDocRef = doc(db, `artifacts/${appId}/public/data/games`, gameId);\n    const unsubscribeGame = onSnapshot(gameDocRef, async docSnap => {\n      if (docSnap.exists()) {\n        var _data$prompts, _data$prompts2;\n        const data = docSnap.data();\n        const oldGameData = gameData; // Capture old gameData for comparison\n        setGameData(data);\n\n        // If a new image judgment prompt was just set by the host, generate the image\n        // This logic ensures image generation happens only once by the host for a new image prompt\n        if (userId === data.hostId &&\n        // Only host generates image\n        data.status === 'submission' &&\n        // Must be in submission phase\n        data.prompts && ((_data$prompts = data.prompts[data.currentRound - 1]) === null || _data$prompts === void 0 ? void 0 : _data$prompts.type) === 'image_judgment' &&\n        // Current prompt is image type\n        !((_data$prompts2 = data.prompts[data.currentRound - 1]) !== null && _data$prompts2 !== void 0 && _data$prompts2.imageUrl) && (\n        // Image not yet generated\n        !oldGameData || oldGameData.currentRound !== data.currentRound || oldGameData.status !== 'submission') // Trigger on new round or status change to submission\n        ) {\n          setIsLoadingImage(true); // Set local loading state for host\n          const currentPromptToGenerate = data.prompts[data.currentRound - 1];\n          try {\n            const imageUrl = await generateImageForPrompt(currentPromptToGenerate.ai_prompt_description);\n            // Update the Firestore document with the generated image URL for the current prompt\n            await updateDoc(gameDocRef, {\n              [`prompts.${data.currentRound - 1}.imageUrl`]: imageUrl,\n              isLoadingImage: false // Clear loading flag in Firestore\n            });\n          } catch (error) {\n            console.error(\"Error generating image and updating Firestore:\", error);\n            await updateDoc(gameDocRef, {\n              [`prompts.${data.currentRound - 1}.imageUrl`]: \"https://placehold.co/400x300/CCCCCC/000000?text=Error+Loading+Image\",\n              isLoadingImage: false\n            });\n            showMessage(\"Failed to generate image. Please try starting the round again.\");\n          } finally {\n            setIsLoadingImage(false); // Clear local loading state\n          }\n        }\n\n        // Navigate based on game status\n        if (data.status === 'playing' || data.status === 'submission' || data.status === 'voting') {\n          setCurrentPage('game');\n        } else if (data.status === 'round_end') {\n          setCurrentPage('leaderboard');\n        } else if (data.status === 'game_over') {\n          setCurrentPage('winner');\n        } else if (data.status === 'lobby') {\n          setCurrentPage('lobby');\n        }\n      } else {\n        console.log(\"Game does not exist or has been deleted.\");\n        setGameId(null);\n        setGameData(null);\n        setCurrentPage('home');\n        showMessage(\"Game not found or ended.\");\n      }\n    }, error => {\n      console.error(\"Error listening to game data:\", error);\n      showMessage(\"Failed to load game data. Please try again.\");\n    });\n    return () => unsubscribeGame();\n  }, [gameId, isAuthReady, userId]); // Correct dependency array, removed gameData\n\n  // Utility to generate image (placeholder)\n  const generateImageForPrompt = async promptDescription => {\n    console.log(\"Starting image generation for:\", promptDescription);\n    // This is a placeholder. In a real app, you would call your AI image model here.\n    // For now, we return a static placeholder image URL after a short delay.\n    await new Promise(resolve => setTimeout(resolve, 1500)); // Simulate network delay\n    const placeholderUrl = `https://via.placeholder.com/400x300.png?text=${encodeURIComponent(promptDescription.substring(0, 30))}`;\n    console.log(\"Generated image URL:\", placeholderUrl);\n    return placeholderUrl;\n  };\n  const showMessage = msg => {\n    setMessage(msg);\n  };\n  const handleNextRound = async () => {\n    if (!gameData || !gameData.hostId === userId) return;\n    try {\n      const gameRef = doc(db, `artifacts/${appId}/public/data/games`, gameId);\n      const {\n        currentRound,\n        maxRounds,\n        category,\n        promptHistory\n      } = gameData;\n      const nextRound = currentRound + 1;\n      if (nextRound > maxRounds) {\n        await updateDoc(gameRef, {\n          status: 'game_over'\n        });\n      } else {\n        const promptCardsForCategory = PROMPT_CARDS[category];\n        const newPrompt = getRandomPrompt(promptCardsForCategory, promptHistory || []);\n        const updatedPromptHistory = arrayUnion(newPrompt.text);\n        const updatedPlayers = {};\n        for (const pId in gameData.players) {\n          updatedPlayers[pId] = {\n            ...gameData.players[pId],\n            hasSubmitted: false,\n            hasVoted: false\n          };\n        }\n        await updateDoc(gameRef, {\n          status: 'submission',\n          currentRound: nextRound,\n          prompts: arrayUnion(newPrompt),\n          promptHistory: updatedPromptHistory,\n          players: updatedPlayers,\n          submittedAnswers: {},\n          playerChoices: {},\n          votes: {},\n          currentWinningSubmission: null,\n          isLoadingImage: newPrompt.type === 'image_judgment'\n        });\n      }\n    } catch (error) {\n      console.error(\"Error advancing to next round:\", error);\n      showMessage(\"Failed to start the next round.\");\n    }\n  };\n\n  // Helper function to shuffle an array\n  const shuffleArray = array => {\n    let currentIndex = array.length,\n      randomIndex;\n    while (currentIndex !== 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n      [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n    }\n    return array;\n  };\n\n  // Helper function to get a random prompt\n  const getRandomPrompt = (promptList, history) => {\n    const availablePrompts = promptList.filter(p => !history.includes(p.text));\n    if (availablePrompts.length === 0) {\n      showMessage(\"All prompts for this category have been used! Picking from all prompts.\");\n      return promptList[Math.floor(Math.random() * promptList.length)];\n    }\n    const randomIndex = Math.floor(Math.random() * availablePrompts.length);\n    return availablePrompts[randomIndex];\n  };\n\n  // Render logic based on currentPage\n  const renderPage = () => {\n    switch (currentPage) {\n      case 'home':\n        return /*#__PURE__*/_jsxDEV(HomePage, {\n          setCurrentPage: setCurrentPage,\n          setGameId: setGameId,\n          userId: userId,\n          showMessage: showMessage,\n          playerName: playerName,\n          setPlayerName: setPlayerName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 24\n        }, this);\n      case 'lobby':\n        return /*#__PURE__*/_jsxDEV(LobbyPage, {\n          gameData: gameData,\n          gameId: gameId,\n          userId: userId,\n          showMessage: showMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 24\n        }, this);\n      case 'game':\n        return /*#__PURE__*/_jsxDEV(GamePage, {\n          gameData: gameData,\n          gameId: gameId,\n          userId: userId,\n          showMessage: showMessage,\n          isLoadingImage: isLoadingImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 24\n        }, this);\n      // Pass isLoadingImage\n      case 'leaderboard':\n        return /*#__PURE__*/_jsxDEV(LeaderboardPage, {\n          gameData: gameData,\n          userId: userId,\n          gameId: gameId,\n          showMessage: showMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 24\n        }, this);\n      // Adjusted to use updated handleNextRound via prop\n      case 'winner':\n        return /*#__PURE__*/_jsxDEV(WinnerPage, {\n          gameData: gameData,\n          userId: userId,\n          onPlayAgain: () => {\n            setGameId(null);\n            setGameData(null);\n            setCurrentPage('home');\n          },\n          showMessage: showMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 24\n        }, this);\n      // Pass showMessage for modal\n      default:\n        return /*#__PURE__*/_jsxDEV(HomePage, {\n          setCurrentPage: setCurrentPage,\n          setGameId: setGameId,\n          userId: userId,\n          showMessage: showMessage,\n          playerName: playerName,\n          setPlayerName: setPlayerName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 24\n        }, this);\n    }\n  };\n  if (!isAuthReady) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center bg-gradient-to-br from-purple-800 via-pink-600 to-red-500 text-white font-inter\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-3xl animate-pulse\",\n        children: \"Loading game...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-purple-800 via-pink-600 to-red-500 text-white font-inter flex flex-col items-center justify-center p-4\",\n    children: [message && /*#__PURE__*/_jsxDEV(MessageModal, {\n      message: message.text,\n      onClose: message.callback ? () => {\n        message.callback();\n        setMessage(null);\n      } : () => setMessage(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-5xl md:text-6xl font-extrabold text-center mb-8 drop-shadow-lg leading-tight\",\n      children: \"Red Flags & Relationship Goals\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg md:text-xl text-center mb-6 text-white text-opacity-90\",\n      children: [\"Your Player ID: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font-mono bg-white bg-opacity-20 rounded-md px-3 py-1 break-all\",\n        children: userId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-4xl bg-white bg-opacity-10 backdrop-filter backdrop-blur-sm rounded-3xl shadow-2xl p-6 md:p-10 border border-white border-opacity-30\",\n      children: renderPage()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 425,\n    columnNumber: 9\n  }, this);\n}\n\n// HomePage Component\n_s(App, \"nHwlHhOGMGlhrQfJRj6xwor6j50=\");\n_c2 = App;\nconst HomePage = ({\n  setCurrentPage,\n  setGameId,\n  userId,\n  showMessage,\n  playerName,\n  setPlayerName\n}) => {\n  _s2();\n  const [joinCode, setJoinCode] = useState('');\n  const handleCreateGame = async () => {\n    if (!playerName.trim()) {\n      showMessage(\"Please enter your nickname.\");\n      return;\n    }\n    try {\n      const categories = Object.keys(PROMPT_CARDS);\n      const randomCategory = categories[Math.floor(Math.random() * categories.length)]; // Select a random category\n      const gameCode = Math.random().toString(36).substring(2, 8).toUpperCase(); // 6-char code\n      console.log(\"Generated Game Code:\", gameCode); // Debugging log\n\n      const initialPlayers = {};\n      // Use the userId passed from App component (which is now guaranteed unique per tab)\n      initialPlayers[userId] = {\n        id: userId,\n        // Added unique ID for the player object\n        name: playerName.trim(),\n        // Use custom player name\n        score: 0,\n        isHost: true,\n        hand: shuffleArray([...ANSWER_CARDS]).slice(0, 10),\n        // Give 10 unique cards\n        hasSubmitted: false,\n        hasVoted: false,\n        totalRedFlags: 0,\n        totalHearts: 0\n      };\n      const newGameRef = await addDoc(collection(db, `artifacts/${appId}/public/data/games`), {\n        hostId: userId,\n        category: randomCategory,\n        currentRound: 1,\n        maxRounds: 10,\n        prompts: [],\n        // Initialize prompts as an empty array\n        status: 'lobby',\n        // lobby, submission, voting, round_end, game_over\n        players: initialPlayers,\n        submittedAnswers: {},\n        playerChoices: {},\n        // For the new game mode\n        votes: {},\n        gameCode: gameCode,\n        // Ensure gameCode is always a string\n        createdAt: serverTimestamp(),\n        promptHistory: [],\n        // To store played prompts text for getRandomPrompt\n        answerCardPool: shuffleArray([...ANSWER_CARDS]),\n        // All available answer cards\n        isLoadingImage: false // Default to false\n      });\n      console.log(`Game created with Firestore path: artifacts/${appId}/public/data/games/${newGameRef.id}`); // New debugging log with full path\n      setGameId(newGameRef.id);\n      setCurrentPage('lobby');\n      showMessage(`Game created! Share code: ${gameCode}`);\n    } catch (error) {\n      console.error(\"Error creating game:\", error);\n      showMessage(\"Failed to create game. Please try again.\");\n    }\n  };\n  const handleJoinGame = async () => {\n    if (!playerName.trim()) {\n      showMessage(\"Please enter your nickname.\");\n      return;\n    }\n    if (!joinCode) {\n      showMessage(\"Please enter a game code.\");\n      return;\n    }\n    try {\n      console.log(`Attempting to query Firestore for collection: artifacts/${appId}/public/data/games with gameCode: ${joinCode.toUpperCase()}`); // More detailed debugging log\n      const q = query(collection(db, `artifacts/${appId}/public/data/games`), where(\"gameCode\", \"==\", joinCode.toUpperCase()));\n      const querySnapshot = await getDocs(q);\n      console.log(\"Query Snapshot empty:\", querySnapshot.empty); // Debugging log\n\n      if (!querySnapshot.empty) {\n        const gameDoc = querySnapshot.docs[0];\n        const gameData = gameDoc.data();\n        const gameRef = doc(db, `artifacts/${appId}/public/data/games`, gameDoc.id);\n        if (gameData.players[userId]) {\n          showMessage(\"You are already in this game.\");\n          setGameId(gameDoc.id);\n          setCurrentPage('lobby'); // Go to lobby if already in\n          return;\n        }\n\n        // If joining after game started, give initial cards\n        const playerHand = shuffleArray([...ANSWER_CARDS]).slice(0, 10);\n        await updateDoc(gameRef, {\n          [`players.${userId}`]: {\n            id: userId,\n            // Added unique ID for the player object\n            name: playerName.trim(),\n            // Use custom player name\n            score: 0,\n            isHost: false,\n            hand: playerHand,\n            hasSubmitted: false,\n            hasVoted: false,\n            totalRedFlags: 0,\n            totalHearts: 0\n          }\n        });\n        setGameId(gameDoc.id);\n        setCurrentPage('lobby'); // Will change based on game status from listener\n        showMessage(`Joined game ${joinCode}!`);\n      } else {\n        showMessage(\"Invalid game code.\");\n      }\n    } catch (error) {\n      console.error(\"Error joining game:\", error);\n      showMessage(\"Failed to join game. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter your nickname\",\n      value: playerName,\n      onChange: e => setPlayerName(e.target.value),\n      className: \"w-full p-3 rounded-xl bg-white bg-opacity-20 text-white placeholder-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-400 mb-4 text-center\",\n      maxLength: \"20\" // Limit nickname length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreateGame,\n      className: \"w-full mb-4 bg-gradient-to-r from-blue-500 to-teal-400 hover:from-blue-600 hover:to-teal-500 text-white font-bold py-4 px-8 rounded-full shadow-lg transition duration-300 transform hover:scale-105\",\n      children: \"Create New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-200 mb-2\",\n        children: \"OR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Game Code\",\n        value: joinCode,\n        onChange: e => setJoinCode(e.target.value),\n        className: \"w-full p-3 rounded-xl bg-white bg-opacity-20 text-white placeholder-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-400 mb-3 text-center uppercase\",\n        maxLength: \"6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleJoinGame,\n        className: \"w-full bg-gradient-to-r from-green-500 to-lime-400 hover:from-green-600 hover:to-lime-500 text-white font-bold py-4 px-8 rounded-full shadow-lg transition duration-300 transform hover:scale-105\",\n        children: \"Join Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-sm text-gray-300 mt-4\",\n      children: \"Minimum 2 players needed to start a game.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 553,\n    columnNumber: 9\n  }, this);\n};\n\n// LobbyPage Component\n_s2(HomePage, \"42J/m0wXRcmRnUDiHpTJ/GtKQxM=\");\n_c3 = HomePage;\nconst LobbyPage = ({\n  gameData,\n  gameId,\n  userId,\n  showMessage\n}) => {\n  if (!gameData) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"text-center text-xl text-gray-200\",\n    children: \"Loading lobby...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 594,\n    columnNumber: 27\n  }, this);\n  const players = Object.values(gameData.players || {}).sort((a, b) => a.name.localeCompare(b.name));\n  const isHost = gameData.hostId === userId;\n  const canStartGame = players.length >= 2;\n  const gameCode = gameData.gameCode;\n  const handleCategoryChange = async e => {\n    if (!isHost) return;\n    const newCategory = e.target.value;\n    try {\n      const gameRef = doc(db, `artifacts/${appId}/public/data/games`, gameId);\n      await updateDoc(gameRef, {\n        category: newCategory\n      });\n    } catch (error) {\n      console.error(\"Error updating category:\", error);\n      showMessage(\"Failed to update category.\");\n    }\n  };\n  const handleStartGame = async () => {\n    if (!isHost) return;\n    try {\n      const gameRef = doc(db, `artifacts/${appId}/public/data/games`, gameId);\n      const playersInGame = Object.values(gameData.players);\n      if (playersInGame.length < 1) {\n        // Changed from 2 to 1 to allow solo testing\n        showMessage(\"You need at least 1 player to start the game.\");\n        return;\n      }\n\n      // Distribute unique hands to all players\n      const promptCardsForCategory = PROMPT_CARDS[gameData.category];\n      let availableCards = [...ANSWER_CARDS];\n      const updatedPlayers = {\n        ...gameData.players\n      }; // Create a mutable copy\n\n      for (const pId in updatedPlayers) {\n        const hand = [];\n        // Ensure players always have 10 cards at the start of the game\n        for (let i = 0; i < 10; i++) {\n          if (availableCards.length === 0) {\n            // If pool runs low, replenish it with all ANSWER_CARDS shuffled\n            availableCards = shuffleArray([...ANSWER_CARDS]);\n            console.warn(\"Answer card pool replenished by reshuffling all cards during initial deal.\");\n          }\n          const cardIndex = Math.floor(Math.random() * availableCards.length);\n          hand.push(availableCards.splice(cardIndex, 1)[0]);\n        }\n        updatedPlayers[pId].hand = hand;\n        updatedPlayers[pId].hasSubmitted = false;\n        updatedPlayers[pId].hasVoted = false;\n      }\n      const initialPrompt = getRandomPrompt(promptCardsForCategory, []); // No history yet for first prompt\n\n      // Image generation now happens in the onSnapshot listener triggered by the update below\n      // No direct image generation call here.\n\n      await updateDoc(gameRef, {\n        status: 'submission',\n        currentRound: 1,\n        maxRounds: Math.min(10, promptCardsForCategory.length),\n        // Set max rounds\n        prompts: [initialPrompt],\n        // Store the full prompt object\n        promptHistory: [initialPrompt.text],\n        // Keep text history for getRandomPrompt filter\n        players: updatedPlayers,\n        // CRITICAL FIX: Pass updatedPlayers to Firestore\n        submittedAnswers: {},\n        playerChoices: {},\n        votes: {},\n        isLoadingImage: initialPrompt.type === 'image_judgment' // Set initial loading flag for image prompt\n      });\n    } catch (error) {\n      console.error(\"Error starting game:\", error);\n      showMessage(\"An error occurred while starting the game.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-4xl font-bold mb-4 text-white\",\n      children: \"Game Lobby\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 671,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-xl text-gray-200 mb-6\",\n      children: [\"Game Code: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font-bold text-yellow-300\",\n        children: gameCode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 673,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 672,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-lg text-gray-200 mb-2 flex items-center justify-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"mr-2\",\n        children: \"Category:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 676,\n        columnNumber: 17\n      }, this), isHost ? /*#__PURE__*/_jsxDEV(\"select\", {\n        value: gameData.category,\n        onChange: handleCategoryChange,\n        className: \"p-2 rounded-lg bg-white bg-opacity-20 text-white font-semibold focus:outline-none focus:ring-2 focus:ring-blue-400\",\n        children: Object.keys(PROMPT_CARDS).map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: cat,\n          className: \"text-black\",\n          children: cat\n        }, cat, false, {\n          fileName: _jsxFileName,\n          lineNumber: 684,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 678,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font-semibold text-pink-200\",\n        children: gameData.category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 688,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 675,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg text-gray-200 mb-4\",\n      children: \"Players Connected:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 691,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-disc list-inside text-left mx-auto max-w-xs mb-8 text-gray-100\",\n      children: players.map(player => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"py-1\",\n        children: [player.name, \" \", player.isHost && \"(Host)\"]\n      }, player.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 692,\n      columnNumber: 13\n    }, this), isHost && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartGame,\n      disabled: !canStartGame,\n      className: `w-full py-4 px-8 rounded-full shadow-lg transition duration-300 transform ${canStartGame ? 'bg-gradient-to-r from-purple-500 to-indigo-600 hover:from-purple-600 hover:to-indigo-700 text-white font-bold hover:scale-105' : 'bg-gray-600 text-gray-300 cursor-not-allowed'}`,\n      children: canStartGame ? 'Start Game' : `Need ${2 - players.length} more player(s) to start`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 700,\n      columnNumber: 17\n    }, this), !isHost && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-xl text-gray-300 italic\",\n      children: \"Waiting for host to start the game!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 713,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 670,\n    columnNumber: 9\n  }, this);\n};\n\n// GamePage Component\n_c4 = LobbyPage;\nconst GamePage = ({\n  gameData,\n  gameId,\n  userId,\n  showMessage,\n  isLoadingImage\n}) => {\n  // Pass isLoadingImage\n  if (!gameData || !gameData.prompts || gameData.prompts.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-xl text-gray-200\",\n      children: \"Waiting for game to start...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 722,\n      columnNumber: 16\n    }, this);\n  }\n  const currentPrompt = gameData.prompts[gameData.currentRound - 1];\n  if (!currentPrompt) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-xl text-gray-200\",\n      children: \"Loading prompt data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 727,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(GameRound, {\n    gameData: gameData,\n    gameId: gameId,\n    userId: userId,\n    showMessage: showMessage,\n    isLoadingImage: isLoadingImage\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 730,\n    columnNumber: 12\n  }, this); // Pass isLoadingImage\n};\n_c5 = GamePage;\nconst GamePrompt = ({\n  prompt,\n  gameData,\n  isLoadingImage\n}) => {\n  // Receive isLoadingImage\n  if (!prompt) return null;\n\n  // Show loading message if it's an image prompt AND host is currently generating it\n  if (prompt.type === 'image_judgment' && isLoadingImage) {\n    // Check local loading state\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-3xl font-bold mb-4 text-white animate-pulse\",\n        children: \"Generating AI Image...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 740,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xl text-gray-200\",\n        children: \"The host is creating a new visual prompt. Please wait.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 741,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 739,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center bg-white bg-opacity-20 rounded-xl p-4 md:p-6 shadow-xl w-full max-w-2xl border border-white border-opacity-30 mb-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-xl font-bold text-yellow-200 mb-2\",\n      children: prompt.pillar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 748,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-3xl md:text-4xl font-extrabold text-white leading-tight\",\n      dangerouslySetInnerHTML: {\n        __html: prompt.text.replace(/__________________/g, '<span class=\"text-pink-300 underline\">BLANK</span>')\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 749,\n      columnNumber: 13\n    }, this), prompt.type === 'image_judgment' && prompt.imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: prompt.imageUrl,\n      alt: prompt.ai_prompt_description,\n      className: \"mt-4 rounded-lg shadow-lg mx-auto w-full max-w-md h-auto object-contain\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 754,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4 text-lg text-gray-200\",\n      children: [\"Round \", gameData.currentRound, \" of \", gameData.maxRounds]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 756,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 747,\n    columnNumber: 9\n  }, this);\n};\n_c6 = GamePrompt;\nconst GameRound = ({\n  gameData,\n  gameId,\n  userId,\n  showMessage,\n  isLoadingImage\n}) => {\n  _s3();\n  // Receive isLoadingImage\n  // State for player's current action\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [customAnswer, setCustomAnswer] = useState('');\n  const [nominationData, setNominationData] = useState({\n    nominatedPlayerId: '',\n    justification: ''\n  });\n  const [selectedVote, setSelectedVote] = useState(null);\n  const [selectedChoice, setSelectedChoice] = useState(null); // For scenario_vote\n\n  const gameRef = doc(db, `artifacts/${appId}/public/data/games`, gameId);\n  const currentPlayer = gameData.players[userId];\n  const {\n    players: allPlayers,\n    currentRound,\n    status,\n    prompts,\n    submittedAnswers: submittedAnswersObj\n  } = gameData;\n  const currentPrompt = prompts[currentRound - 1]; // Access the correct prompt based on round\n  const isHost = gameData.hostId === userId;\n  const submittedAnswers = Object.values(submittedAnswersObj || {}).sort((a, b) => {\n    var _a$submittedAt, _b$submittedAt;\n    return (((_a$submittedAt = a.submittedAt) === null || _a$submittedAt === void 0 ? void 0 : _a$submittedAt.seconds) || 0) - (((_b$submittedAt = b.submittedAt) === null || _b$submittedAt === void 0 ? void 0 : _b$submittedAt.seconds) || 0);\n  });\n  const playersInGame = Object.values(allPlayers || {}).sort((a, b) => a.name.localeCompare(b.name));\n\n  // Reset local state when game phase changes\n  useEffect(() => {\n    setSelectedCard(null);\n    setCustomAnswer('');\n    setNominationData({\n      nominatedPlayerId: '',\n      justification: ''\n    });\n    setSelectedVote(null);\n    setSelectedChoice(null);\n  }, [gameData.status, gameData.currentRound]);\n  const handleSelectCard = card => {\n    setSelectedCard(card);\n  };\n  const handleCustomAnswerChange = e => {\n    setCustomAnswer(e.target.value);\n  };\n  const handleNominationChange = (field, value) => {\n    setNominationData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n  const handleSubmitAnswer = async () => {\n    if (currentPlayer.hasSubmitted) {\n      showMessage(\"You have already submitted an answer for this round.\");\n      return;\n    }\n\n    // If it's an image judgment prompt and the image hasn't loaded yet, prevent submission\n    if (currentPrompt.type === 'image_judgment' && !currentPrompt.imageUrl && isLoadingImage) {\n      showMessage(\"Please wait for the image to finish generating before submitting.\");\n      return;\n    }\n    let answerContent = '';\n    // For fill and image_judgment, answer is a card or custom text\n    if (currentPrompt.type === 'fill' || currentPrompt.type === 'image_judgment') {\n      if (selectedCard === null) {\n        showMessage(\"Please select a card or type a custom answer.\");\n        return;\n      }\n      if (selectedCard === \"BLANK_CARD_SELECTED\") {\n        if (!customAnswer.trim()) {\n          showMessage(\"Please type your custom answer.\");\n          return;\n        }\n        answerContent = customAnswer.trim();\n      } else {\n        answerContent = selectedCard;\n      }\n    } else if (currentPrompt.type === 'thisSoundsLike') {\n      if (!nominationData.nominatedPlayerId || !nominationData.justification.trim()) {\n        showMessage(\"Please select a player and provide a justification.\");\n        return;\n      }\n      answerContent = {\n        nominatedPlayerId: nominationData.nominatedPlayerId,\n        justification: nominationData.justification.trim()\n      };\n    } else {\n      showMessage(\"Invalid prompt type.\");\n      return;\n    }\n    try {\n      const submissionId = generateId();\n      const updates = {\n        [`players.${userId}.hasSubmitted`]: true,\n        // Only remove the card if it was selected from the hand and not a custom answer\n        [`players.${userId}.hand`]: (currentPrompt.type === 'fill' || currentPrompt.type === 'image_judgment') && selectedCard !== \"BLANK_CARD_SELECTED\" ? currentPlayer.hand.filter(card => card !== selectedCard) : currentPlayer.hand,\n        [`submittedAnswers.${submissionId}`]: {\n          id: submissionId,\n          playerId: userId,\n          answer: answerContent,\n          votes: 0,\n          voters: [],\n          submittedAt: serverTimestamp() // Add timestamp for stable sorting\n        }\n      };\n      await updateDoc(gameRef, updates);\n      showMessage(\"Answer submitted!\");\n    } catch (error) {\n      console.error(\"Error submitting answer:\", error);\n      showMessage(\"Failed to submit answer. Please try again.\");\n    }\n  };\n  const handleSubmitChoice = async () => {\n    if (!selectedChoice) {\n      showMessage(\"Please select a choice.\");\n      return;\n    }\n    try {\n      const updates = {\n        [`players.${userId}.hasSubmitted`]: true,\n        [`playerChoices.${userId}`]: selectedChoice\n      };\n      await updateDoc(gameRef, updates);\n      showMessage(\"Your choice has been submitted!\");\n    } catch (error) {\n      console.error(\"Error submitting choice:\", error);\n      showMessage(\"Failed to submit choice. Please try again.\");\n    }\n  };\n\n  // Check if all active players have submitted their answers\n  const submittedCount = currentPrompt.type === 'scenario_vote' ? Object.keys(gameData.playerChoices || {}).length : submittedAnswers.length;\n  const playersWhoShouldSubmit = playersInGame.filter(p => !p.isHost || currentPrompt.type !== 'fill' && currentPrompt.type !== 'image_judgment');\n  const allPlayersSubmitted = submittedCount === playersWhoShouldSubmit.length;\n\n  // Host manages phase transitions\n  useEffect(() => {\n    // Only trigger if current phase is 'submission' and all relevant players have submitted\n    if (isHost && gameData.status === 'submission' && allPlayersSubmitted && playersWhoShouldSubmit.length > 0) {\n      updateDoc(gameRef, {\n        status: 'voting'\n      }).catch(e => console.error(\"Error setting status to voting:\", e));\n    }\n  }, [allPlayersSubmitted, playersWhoShouldSubmit.length, isHost, gameData.status, gameRef]);\n  const handleScenarioVote = async (targetPlayerId, voteType) => {\n    if (currentPlayer.hasVoted) {\n      showMessage(\"You have already submitted your votes for this round.\");\n      return;\n    }\n\n    // Prevent voting for self for scenario_vote as well\n    if (targetPlayerId === userId) {\n      showMessage(\"You cannot vote for your own take.\");\n      return;\n    }\n    const votePath = `votes.${targetPlayerId}.${voteType}`;\n    try {\n      await updateDoc(gameRef, {\n        [votePath]: arrayUnion(userId)\n      });\n      showMessage(`${voteType === 'hearts' ? 'Heart' : 'Red Flag'} given!`);\n    } catch (error) {\n      console.error(\"Error casting scenario vote:\", error);\n      showMessage(\"Failed to cast vote.\");\n    }\n  };\n  const handleLockInVotes = async () => {\n    if (currentPlayer.hasVoted) return;\n    try {\n      await updateDoc(gameRef, {\n        [`players.${userId}.hasVoted`]: true\n      });\n      showMessage(\"Votes locked in!\");\n    } catch (error) {\n      console.error(\"Error locking in votes:\", error);\n      showMessage(\"Failed to lock in votes.\");\n    }\n  };\n  const handleVote = async submissionId => {\n    if (currentPlayer.hasVoted) {\n      showMessage(\"You've already voted this round.\");\n      return;\n    }\n    if (selectedVote) {\n      showMessage(\"You can only vote for one answer.\");\n      return;\n    }\n    const submission = submittedAnswersObj[submissionId]; // Use submittedAnswersObj directly\n    if (!submission) return;\n\n    // Prevent voting for oneself in applicable modes\n    if (submission.playerId === userId) {\n      showMessage(\"You cannot vote for your own answer.\");\n      return;\n    }\n    setSelectedVote(submissionId); // Optimistically update UI\n\n    try {\n      await updateDoc(gameRef, {\n        [`submittedAnswers.${submissionId}.votes`]: increment(1),\n        [`submittedAnswers.${submissionId}.voters`]: arrayUnion(userId),\n        [`players.${userId}.hasVoted`]: true,\n        [`votes.${submissionId}`]: arrayUnion(userId) // General vote tracking\n      });\n      showMessage(\"Vote submitted!\");\n    } catch (error) {\n      console.error(\"Error submitting vote:\", error);\n      setSelectedVote(null); // Revert on error\n      showMessage(\"Failed to submit vote. Please try again.\");\n    }\n  };\n\n  // Determine if all players have voted\n  const votersCount = playersInGame.filter(p => p.hasVoted).length;\n  const allPlayersVoted = votersCount === playersInGame.length;\n  useEffect(() => {\n    // Only trigger if we are in the voting phase and all active players have voted\n    if (isHost && gameData.status === 'voting' && allPlayersVoted && playersInGame.length > 0) {\n      const updates = {};\n      let roundResults = {}; // For scenario_vote display\n\n      if (currentPrompt.type === 'scenario_vote') {\n        playersInGame.forEach(player => {\n          const votesOnPlayer = gameData.votes[player.id] || {};\n          const hearts = (votesOnPlayer.hearts || []).length;\n          const redFlags = (votesOnPlayer.redFlags || []).length;\n          const roundScore = hearts - redFlags;\n          updates[`players.${player.id}.score`] = increment(roundScore);\n          updates[`players.${player.id}.totalHearts`] = increment(hearts);\n          updates[`players.${player.id}.totalRedFlags`] = increment(redFlags);\n          roundResults[player.id] = {\n            choiceKey: gameData.playerChoices[player.id],\n            hearts,\n            redFlags\n          };\n        });\n      } else {\n        // Existing scoring logic for other modes\n        let maxVotes = 0;\n        let winningSubmissions = [];\n        submittedAnswers.forEach(sub => {\n          if (sub.votes > maxVotes) {\n            maxVotes = sub.votes;\n            winningSubmissions = [sub];\n          } else if (sub.votes === maxVotes) {\n            winningSubmissions.push(sub);\n          }\n        });\n        if (maxVotes > 0) {\n          winningSubmissions.forEach(sub => {\n            updates[`players.${sub.playerId}.score`] = increment(1);\n          });\n        }\n        // Store winning submission IDs for retrieval in LeaderboardPage\n        updates.currentWinningSubmission = maxVotes > 0 ? winningSubmissions.map(s => s.id) : null;\n      }\n      updates.status = 'round_end';\n      if (currentPrompt.type === 'scenario_vote') {\n        updates.roundResults = roundResults;\n      }\n      updateDoc(gameRef, updates).catch(e => console.error(\"Error ending round:\", e));\n    }\n  }, [allPlayersVoted, playersInGame.length, isHost, gameData.status, gameRef, submittedAnswers, currentPrompt]);\n  const playerHand = (currentPlayer === null || currentPlayer === void 0 ? void 0 : currentPlayer.hand) || [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full max-w-4xl mx-auto p-4 flex flex-col items-center justify-center\",\n    children: [/*#__PURE__*/_jsxDEV(GamePrompt, {\n      prompt: currentPrompt,\n      gameData: gameData,\n      isLoadingImage: isLoadingImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1040,\n      columnNumber: 13\n    }, this), \" \", gameData.status === 'submission' && (currentPrompt.type === 'scenario_vote' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full text-center\",\n      children: [!currentPlayer.hasSubmitted ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-2xl font-bold text-white mb-4\",\n          children: \"What's your take?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1047,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-3 mb-6\",\n          children: Object.entries(currentPrompt.choices).sort((a, b) => a[0].localeCompare(b[0])).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setSelectedChoice(key),\n            className: `w-full text-left p-4 rounded-xl shadow-md transition transform ${selectedChoice === key ? 'bg-blue-400 scale-105 ring-4 ring-blue-500 text-white' : 'bg-white hover:bg-gray-100 text-gray-900'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-bold uppercase mr-3\",\n              children: [key, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1057,\n              columnNumber: 45\n            }, this), value]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1050,\n            columnNumber: 41\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1048,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmitChoice,\n          disabled: !selectedChoice,\n          className: \"w-full bg-gradient-to-r from-purple-500 to-indigo-600 hover:from-purple-600 hover:to-indigo-700 text-white font-bold py-4 px-8 rounded-full shadow-lg transition duration-300 transform hover:scale-105 disabled:opacity-50\",\n          children: \"Submit Choice\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1061,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-2xl text-gray-200 animate-pulse\",\n        children: \"Waiting for other players to submit their take...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1070,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-300 mt-4 text-lg\",\n        children: [\"Submitted: \", submittedCount, \" / \", playersWhoShouldSubmit.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1072,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1044,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-lg mx-auto\",\n      children: [!currentPlayer.hasSubmitted ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold text-white mb-4\",\n          children: \"Your Hand:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1080,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-2 mb-6\",\n          children: [playerHand.map((card, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            // Use card content + index as key for uniqueness\n            onClick: () => handleSelectCard(card),\n            className: `p-3 rounded-lg shadow-md h-32 text-sm text-gray-900 transition-transform transform hover:scale-105 ${selectedCard === card ? 'bg-cyan-300 ring-4 ring-cyan-500' : 'bg-white hover:bg-gray-100'}`,\n            children: card\n          }, card + index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1083,\n            columnNumber: 41\n          }, this)), (currentPrompt.type === 'fill' || currentPrompt.type === 'image_judgment') && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSelectCard(\"BLANK_CARD_SELECTED\"),\n            className: `p-3 rounded-lg shadow-md h-32 text-sm transition-transform transform hover:scale-105 ${selectedCard === \"BLANK_CARD_SELECTED\" ? 'bg-yellow-300 ring-4 ring-yellow-500 text-gray-900' : 'bg-gray-200 hover:bg-gray-300 text-gray-900'}`,\n            children: \"Write your own...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1092,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1081,\n          columnNumber: 33\n        }, this), currentPrompt.type === 'thisSoundsLike' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-bold text-white mb-2\",\n            children: \"1. Nominate a Player\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1103,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: nominationData.nominatedPlayerId,\n            onChange: e => setNominationData(prev => ({\n              ...prev,\n              nominatedPlayerId: e.target.value\n            })),\n            className: \"w-full p-3 rounded-lg bg-white text-gray-900\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a player...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1109,\n              columnNumber: 45\n            }, this), playersInGame.filter(p => p.id !== userId).map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: p.id,\n              children: p.name\n            }, p.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1111,\n              columnNumber: 49\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1104,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-bold text-white mb-2 mt-4\",\n            children: \"2. Justify your nomination\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1114,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: nominationData.justification,\n            onChange: e => setNominationData(prev => ({\n              ...prev,\n              justification: e.target.value\n            })),\n            placeholder: \"Why does this sound like them?\",\n            className: \"w-full p-3 rounded-lg bg-white text-gray-900 h-24\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1115,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1102,\n          columnNumber: 37\n        }, this), selectedCard === \"BLANK_CARD_SELECTED\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-bold text-white mb-2\",\n            children: \"Write Your Custom Answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1126,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: customAnswer,\n            onChange: e => setCustomAnswer(e.target.value),\n            className: \"w-full p-3 rounded-lg bg-white text-gray-900 h-24\",\n            placeholder: \"Make it good!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1127,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1125,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmitAnswer,\n          className: \"w-full bg-gradient-to-r from-teal-500 to-cyan-600 hover:from-teal-600 hover:to-cyan-700 text-white font-bold py-4 px-8 rounded-full shadow-lg transition duration-300 transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\",\n          disabled: (currentPrompt.type === 'fill' || currentPrompt.type === 'image_judgment') && (!selectedCard || selectedCard === \"BLANK_CARD_SELECTED\" && !customAnswer.trim()) || currentPrompt.type === 'thisSoundsLike' && (!nominationData.nominatedPlayerId || !nominationData.justification.trim()),\n          children: \"Submit Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1135,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-2xl text-gray-200 animate-pulse\",\n        children: \"Waiting for other players to submit...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1144,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-300 mt-4 text-lg\",\n        children: [\"Submitted: \", submittedCount, \" / \", playersWhoShouldSubmit.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1146,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1077,\n      columnNumber: 21\n    }, this)), gameData.status === 'voting' && (currentPrompt.type === 'scenario_vote' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-2xl font-bold text-white mb-4\",\n        children: \"Judge Their Takes!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1156,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-300 mb-6\",\n        children: \"Give a \\u2764\\uFE0F for a relationship goal or a \\uD83D\\uDEA9 for a red flag.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1157,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4 mb-6\",\n        children: playersInGame.filter(p => p.id !== userId).map(player => {\n          var _gameData$votes, _gameData$votes$playe, _gameData$votes2, _gameData$votes2$play;\n          // Filter self from voting\n          const choiceKey = gameData.playerChoices[player.id];\n          const choiceText = choiceKey ? currentPrompt.choices[choiceKey] : \"No choice submitted.\";\n          const hearts = ((_gameData$votes = gameData.votes) === null || _gameData$votes === void 0 ? void 0 : (_gameData$votes$playe = _gameData$votes[player.id]) === null || _gameData$votes$playe === void 0 ? void 0 : _gameData$votes$playe.hearts) || [];\n          const redFlags = ((_gameData$votes2 = gameData.votes) === null || _gameData$votes2 === void 0 ? void 0 : (_gameData$votes2$play = _gameData$votes2[player.id]) === null || _gameData$votes2$play === void 0 ? void 0 : _gameData$votes2$play.redFlags) || [];\n          const hasVotedHeart = hearts.includes(userId);\n          const hasVotedFlag = redFlags.includes(userId);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white bg-opacity-20 rounded-xl p-4 text-left\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"font-bold text-white text-lg\",\n              children: [player.name, \"'s take:\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1169,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-200 mb-3\",\n              children: [\"\\\"\", choiceText, \"\\\"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1170,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-end items-center space-x-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleScenarioVote(player.id, 'hearts'),\n                disabled: hasVotedHeart || hasVotedFlag || currentPlayer.hasVoted,\n                className: `px-4 py-2 rounded-full font-bold text-2xl transition transform hover:scale-110 disabled:opacity-50 ${hasVotedHeart ? 'bg-pink-400' : 'bg-gray-300 hover:bg-pink-300'}`,\n                children: \"\\u2764\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1172,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleScenarioVote(player.id, 'redFlags'),\n                disabled: hasVotedHeart || hasVotedFlag || currentPlayer.hasVoted,\n                className: `px-4 py-2 rounded-full font-bold text-2xl transition transform hover:scale-110 disabled:opacity-50 ${hasVotedFlag ? 'bg-red-500' : 'bg-gray-300 hover:bg-red-400'}`,\n                children: \"\\uD83D\\uDEA9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1179,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1171,\n              columnNumber: 41\n            }, this)]\n          }, player.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1168,\n            columnNumber: 37\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1158,\n        columnNumber: 25\n      }, this), !currentPlayer.hasVoted && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLockInVotes,\n        className: \"w-full bg-gradient-to-r from-green-500 to-lime-400 text-white font-bold py-4 px-8 rounded-full shadow-lg\",\n        children: \"Lock In Your Votes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1192,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-300 mt-4 text-lg\",\n        children: [\"Voted: \", votersCount, \" / \", playersInGame.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1196,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1155,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-2xl font-bold text-white mb-4\",\n        children: \"Vote for your favorite!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1202,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\",\n        children: submittedAnswers.map(sub => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative bg-white bg-opacity-20 rounded-xl p-4 flex flex-col justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-white text-lg font-semibold mb-4\",\n            children: [\"\\\"\", sub.answer, \"\\\"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1206,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-right\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleVote(sub.id),\n              disabled: currentPlayer.hasVoted || sub.playerId === userId,\n              className: \"bg-gradient-to-r from-pink-500 to-orange-500 hover:from-pink-600 hover:to-orange-600 text-white font-bold py-2 px-4 rounded-full shadow-lg transition duration-300 disabled:opacity-50\",\n              children: \"Vote\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1208,\n              columnNumber: 41\n            }, this), gameData.votes[sub.id] && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ml-4 text-lg font-bold text-white\",\n              children: (gameData.votes[sub.id] || []).length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1215,\n              columnNumber: 68\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1207,\n            columnNumber: 37\n          }, this)]\n        }, sub.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1205,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1203,\n        columnNumber: 25\n      }, this), !currentPlayer.hasVoted && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg text-gray-300\",\n        children: \"Choose the funniest or most fitting answer!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1221,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-300 mt-4 text-lg\",\n        children: [\"Voted: \", votersCount, \" / \", playersInGame.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1223,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1201,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1039,\n    columnNumber: 9\n  }, this);\n};\n\n// LeaderboardPage Component\n_s3(GameRound, \"B3gtX9ogToPiEp6z37D0vFeKFts=\");\n_c7 = GameRound;\nconst LeaderboardPage = ({\n  gameData,\n  userId,\n  gameId,\n  showMessage\n}) => {\n  const isHost = gameData.hostId === userId;\n  const players = Object.values(gameData.players).sort((a, b) => b.score - a.score);\n  const currentPrompt = gameData.prompts[gameData.currentRound - 1]; // Access the correct prompt\n\n  const winningSubmissions = (gameData.currentWinningSubmission || []).map(id => gameData.submittedAnswers[id]).filter(Boolean);\n  const winnerNames = winningSubmissions.map(sub => {\n    var _gameData$players$sub;\n    return (_gameData$players$sub = gameData.players[sub.playerId]) === null || _gameData$players$sub === void 0 ? void 0 : _gameData$players$sub.name;\n  }).join(', ');\n  const handleNextRound = async () => {\n    if (!isHost) return;\n    try {\n      const gameRef = doc(db, `artifacts/${appId}/public/data/games`, gameId);\n      const nextRound = gameData.currentRound + 1;\n      if (nextRound > gameData.maxRounds) {\n        await updateDoc(gameRef, {\n          status: 'game_over'\n        });\n      } else {\n        const promptCardsForCategory = PROMPT_CARDS[gameData.category];\n        const newPrompt = getRandomPrompt(promptCardsForCategory, gameData.promptHistory || []);\n\n        // Reset player states for the new round and replenish hands\n        const updatedPlayers = {};\n        let currentAnswerCardPool = [...gameData.answerCardPool]; // Make a mutable copy\n\n        for (const pId in gameData.players) {\n          const player = gameData.players[pId];\n          let currentHand = player.hand || [];\n          const cardsNeeded = 10 - currentHand.length; // Ensure hand size is 10\n\n          let newCards = [];\n          if (cardsNeeded > 0) {\n            if (currentAnswerCardPool.length < cardsNeeded) {\n              // If pool runs low, replenish it with all ANSWER_CARDS shuffled\n              currentAnswerCardPool = shuffleArray([...ANSWER_CARDS]);\n              console.warn(\"Answer card pool replenished by reshuffling all cards.\");\n            }\n            newCards = currentAnswerCardPool.slice(0, cardsNeeded);\n            currentAnswerCardPool = currentAnswerCardPool.slice(cardsNeeded);\n          }\n          updatedPlayers[pId] = {\n            ...player,\n            hand: [...currentHand, ...newCards],\n            // Replenish hand\n            hasSubmitted: false,\n            hasVoted: false\n          };\n        }\n        await updateDoc(gameRef, {\n          status: 'submission',\n          currentRound: nextRound,\n          prompts: arrayUnion(newPrompt),\n          // Store the full new prompt object\n          promptHistory: arrayUnion(newPrompt.text),\n          // Only store text for history check\n          players: updatedPlayers,\n          submittedAnswers: {},\n          // Clear submissions for new round\n          playerChoices: {},\n          // Clear player choices for new round\n          votes: {},\n          // Clear votes for new round\n          roundResults: deleteField(),\n          // Clean up old round results\n          currentWinningSubmission: null,\n          // Clear winning submission from previous round\n          answerCardPool: currentAnswerCardPool,\n          // Save the updated pool state\n          isLoadingImage: newPrompt.type === 'image_judgment' // Set loading flag for host to generate image\n        });\n      }\n    } catch (error) {\n      console.error(\"Error advancing round:\", error);\n      showMessage(\"Failed to advance round. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-4xl font-bold text-white mb-6 animate-fade-in-down\",\n      children: [\"Round \", gameData.currentRound, \" Results\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1306,\n      columnNumber: 13\n    }, this), currentPrompt.type === 'scenario_vote' && gameData.roundResults ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white bg-opacity-20 backdrop-blur-md rounded-xl shadow-lg p-6 mb-8 w-full max-w-2xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-2xl font-bold text-cyan-300 mb-4\",\n        children: \"How did everyone do?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1310,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: players.map(player => {\n          const result = gameData.roundResults[player.id];\n          if (!result) return null;\n          const choiceText = currentPrompt.choices[result.choiceKey];\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-left p-4 bg-gray-900 bg-opacity-50 rounded-lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"font-bold text-white text-xl\",\n              children: [player.name, \"'s take:\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1318,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-300 italic my-2\",\n              children: [\"\\\"\", choiceText, \"\\\"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1319,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-end items-center space-x-4 text-xl\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-pink-400 font-bold\",\n                children: [\"\\u2764\\uFE0F \", result.hearts]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1321,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-red-500 font-bold\",\n                children: [\"\\uD83D\\uDEA9 \", result.redFlags]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1322,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1320,\n              columnNumber: 37\n            }, this)]\n          }, player.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1317,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1311,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1309,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white bg-opacity-20 backdrop-blur-md rounded-xl shadow-lg p-6 mb-8 w-full max-w-2xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-2xl font-bold text-cyan-300 mb-2\",\n        children: [\"Winning Answer\", winningSubmissions.length > 1 ? 's' : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1331,\n        columnNumber: 21\n      }, this), winningSubmissions.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [winningSubmissions.map(sub => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-white text-xl font-semibold bg-gray-900 bg-opacity-50 rounded-md p-4 my-2\",\n          children: [\"\\\"\", sub.answer, \"\\\"\"]\n        }, sub.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1335,\n          columnNumber: 33\n        }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-300 mt-2 text-lg\",\n          children: [\"Submitted by: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-bold text-white\",\n            children: winnerNames\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1337,\n            columnNumber: 85\n          }, this), \" (+1 point)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1337,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-white text-xl font-semibold\",\n        children: \"No winning answer this round. Everyone gets to keep their dignity.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1340,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1330,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white bg-opacity-20 backdrop-blur-md rounded-xl shadow-lg p-6 w-full max-w-md mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-3xl font-bold text-white mb-4\",\n        children: \"Leaderboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1347,\n        columnNumber: 17\n      }, this), gameData.category === \"Red Flag or Relationship Goal\" ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"space-y-3 mb-8\",\n        children: players.map((player, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `flex items-center justify-between p-4 rounded-xl shadow-md text-white ${index === 0 ? 'bg-yellow-400 bg-opacity-50' : 'bg-white bg-opacity-30'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-lg font-semibold\",\n            children: player.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1354,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-4 text-lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-pink-400 font-bold\",\n              children: [\"\\u2764\\uFE0F \", player.totalHearts || 0]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1356,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-red-500 font-bold\",\n              children: [\"\\uD83D\\uDEA9 \", player.totalRedFlags || 0]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1357,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1355,\n            columnNumber: 33\n          }, this)]\n        }, player.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1351,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1349,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"space-y-3 mb-8\",\n        children: players.map((player, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `flex items-center justify-between p-4 rounded-xl shadow-md ${index === 0 ? 'bg-yellow-300 text-gray-900 font-bold text-xl' : 'bg-white bg-opacity-30 text-white'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-lg font-bold\",\n              children: [index + 1, \".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1369,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-lg\",\n              children: player.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1370,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1368,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-lg font-bold\",\n            children: [player.score, \" pts\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1372,\n            columnNumber: 33\n          }, this)]\n        }, player.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1365,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1363,\n        columnNumber: 21\n      }, this), isHost && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextRound,\n        className: \"w-full bg-gradient-to-r from-purple-500 to-indigo-600 hover:from-purple-600 hover:to-indigo-700 text-white font-bold py-4 px-8 rounded-full shadow-lg transition duration-300 transform hover:scale-105\",\n        children: gameData.currentRound < gameData.maxRounds ? 'Next Round' : 'End Game'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1378,\n        columnNumber: 21\n      }, this), !isHost && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xl text-gray-300 italic\",\n        children: \"Waiting for host to continue...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1386,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1346,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1305,\n    columnNumber: 9\n  }, this);\n};\n\n// WinnerPage Component\n_c8 = LeaderboardPage;\nconst WinnerPage = ({\n  gameData,\n  userId,\n  onPlayAgain,\n  showMessage\n}) => {\n  const players = Object.values(gameData.players);\n  const winner = players.length > 0 ? players.sort((a, b) => b.score - a.score)[0] : null;\n  const lovers = players.filter(p => p.totalHearts > p.totalRedFlags).sort((a, b) => b.score - a.score);\n  const walkingRedFlags = players.filter(p => p.totalRedFlags > p.totalHearts).sort((a, b) => a.score - b.score);\n  const neutral = players.filter(p => p.totalHearts === p.totalRedFlags);\n  const isHost = gameData.hostId === userId;\n  const getPlayerTitle = player => {\n    if (player.totalHearts + player.totalRedFlags > 0) {\n      return player.totalHearts >= player.totalRedFlags ? \"Lover\" : \"Walking Red Flag\";\n    }\n    return \"Still Figuring it Out\";\n  };\n  const handleDeleteGame = async () => {\n    showMessage(\"Are you sure you want to delete this game? This action cannot be undone.\", async () => {\n      try {\n        // Ensure gameData.id is available. It should be, as this is WinnerPage.\n        // Firebase doc ID is automatically populated on gameData from onSnapshot\n        if (gameData.id) {\n          await deleteDoc(doc(db, `artifacts/${appId}/public/data/games`, gameData.id));\n          onPlayAgain(); // Go back to home page after deletion\n        } else {\n          console.error(\"Game ID is undefined, cannot delete.\");\n          showMessage(\"Failed to delete game: Game ID missing.\");\n        }\n      } catch (error) {\n        console.error(\"Error deleting game:\", error);\n        showMessage(\"Failed to delete game. Please try again.\");\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-5xl font-bold text-yellow-300 mb-4 animate-bounce\",\n      children: \"Game Over!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1432,\n      columnNumber: 13\n    }, this), winner && /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-3xl text-white mb-8\",\n      children: [\"And the winner is... \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font-bold text-cyan-400\",\n        children: [winner.name, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1433,\n        columnNumber: 86\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1433,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white bg-opacity-20 backdrop-blur-md rounded-xl shadow-lg p-6 w-full max-w-2xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"text-2xl font-bold text-white mb-4\",\n        children: \"Final Standings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1436,\n        columnNumber: 17\n      }, this), lovers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"text-2xl font-bold text-pink-400 mb-3\",\n          children: \"Lovers \\u2764\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1440,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"space-y-3\",\n          children: lovers.map(player => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"flex items-center justify-center p-3 bg-gray-900 bg-opacity-50 rounded-lg text-white\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xl font-semibold\",\n              children: player.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1444,\n              columnNumber: 37\n            }, this)\n          }, player.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1443,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1441,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1439,\n        columnNumber: 21\n      }, this), walkingRedFlags.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"text-2xl font-bold text-red-500 mb-3\",\n          children: \"Walking Red Flags \\uD83D\\uDEA9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1453,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"space-y-3\",\n          children: walkingRedFlags.map(player => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"flex items-center justify-center p-3 bg-gray-900 bg-opacity-50 rounded-lg text-white\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xl font-semibold\",\n              children: player.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1457,\n              columnNumber: 37\n            }, this)\n          }, player.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1456,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1454,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1452,\n        columnNumber: 21\n      }, this), neutral.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"text-2xl font-bold text-gray-400 mb-3\",\n          children: \"Still Figuring Things Out... \\uD83E\\uDD14\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1466,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"space-y-3\",\n          children: neutral.map(player => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"flex items-center justify-center p-3 bg-gray-900 bg-opacity-50 rounded-lg text-white\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xl font-semibold\",\n              children: player.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1470,\n              columnNumber: 37\n            }, this)\n          }, player.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1469,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1467,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1465,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1435,\n      columnNumber: 13\n    }, this), isHost && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onPlayAgain,\n        className: \"w-full bg-gradient-to-r from-green-500 to-lime-400 hover:from-green-600 hover:to-lime-500 text-white font-bold py-4 px-8 rounded-full shadow-lg transition duration-300 transform hover:scale-105 mb-4\",\n        children: \"Play Again!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1480,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDeleteGame,\n        className: \"w-full bg-red-600 hover:bg-red-700 text-white font-bold py-4 px-8 rounded-full shadow-lg transition duration-300 transform hover:scale-105\",\n        children: \"Delete This Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1486,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), !isHost && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-xl text-gray-300 italic\",\n      children: \"Ask the host to start a new game!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1495,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1431,\n    columnNumber: 9\n  }, this);\n};\n\n// Utility function to shuffle an array (Fisher-Yates)\n_c9 = WinnerPage;\nconst shuffleArray = array => {\n  let currentIndex = array.length,\n    randomIndex;\n  while (currentIndex !== 0) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n    [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n  }\n  return array;\n};\n\n// Utility function to get a random prompt that hasn't been played yet\nconst getRandomPrompt = (promptList, history) => {\n  // History should contain the 'text' of previously played prompts\n  const availablePrompts = promptList.filter(p => !history.includes(p.text));\n  if (availablePrompts.length === 0) {\n    console.warn(\"All prompts for this category have been used. Reshuffling prompts for this round.\");\n    return promptList[Math.floor(Math.random() * promptList.length)]; // If all used, pick randomly from full list\n  }\n  const randomIndex = Math.floor(Math.random() * availablePrompts.length);\n  return availablePrompts[randomIndex];\n};\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"MessageModal\");\n$RefreshReg$(_c2, \"App\");\n$RefreshReg$(_c3, \"HomePage\");\n$RefreshReg$(_c4, \"LobbyPage\");\n$RefreshReg$(_c5, \"GamePage\");\n$RefreshReg$(_c6, \"GamePrompt\");\n$RefreshReg$(_c7, \"GameRound\");\n$RefreshReg$(_c8, \"LeaderboardPage\");\n$RefreshReg$(_c9, \"WinnerPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","initializeApp","getAuth","signInAnonymously","signInWithCustomToken","onAuthStateChanged","getFirestore","doc","getDoc","addDoc","setDoc","updateDoc","deleteDoc","onSnapshot","collection","query","where","arrayUnion","arrayRemove","serverTimestamp","getDocs","deleteField","increment","jsxDEV","_jsxDEV","Fragment","_Fragment","firebaseConfig","JSON","parse","process","env","REACT_APP_FIREBASE_CONFIG","appId","REACT_APP_ID","app","db","auth","generateId","Math","random","toString","substring","PROMPT_CARDS","type","pillar","text","ai_prompt_description","choices","a","b","c","d","ANSWER_CARDS","MessageModal","message","onClose","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","App","_s","userId","setUserId","currentPage","setCurrentPage","gameId","setGameId","gameData","setGameData","setMessage","isAuthReady","setIsAuthReady","isLoadingImage","setIsLoadingImage","playerName","setPlayerName","SESSION_USER_ID_KEY","unsubscribe","currentUser","initialAuthToken","REACT_APP_INITIAL_AUTH_TOKEN","error","console","uid","tempUserId","sessionStorage","getItem","crypto","randomUUID","setItem","log","gameDocRef","unsubscribeGame","docSnap","exists","_data$prompts","_data$prompts2","data","oldGameData","hostId","status","prompts","currentRound","imageUrl","currentPromptToGenerate","generateImageForPrompt","showMessage","promptDescription","Promise","resolve","setTimeout","placeholderUrl","encodeURIComponent","msg","handleNextRound","gameRef","maxRounds","category","promptHistory","nextRound","promptCardsForCategory","newPrompt","getRandomPrompt","updatedPromptHistory","updatedPlayers","pId","players","hasSubmitted","hasVoted","submittedAnswers","playerChoices","votes","currentWinningSubmission","shuffleArray","array","currentIndex","length","randomIndex","floor","promptList","history","availablePrompts","filter","p","includes","renderPage","HomePage","LobbyPage","GamePage","LeaderboardPage","WinnerPage","onPlayAgain","callback","_c2","_s2","joinCode","setJoinCode","handleCreateGame","trim","categories","Object","keys","randomCategory","gameCode","toUpperCase","initialPlayers","id","name","score","isHost","hand","slice","totalRedFlags","totalHearts","newGameRef","createdAt","answerCardPool","handleJoinGame","q","querySnapshot","empty","gameDoc","docs","playerHand","placeholder","value","onChange","e","target","maxLength","_c3","values","sort","localeCompare","canStartGame","handleCategoryChange","newCategory","handleStartGame","playersInGame","availableCards","i","warn","cardIndex","push","splice","initialPrompt","min","map","cat","player","disabled","_c4","currentPrompt","GameRound","_c5","GamePrompt","prompt","dangerouslySetInnerHTML","__html","replace","src","alt","_c6","_s3","selectedCard","setSelectedCard","customAnswer","setCustomAnswer","nominationData","setNominationData","nominatedPlayerId","justification","selectedVote","setSelectedVote","selectedChoice","setSelectedChoice","currentPlayer","allPlayers","submittedAnswersObj","_a$submittedAt","_b$submittedAt","submittedAt","seconds","handleSelectCard","card","handleCustomAnswerChange","handleNominationChange","field","prev","handleSubmitAnswer","answerContent","submissionId","updates","playerId","answer","voters","handleSubmitChoice","submittedCount","playersWhoShouldSubmit","allPlayersSubmitted","catch","handleScenarioVote","targetPlayerId","voteType","votePath","handleLockInVotes","handleVote","submission","votersCount","allPlayersVoted","roundResults","forEach","votesOnPlayer","hearts","redFlags","roundScore","choiceKey","maxVotes","winningSubmissions","sub","s","entries","key","index","_gameData$votes","_gameData$votes$playe","_gameData$votes2","_gameData$votes2$play","choiceText","hasVotedHeart","hasVotedFlag","_c7","Boolean","winnerNames","_gameData$players$sub","join","currentAnswerCardPool","currentHand","cardsNeeded","newCards","result","_c8","winner","lovers","walkingRedFlags","neutral","getPlayerTitle","handleDeleteGame","_c9","$RefreshReg$"],"sources":["C:/Users/inava/online-game/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { initializeApp } from 'firebase/app';\r\nimport { getAuth, signInAnonymously, signInWithCustomToken, onAuthStateChanged } from 'firebase/auth';\r\nimport { getFirestore, doc, getDoc, addDoc, setDoc, updateDoc, deleteDoc, onSnapshot, collection, query, where, arrayUnion, arrayRemove, serverTimestamp, getDocs, deleteField, increment } from 'firebase/firestore';\r\n\r\n// Firebase configuration from environment variables\r\nconst firebaseConfig = JSON.parse(process.env.REACT_APP_FIREBASE_CONFIG || '{}');\r\nconst appId = process.env.REACT_APP_ID || 'default-app-id';\r\n\r\n// Initialize Firebase outside the component to avoid re-initialization\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getFirestore(app);\r\nconst auth = getAuth(app);\r\n\r\n// Helper for generating unique IDs (not cryptographically secure, but fine for game items)\r\nconst generateId = () => Math.random().toString(36).substring(2, 11);\r\n\r\n// Pre-defined game data\r\nconst PROMPT_CARDS = {\r\n    \"First Dates\": [\r\n        { type: \"fill\", pillar: \"Boundaries\", text: \"My date set a clear boundary by stating they wouldn't discuss anything before __________________.\" },\r\n        { type: \"fill\", pillar: \"Communication\", text: \"I knew there would be communication challenges when their opening line was, 'So, do you believe in __________________?'\" },\r\n        { type: \"fill\", pillar: \"Respect\", text: \"My date showed a shocking lack of respect when they started __________________ mid-conversation.\" },\r\n        { type: \"thisSoundsLike\", pillar: \"Compromise\", text: \"This sounds like... someone who, on a first date, orders for both of you and then says, 'No compromise on the appetizers!'\" },\r\n        { type: \"fill\", pillar: \"Boundaries\", text: \"The biggest red flag on our first date was when they instantly started talking about __________________.\" },\r\n        { type: \"fill\", pillar: \"Communication\", text: \"Their idea of 'getting to know you' involved asking about my __________________.\" },\r\n        { type: \"fill\", pillar: \"Respect\", text: \"I lost all respect for them when they pulled out a __________________ at the table.\" },\r\n        { type: \"thisSoundsLike\", pillar: \"Boundaries\", text: \"This sounds like... someone who brings their ex to a first date as a 'wingman'.\" },\r\n        {\r\n            type: \"image_judgment\",\r\n            pillar: \"Boundaries\",\r\n            text: \"What's your red flag reaction to this scene?\",\r\n            ai_prompt_description: \"A photo of a person setting up a large, elaborate, and overly aggressive 'no trespassing' sign with barbed wire around a small, innocent-looking flower bed.\"\r\n        },\r\n    ],\r\n    \"Proposals & Engagements\": [\r\n        { type: \"fill\", pillar: \"Compromise\", text: \"When I tried to compromise on the wedding theme, they firmly stated, 'It's either __________________ or nothing!'\" },\r\n        { type: \"fill\", pillar: \"Communication\", text: \"They proposed using an elaborate code only they understood, which made for terrible __________________.\" },\r\n        { type: \"fill\", pillar: \"Respect\", text: \"My partner showed their true respect for my wishes by including __________________ in the engagement announcement.\" },\r\n        { type: \"thisSoundsLike\", pillar: \"Boundaries\", text: \"This sounds like... someone whose engagement photo shoot involved breaking into a national park for 'the perfect shot,' ignoring all signs.\" },\r\n        { type: \"fill\", pillar: \"Compromise\", text: \"Our engagement almost ended when we couldn't compromise on __________________.\" },\r\n        { type: \"fill\", pillar: \"Communication\", text: \"The proposal would have been perfect if only their communication hadn't involved __________________.\" },\r\n        { type: \"fill\", pillar: \"Respect\", text: \"I knew they respected me when their proposal included a promise to never __________________.\" },\r\n        { type: \"thisSoundsLike\", pillar: \"Communication\", text: \"This sounds like... a proposal delivered via carrier pigeon, with a misspelled 'marry' note.\" },\r\n        {\r\n            type: \"image_judgment\",\r\n            pillar: \"Compromise\",\r\n            text: \"What does this image say about compromise?\",\r\n            ai_prompt_description: \"A photo of two people trying to assemble a piece of IKEA furniture with no instructions, one holding the manual upside down, the other trying to use a banana as a screwdriver. Stress and confusion on their faces.\"\r\n        },\r\n    ],\r\n    \"Family & Children\": [\r\n        { type: \"fill\", pillar: \"Communication\", text: \"My partner and I communicate solely through __________________ when discussing bedtime routines.\" },\r\n        { type: \"fill\", pillar: \"Boundaries\", text: \"My in-laws always cross the boundary by __________________ every time they visit.\" },\r\n        { type: \"fill\", pillar: \"Respect\", text: \"Our toddler shows respect for household rules by __________________ at bedtime.\" },\r\n        { type: \"thisSoundsLike\", pillar: \"Compromise\", text: \"This sounds like... someone who, during a family road trip, insists on listening to their obscure polka music playlist for eight hours straight with no compromise.\" },\r\n        { type: \"fill\", pillar: \"Communication\", text: \"Family dinners often devolve into chaos when someone mentions __________________.\" },\r\n        { type: \"fill\", pillar: \"Boundaries\", text: \"We had to set a strict boundary about __________________ after the last family gathering.\" },\r\n        { type: \"fill\", pillar: \"Respect\", text: \"Our kids finally learned respect when we introduced the rule about __________________.\" },\r\n        { type: \"thisSoundsLike\", pillar: \"Boundaries\", text: \"This sounds like... parents who track their adult children's every move using a GPS chip.\" },\r\n        {\r\n            type: \"image_judgment\",\r\n            pillar: \"Communication\",\r\n            text: \"How would you handle this communication breakdown in a family setting?\",\r\n            ai_prompt_description: \"A close-up photo of a family dinner table where one person is enthusiastically talking while everyone else at the table is looking down at their phones, clearly disengaged.\"\r\n        },\r\n    ],\r\n    \"Friends with Benefits (FWB)\": [\r\n        { type: \"fill\", pillar: \"Boundaries\", text: \"Our FWB arrangement works because we both respect the boundary of never discussing __________________.\" },\r\n        { type: \"fill\", pillar: \"Communication\", text: \"They suggested we communicate solely through __________________ to keep things strictly casual.\" },\r\n        { type: \"fill\", pillar: \"Compromise\", text: \"The biggest compromise in our FWB situation was agreeing to __________________.\" },\r\n        { type: \"thisSoundsLike\", pillar: \"Respect\", text: \"This sounds like... someone who shows respect for their FWB's space by only 'dropping by' unannounced at 3 AM.\" },\r\n        { type: \"fill\", pillar: \"Boundaries\", text: \"The moment our FWB boundary was crossed was when they started leaving __________________ at my place.\" },\r\n        { type: \"fill\", pillar: \"Communication\", text: \"Our FWB 'talks' often involved more __________________ than actual words.\" },\r\n        { type: \"fill\", pillar: \"Compromise\", text: \"We finally had to compromise on whether our FWB status included __________________.\" },\r\n        { type: \"thisSoundsLike\", pillar: \"Communication\", text: \"This sounds like... an FWB who communicates exclusively through cryptic TikTok dances.\" },\r\n        {\r\n            type: \"image_judgment\",\r\n            pillar: \"Boundaries\",\r\n            text: \"What boundary is being tested here?\",\r\n            ai_prompt_description: \"A photo of one person awkwardly trying to enter another person's apartment using a key they clearly shouldn't have, while the resident looks surprised and uncomfortable.\"\r\n        },\r\n    ],\r\n    \"Long-Term Relationships & Marriage\": [\r\n        { type: \"fill\", pillar: \"Communication\", text: \"After 10 years of marriage, we've mastered the art of communicating solely through __________________.\" },\r\n        { type: \"fill\", pillar: \"Respect\", text: \"Our secret to a happy marriage is respecting each other's need for __________________.\" },\r\n        { type: \"fill\", pillar: \"Compromise\", text: \"We knew our compromise skills were peak when we finally agreed on __________________ for dinner.\" },\r\n        { type: \"thisSoundsLike\", pillar: \"Boundaries\", text: \"This sounds like... a couple whose idea of healthy boundaries involves separate houses in different states.\" },\r\n        { type: \"fill\", pillar: \"Communication\", text: \"The key to our long-term happiness is never discussing __________________.\" },\r\n        { type: \"fill\", pillar: \"Respect\", text: \"My partner truly respects my need for solitude by always __________________.\" },\r\n        { type: \"fill\", pillar: \"Compromise\", text: \"Our biggest compromise yet involved deciding on __________________ for our anniversary.\" },\r\n        { type: \"thisSoundsLike\", pillar: \"Compromise\", text: \"This sounds like... a couple who compromises on vacation destinations by alternating between a swamp tour and a taxidermy convention.\" },\r\n        {\r\n            type: \"image_judgment\",\r\n            pillar: \"Respect\",\r\n            text: \"Does this image show respect or disrespect?\",\r\n            ai_prompt_description: \"A photo of two people sitting on a couch, one engrossed in their phone, the other trying to talk to them but being completely ignored, looking sad.\"\r\n        },\r\n    ],\r\n    \"Breakups & Moving On\": [\r\n        { type: \"fill\", pillar: \"Boundaries\", text: \"After the breakup, I learned to respect my own boundaries by refusing to __________________.\" },\r\n        { type: \"fill\", pillar: \"Compromise\", text: \"My ex tried to compromise on splitting our possessions by offering me __________________.\" },\r\n        { type: \"fill\", pillar: \"Communication\", text: \"The most effective post-breakup communication we had involved __________________.\" },\r\n        { type: \"thisSoundsLike\", pillar: \"Respect\", text: \"This sounds like... someone who, to show respect for their ex's new relationship, sends them a framed photo of their ex's ex every holiday.\" },\r\n        { type: \"fill\", pillar: \"Boundaries\", text: \"Setting a boundary about __________________ was crucial for my healing after the breakup.\" },\r\n        { type: \"fill\", pillar: \"Compromise\", text: \"There was no compromise possible when it came to who kept __________________.\" },\r\n        { type: \"fill\", pillar: \"Communication\", text: \"Our post-breakup communication strategy was strictly limited to __________________.\" },\r\n        { type: \"thisSoundsLike\", pillar: \"Boundaries\", text: \"This sounds like... someone who 'moves on' by getting a tattoo of their ex's face, but with devil horns.\" },\r\n        {\r\n            type: \"image_judgment\",\r\n            pillar: \"Moving On\",\r\n            text: \"What does this image tell you about moving on?\",\r\n            ai_prompt_description: \"A photo of a person confidently walking towards a bright, new path, with a blurry, faded image of a broken heart behind them, symbolizing leaving the past behind.\"\r\n        },\r\n    ],\r\n    \"Looks Like\": [\r\n        { type: \"image_judgment\", pillar: \"Communication\", text: \"What are these two *really* thinking?\", ai_prompt_description: \"Realistic photograph of a long-term romantic couple showing emotional distance. They are sitting on a couch in a dimly lit living room, both illuminated only by the glow of their smartphones, ignoring each other completely. The image should have a cinematic mood, with a soft focus on the space between them, highlighting their isolation from each other. The composition should feel intimate yet cold.\" },\r\n        { type: \"image_judgment\", pillar: \"Compromise\", text: \"Caption this scene of domestic bliss.\", ai_prompt_description: \"A photorealistic image capturing a failure of compromise in a shared living space. The scene is a kitchen perfectly divided in half with a sharp, jarring line. One side is sparkling clean, organized, and minimalist. The other side is a chaotic explosion of dirty dishes, spilled food, and clutter. Use vibrant colors to emphasize the stark contrast. Wide shot composition to capture the entire surreal scene of domestic conflict.\" },\r\n        { type: \"image_judgment\", pillar: \"Respect\", text: \"What's the story here?\", ai_prompt_description: \"Cinematic, realistic photograph showing a moment of disrespect between two friends in a coffee shop. One person is in the foreground, slightly out of focus, excitedly showing something on their smartphone. The focus is on the other friend's face, who is pointedly looking away with a clear expression of boredom and disinterest. Use a shallow depth of field and natural lighting to highlight the uncomfortable social dynamic.\" },\r\n        { type: \"image_judgment\", pillar: \"Boundaries\", text: \"Describe this situation in one word.\", ai_prompt_description: \"A realistic photograph capturing the violation of personal boundaries. A person is sitting at a home office desk, their face showing stress and discomfort. Their partner is looming directly over their shoulder, peering intensely at the computer screen. Use a slightly wide-angle 'over the shoulder' composition to create a crowded, claustrophobic feeling. The lighting should be harsh, casting a shadow from the standing partner over the person working, emphasizing the invasion of their space.\" }\r\n    ],\r\n    \"Red Flag or Relationship Goal\": [\r\n        {\r\n            type: \"scenario_vote\",\r\n            text: \"You've just introduced your partner to your closest friends, and the conversation flows, everyone seems to be getting along. Later, your friends text you saying they had a great time, but your partner immediately starts grilling you about what your friends really think, nitpicking every comment. What's going on here?\",\r\n            choices: {\r\n                a: \"Oh, they're just, you know, collecting data. Like a relationship spy trying to figure out if your squad is worthy of their presence. It's not insecurity, it's... strategic vetting. Yeah, that's it.\",\r\n                b: \"Nah, that's just the prelude to the 'Great Friend Purge.' Soon, it'll be just you and them. Alone. In a quiet room. With their thoughts. Good luck with that.\",\r\n                c: \"See, this is that real growth right here! They're invested, man. They wanna know if the vibes were authentic, if there's any room for improvement, because they're trying to build a strong, integrated social unit. That's a team player!\",\r\n                d: \"They're trying to figure out which of your friends they can hang with when you're busy. You know, diversifying their social portfolio. Smart move. They ain't trying to just sit around waiting on you. That's freedom right there!\"\r\n            }\r\n        }\r\n    ]\r\n};\r\n\r\nconst ANSWER_CARDS = [\r\n    \"a pet rock named 'Gary'\", \"my extensive collection of toenail clippings\", \"the concept of personal hygiene\",\r\n    \"a five-hour interpretive dance\", \"my imaginary friend, Bartholomew\", \"the meaning of life, according to a squirrel\",\r\n    \"their ex's entire family tree\", \"a spontaneous trip to the moon\", \"a heated debate about flat earth theories\",\r\n    \"my obsession with competitive eating\", \"the ghost of my past relationship\", \"a really bad karaoke performance\",\r\n    \"a detailed PowerPoint presentation on my insecurities\", \"my unique collection of lint\", \"a crying baby simulator\",\r\n    \"the sound of a kazoo orchestra\", \"their unedited diary entries from middle school\", \"a sock puppet show\",\r\n    \"the recipe for my grandma's infamous fruitcake\", \"a detailed analysis of my dream journal\", \"their pet goldfish\",\r\n    \"a surprise visit from a mariachi band\", \"a 30-page manifesto on why cats are superior to dogs\", \"my crippling fear of ducks\",\r\n    \"a life-sized cardboard cutout of myself\", \"the exact moment I realized I was allergic to gluten\", \"my collection of antique staplers\",\r\n    \"a detailed explanation of quantum physics\", \"their personal alien abduction story\", \"a single, lonely potato\",\r\n    \"the dark secrets of my childhood treehouse\", \"my profound love for glitter\", \"a dramatic re-enactment of my last dentist visit\",\r\n    \"a squirrel dressed as a tiny chef\", \"my secret talent for burping the alphabet backwards\", \"a miniature alpaca farm\",\r\n    \"the lingering smell of old gym socks\", \"my deep philosophical thoughts on cheese\", \"a very aggressive snail\",\r\n    \"a conspiracy theory involving garden gnomes\", \"my questionable fashion choices from the 90s\", \"the universal language of farts\",\r\n    \"a spontaneous opera performance\", \"my collection of rare, vintage sporks\", \"the exact number of hairs on my head\",\r\n    \"a detailed map of my internal organs\", \"my uncanny ability to predict the weather with my knee\", \"a flock of angry pigeons\",\r\n    \"my personal brand of awkward silence\", \"a very confused mime\", \"the entire script of a terrible B-movie\",\r\n    \"a deep dive into celebrity gossip from 2003\", \"my most embarrassing childhood story, told in interpretive dance\", \"a rogue tumbleweed\",\r\n    \"my collection of forgotten dreams\", \"a perpetually confused stare\", \"the subtle art of passive aggression\",\r\n    \"a commitment to never folding laundry again\", \"the true identity of Santa Claus\", \"a never-ending loop of elevator music\",\r\n    \"my inability to tell left from right\", \"a lifetime supply of questionable advice\", \"the secret to perfect toast\",\r\n    \"a spontaneous act of kindness towards a pigeon\", \"my irrational fear of balloons\", \"a detailed budget of my impulse purchases\",\r\n    \"the surprising history of garden hoses\", \"my unwavering dedication to napping\", \"a profound appreciation for mundane objects\",\r\n    \"my personal record for most consecutive sneezes\", \"a hidden talent for imitating barnyard animals\", \"the shocking truth about socks\",\r\n    \"my unwavering belief in unicorns\", \"a detailed analysis of my coffee preferences\", \"the silent language of eyebrow raises\",\r\n    \"a deep philosophical debate about condiments\", \"my surprising expertise in competitive napping\", \"the existential dread of a Monday morning\",\r\n    \"a profound understanding of cat psychology\", \"my secret stash of emergency chocolate\", \"the art of graceful awkwardness\",\r\n    \"a detailed plan for world domination (starting with my pantry)\", \"my most cherished collection of bottle caps\", \"the subtle nuances of air guitar\",\r\n    \"a profound appreciation for bad puns\", \"my impressive ability to procrastinate creatively\", \"the surprising comfort of mismatched socks\",\r\n    \"a detailed study of dust bunnies\", \"my personal philosophy on the optimal way to butter toast\", \"the quiet rebellion of untamed hair\",\r\n    \"a deep contemplation of the universe while staring at a ceiling fan\", \"my unwavering commitment to collecting novelty erasers\", \"the dramatic flair of a well-timed eye-roll\"\r\n];\r\n\r\n// Component for displaying temporary messages/modals instead of alerts\r\nconst MessageModal = ({ message, onClose }) => {\r\n    if (!message) return null;\r\n    return (\r\n        <div className=\"fixed inset-0 bg-gray-900 bg-opacity-75 flex items-center justify-center z-50 p-4\">\r\n            <div className=\"bg-white rounded-lg p-6 shadow-xl max-w-sm w-full text-center\">\r\n                <p className=\"text-xl font-semibold mb-4 text-gray-800\">{message}</p>\r\n                <button\r\n                    onClick={onClose}\r\n                    className=\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-6 rounded-full transition duration-300 transform hover:scale-105\"\r\n                >\r\n                    OK\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// Main App Component\r\nfunction App() {\r\n    const [userId, setUserId] = useState(null);\r\n    const [currentPage, setCurrentPage] = useState('home'); // home, lobby, game, leaderboard, winner\r\n    const [gameId, setGameId] = useState(null);\r\n    const [gameData, setGameData] = useState(null);\r\n    const [message, setMessage] = useState(null);\r\n    const [isAuthReady, setIsAuthReady] = useState(false);\r\n    const [isLoadingImage, setIsLoadingImage] = useState(false); // For host loading state\r\n    const [playerName, setPlayerName] = useState(''); // New state for player nickname\r\n\r\n    // Auth state listener and initial sign-in logic\r\n    useEffect(() => {\r\n        const SESSION_USER_ID_KEY = 'redFlagsGameTempUserId';\r\n\r\n        const unsubscribe = onAuthStateChanged(auth, async (currentUser) => {\r\n            const initialAuthToken = process.env.REACT_APP_INITIAL_AUTH_TOKEN;\r\n            if (initialAuthToken) {\r\n                // If an initial auth token is provided (e.g., from the Canvas environment)\r\n                // Use Firebase authentication with the provided token.\r\n                if (!currentUser) {\r\n                    try {\r\n                        await signInWithCustomToken(auth, initialAuthToken);\r\n                    } catch (error) {\r\n                        console.error(\"Firebase Auth Error with custom token:\", error);\r\n                        setMessage(`Authentication failed: ${error.message}. Please refresh.`);\r\n                    }\r\n                }\r\n                // Once authenticated, set the user and their UID from Firebase.\r\n                if (auth.currentUser) {\r\n                    setUserId(auth.currentUser.uid);\r\n                    // Set default player name if not already set, or load from storage\r\n                    if (!playerName) {\r\n                        setPlayerName(`Player ${auth.currentUser.uid.substring(0, 4)}`);\r\n                    }\r\n                }\r\n            } else {\r\n                // If no initial auth token (e.g., in a standalone browser tab for testing)\r\n                // Generate and use a temporary, session-based user ID.\r\n                let tempUserId = sessionStorage.getItem(SESSION_USER_ID_KEY);\r\n                if (!tempUserId) {\r\n                    tempUserId = `guest_${crypto.randomUUID()}`; // Generate a unique ID\r\n                    sessionStorage.setItem(SESSION_USER_ID_KEY, tempUserId);\r\n                    console.log(\"Generated new session userId:\", tempUserId);\r\n                } else {\r\n                    console.log(\"Reusing session userId:\", tempUserId);\r\n                }\r\n\r\n                setUserId(tempUserId); // Use the session ID as the userId\r\n                // Set default player name for guest\r\n                if (!playerName) {\r\n                    setPlayerName(`Player ${tempUserId.substring(0, 5)}`);\r\n                }\r\n            }\r\n            setIsAuthReady(true); // Auth listener has completed its initial check or temp ID is set\r\n        });\r\n        return () => unsubscribe();\r\n    }, [playerName]); // Added playerName to dependencies to prevent re-rendering issues\r\n\r\n\r\n    // Firebase game data listener\r\n    useEffect(() => {\r\n        if (!gameId || !isAuthReady || !userId) return; // Ensure auth and user are ready\r\n\r\n        const gameDocRef = doc(db, `artifacts/${appId}/public/data/games`, gameId);\r\n        const unsubscribeGame = onSnapshot(gameDocRef, async (docSnap) => {\r\n            if (docSnap.exists()) {\r\n                const data = docSnap.data();\r\n                const oldGameData = gameData; // Capture old gameData for comparison\r\n                setGameData(data);\r\n\r\n                // If a new image judgment prompt was just set by the host, generate the image\r\n                // This logic ensures image generation happens only once by the host for a new image prompt\r\n                if (\r\n                    userId === data.hostId && // Only host generates image\r\n                    data.status === 'submission' && // Must be in submission phase\r\n                    data.prompts && data.prompts[data.currentRound - 1]?.type === 'image_judgment' && // Current prompt is image type\r\n                    !data.prompts[data.currentRound - 1]?.imageUrl && // Image not yet generated\r\n                    (!oldGameData || oldGameData.currentRound !== data.currentRound || oldGameData.status !== 'submission') // Trigger on new round or status change to submission\r\n                ) {\r\n                    setIsLoadingImage(true); // Set local loading state for host\r\n                    const currentPromptToGenerate = data.prompts[data.currentRound - 1];\r\n                    try {\r\n                        const imageUrl = await generateImageForPrompt(currentPromptToGenerate.ai_prompt_description);\r\n                        // Update the Firestore document with the generated image URL for the current prompt\r\n                        await updateDoc(gameDocRef, {\r\n                            [`prompts.${data.currentRound - 1}.imageUrl`]: imageUrl,\r\n                            isLoadingImage: false // Clear loading flag in Firestore\r\n                        });\r\n                    } catch (error) {\r\n                        console.error(\"Error generating image and updating Firestore:\", error);\r\n                        await updateDoc(gameDocRef, {\r\n                            [`prompts.${data.currentRound - 1}.imageUrl`]: \"https://placehold.co/400x300/CCCCCC/000000?text=Error+Loading+Image\",\r\n                            isLoadingImage: false\r\n                        });\r\n                        showMessage(\"Failed to generate image. Please try starting the round again.\");\r\n                    } finally {\r\n                        setIsLoadingImage(false); // Clear local loading state\r\n                    }\r\n                }\r\n\r\n                // Navigate based on game status\r\n                if (data.status === 'playing' || data.status === 'submission' || data.status === 'voting') {\r\n                    setCurrentPage('game');\r\n                } else if (data.status === 'round_end') {\r\n                    setCurrentPage('leaderboard');\r\n                } else if (data.status === 'game_over') {\r\n                    setCurrentPage('winner');\r\n                } else if (data.status === 'lobby') {\r\n                    setCurrentPage('lobby');\r\n                }\r\n            } else {\r\n                console.log(\"Game does not exist or has been deleted.\");\r\n                setGameId(null);\r\n                setGameData(null);\r\n                setCurrentPage('home');\r\n                showMessage(\"Game not found or ended.\");\r\n            }\r\n        }, (error) => {\r\n            console.error(\"Error listening to game data:\", error);\r\n            showMessage(\"Failed to load game data. Please try again.\");\r\n        });\r\n\r\n        return () => unsubscribeGame();\r\n    }, [gameId, isAuthReady, userId]); // Correct dependency array, removed gameData\r\n\r\n    // Utility to generate image (placeholder)\r\n    const generateImageForPrompt = async (promptDescription) => {\r\n        console.log(\"Starting image generation for:\", promptDescription);\r\n        // This is a placeholder. In a real app, you would call your AI image model here.\r\n        // For now, we return a static placeholder image URL after a short delay.\r\n        await new Promise(resolve => setTimeout(resolve, 1500)); // Simulate network delay\r\n        const placeholderUrl = `https://via.placeholder.com/400x300.png?text=${encodeURIComponent(promptDescription.substring(0, 30))}`;\r\n        console.log(\"Generated image URL:\", placeholderUrl);\r\n        return placeholderUrl;\r\n    };\r\n\r\n    const showMessage = (msg) => {\r\n        setMessage(msg);\r\n    };\r\n\r\n    const handleNextRound = async () => {\r\n        if (!gameData || !gameData.hostId === userId) return;\r\n\r\n        try {\r\n            const gameRef = doc(db, `artifacts/${appId}/public/data/games`, gameId);\r\n            const { currentRound, maxRounds, category, promptHistory } = gameData;\r\n            const nextRound = currentRound + 1;\r\n\r\n            if (nextRound > maxRounds) {\r\n                await updateDoc(gameRef, { status: 'game_over' });\r\n            } else {\r\n                const promptCardsForCategory = PROMPT_CARDS[category];\r\n                const newPrompt = getRandomPrompt(promptCardsForCategory, promptHistory || []);\r\n                const updatedPromptHistory = arrayUnion(newPrompt.text);\r\n                \r\n                const updatedPlayers = {};\r\n                for (const pId in gameData.players) {\r\n                    updatedPlayers[pId] = {\r\n                        ...gameData.players[pId],\r\n                        hasSubmitted: false,\r\n                        hasVoted: false\r\n                    };\r\n                }\r\n\r\n                await updateDoc(gameRef, {\r\n                    status: 'submission',\r\n                    currentRound: nextRound,\r\n                    prompts: arrayUnion(newPrompt),\r\n                    promptHistory: updatedPromptHistory,\r\n                    players: updatedPlayers,\r\n                    submittedAnswers: {},\r\n                    playerChoices: {},\r\n                    votes: {},\r\n                    currentWinningSubmission: null,\r\n                    isLoadingImage: newPrompt.type === 'image_judgment'\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error advancing to next round:\", error);\r\n            showMessage(\"Failed to start the next round.\");\r\n        }\r\n    };\r\n    \r\n    // Helper function to shuffle an array\r\n    const shuffleArray = (array) => {\r\n        let currentIndex = array.length, randomIndex;\r\n        while (currentIndex !== 0) {\r\n            randomIndex = Math.floor(Math.random() * currentIndex);\r\n            currentIndex--;\r\n            [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\r\n        }\r\n        return array;\r\n    };\r\n\r\n    // Helper function to get a random prompt\r\n    const getRandomPrompt = (promptList, history) => {\r\n        const availablePrompts = promptList.filter(p => !history.includes(p.text));\r\n        if (availablePrompts.length === 0) {\r\n            showMessage(\"All prompts for this category have been used! Picking from all prompts.\");\r\n            return promptList[Math.floor(Math.random() * promptList.length)];\r\n        }\r\n        const randomIndex = Math.floor(Math.random() * availablePrompts.length);\r\n        return availablePrompts[randomIndex];\r\n    };\r\n\r\n    // Render logic based on currentPage\r\n    const renderPage = () => {\r\n        switch (currentPage) {\r\n            case 'home':\r\n                return <HomePage setCurrentPage={setCurrentPage} setGameId={setGameId} userId={userId} showMessage={showMessage} playerName={playerName} setPlayerName={setPlayerName} />;\r\n            case 'lobby':\r\n                return <LobbyPage gameData={gameData} gameId={gameId} userId={userId} showMessage={showMessage} />;\r\n            case 'game':\r\n                return <GamePage gameData={gameData} gameId={gameId} userId={userId} showMessage={showMessage} isLoadingImage={isLoadingImage} />; // Pass isLoadingImage\r\n            case 'leaderboard':\r\n                return <LeaderboardPage gameData={gameData} userId={userId} gameId={gameId} showMessage={showMessage} />; // Adjusted to use updated handleNextRound via prop\r\n            case 'winner':\r\n                return <WinnerPage gameData={gameData} userId={userId} onPlayAgain={() => {\r\n                    setGameId(null);\r\n                    setGameData(null);\r\n                    setCurrentPage('home');\r\n                }} showMessage={showMessage} />; // Pass showMessage for modal\r\n            default:\r\n                return <HomePage setCurrentPage={setCurrentPage} setGameId={setGameId} userId={userId} showMessage={showMessage} playerName={playerName} setPlayerName={setPlayerName} />;\r\n        }\r\n    };\r\n\r\n    if (!isAuthReady) {\r\n        return (\r\n            <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-purple-800 via-pink-600 to-red-500 text-white font-inter\">\r\n                <p className=\"text-3xl animate-pulse\">Loading game...</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"min-h-screen bg-gradient-to-br from-purple-800 via-pink-600 to-red-500 text-white font-inter flex flex-col items-center justify-center p-4\">\r\n            {message && <MessageModal message={message.text} onClose={message.callback ? () => { message.callback(); setMessage(null); } : () => setMessage(null)} />}\r\n            <h1 className=\"text-5xl md:text-6xl font-extrabold text-center mb-8 drop-shadow-lg leading-tight\">\r\n                Red Flags & Relationship Goals\r\n            </h1>\r\n            <p className=\"text-lg md:text-xl text-center mb-6 text-white text-opacity-90\">\r\n                Your Player ID: <span className=\"font-mono bg-white bg-opacity-20 rounded-md px-3 py-1 break-all\">{userId}</span>\r\n            </p>\r\n            <div className=\"w-full max-w-4xl bg-white bg-opacity-10 backdrop-filter backdrop-blur-sm rounded-3xl shadow-2xl p-6 md:p-10 border border-white border-opacity-30\">\r\n                {renderPage()}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n// HomePage Component\r\nconst HomePage = ({ setCurrentPage, setGameId, userId, showMessage, playerName, setPlayerName }) => {\r\n    const [joinCode, setJoinCode] = useState('');\r\n\r\n    const handleCreateGame = async () => {\r\n        if (!playerName.trim()) {\r\n            showMessage(\"Please enter your nickname.\");\r\n            return;\r\n        }\r\n        try {\r\n            const categories = Object.keys(PROMPT_CARDS);\r\n            const randomCategory = categories[Math.floor(Math.random() * categories.length)]; // Select a random category\r\n            const gameCode = Math.random().toString(36).substring(2, 8).toUpperCase(); // 6-char code\r\n            console.log(\"Generated Game Code:\", gameCode); // Debugging log\r\n\r\n            const initialPlayers = {};\r\n            // Use the userId passed from App component (which is now guaranteed unique per tab)\r\n            initialPlayers[userId] = {\r\n                id: userId, // Added unique ID for the player object\r\n                name: playerName.trim(), // Use custom player name\r\n                score: 0,\r\n                isHost: true,\r\n                hand: shuffleArray([...ANSWER_CARDS]).slice(0, 10), // Give 10 unique cards\r\n                hasSubmitted: false,\r\n                hasVoted: false,\r\n                totalRedFlags: 0,\r\n                totalHearts: 0\r\n            };\r\n\r\n            const newGameRef = await addDoc(collection(db, `artifacts/${appId}/public/data/games`), {\r\n                hostId: userId,\r\n                category: randomCategory,\r\n                currentRound: 1,\r\n                maxRounds: 10,\r\n                prompts: [], // Initialize prompts as an empty array\r\n                status: 'lobby', // lobby, submission, voting, round_end, game_over\r\n                players: initialPlayers,\r\n                submittedAnswers: {},\r\n                playerChoices: {}, // For the new game mode\r\n                votes: {},\r\n                gameCode: gameCode, // Ensure gameCode is always a string\r\n                createdAt: serverTimestamp(),\r\n                promptHistory: [], // To store played prompts text for getRandomPrompt\r\n                answerCardPool: shuffleArray([...ANSWER_CARDS]), // All available answer cards\r\n                isLoadingImage: false // Default to false\r\n            });\r\n            console.log(`Game created with Firestore path: artifacts/${appId}/public/data/games/${newGameRef.id}`); // New debugging log with full path\r\n            setGameId(newGameRef.id);\r\n            setCurrentPage('lobby');\r\n            showMessage(`Game created! Share code: ${gameCode}`);\r\n        } catch (error) {\r\n            console.error(\"Error creating game:\", error);\r\n            showMessage(\"Failed to create game. Please try again.\");\r\n        }\r\n    };\r\n\r\n    const handleJoinGame = async () => {\r\n        if (!playerName.trim()) {\r\n            showMessage(\"Please enter your nickname.\");\r\n            return;\r\n        }\r\n        if (!joinCode) {\r\n            showMessage(\"Please enter a game code.\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            console.log(`Attempting to query Firestore for collection: artifacts/${appId}/public/data/games with gameCode: ${joinCode.toUpperCase()}`); // More detailed debugging log\r\n            const q = query(collection(db, `artifacts/${appId}/public/data/games`), where(\"gameCode\", \"==\", joinCode.toUpperCase()));\r\n            const querySnapshot = await getDocs(q);\r\n            console.log(\"Query Snapshot empty:\", querySnapshot.empty); // Debugging log\r\n\r\n            if (!querySnapshot.empty) {\r\n                const gameDoc = querySnapshot.docs[0];\r\n                const gameData = gameDoc.data();\r\n                const gameRef = doc(db, `artifacts/${appId}/public/data/games`, gameDoc.id);\r\n\r\n                if (gameData.players[userId]) {\r\n                    showMessage(\"You are already in this game.\");\r\n                    setGameId(gameDoc.id);\r\n                    setCurrentPage('lobby'); // Go to lobby if already in\r\n                    return;\r\n                }\r\n\r\n                // If joining after game started, give initial cards\r\n                const playerHand = shuffleArray([...ANSWER_CARDS]).slice(0, 10);\r\n\r\n                await updateDoc(gameRef, {\r\n                    [`players.${userId}`]: {\r\n                        id: userId, // Added unique ID for the player object\r\n                        name: playerName.trim(), // Use custom player name\r\n                        score: 0,\r\n                        isHost: false,\r\n                        hand: playerHand,\r\n                        hasSubmitted: false,\r\n                        hasVoted: false,\r\n                        totalRedFlags: 0,\r\n                        totalHearts: 0\r\n                    }\r\n                });\r\n                setGameId(gameDoc.id);\r\n                setCurrentPage('lobby'); // Will change based on game status from listener\r\n                showMessage(`Joined game ${joinCode}!`);\r\n            } else {\r\n                showMessage(\"Invalid game code.\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error joining game:\", error);\r\n            showMessage(\"Failed to join game. Please try again.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"text-center\">\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Enter your nickname\"\r\n                value={playerName}\r\n                onChange={(e) => setPlayerName(e.target.value)}\r\n                className=\"w-full p-3 rounded-xl bg-white bg-opacity-20 text-white placeholder-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-400 mb-4 text-center\"\r\n                maxLength=\"20\" // Limit nickname length\r\n            />\r\n            <button\r\n                onClick={handleCreateGame}\r\n                className=\"w-full mb-4 bg-gradient-to-r from-blue-500 to-teal-400 hover:from-blue-600 hover:to-teal-500 text-white font-bold py-4 px-8 rounded-full shadow-lg transition duration-300 transform hover:scale-105\"\r\n            >\r\n                Create New Game\r\n            </button>\r\n            <div className=\"mb-6\">\r\n                <p className=\"text-gray-200 mb-2\">OR</p>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter Game Code\"\r\n                    value={joinCode}\r\n                    onChange={(e) => setJoinCode(e.target.value)}\r\n                    className=\"w-full p-3 rounded-xl bg-white bg-opacity-20 text-white placeholder-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-400 mb-3 text-center uppercase\"\r\n                    maxLength=\"6\"\r\n                />\r\n                <button\r\n                    onClick={handleJoinGame}\r\n                    className=\"w-full bg-gradient-to-r from-green-500 to-lime-400 hover:from-green-600 hover:to-lime-500 text-white font-bold py-4 px-8 rounded-full shadow-lg transition duration-300 transform hover:scale-105\"\r\n                >\r\n                    Join Game\r\n                </button>\r\n            </div>\r\n            <p className=\"text-sm text-gray-300 mt-4\">\r\n                Minimum 2 players needed to start a game.\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\n// LobbyPage Component\r\nconst LobbyPage = ({ gameData, gameId, userId, showMessage }) => {\r\n    if (!gameData) return <p className=\"text-center text-xl text-gray-200\">Loading lobby...</p>;\r\n\r\n    const players = Object.values(gameData.players || {}).sort((a, b) => a.name.localeCompare(b.name));\r\n    const isHost = gameData.hostId === userId;\r\n    const canStartGame = players.length >= 2;\r\n    const gameCode = gameData.gameCode;\r\n\r\n    const handleCategoryChange = async (e) => {\r\n        if (!isHost) return;\r\n        const newCategory = e.target.value;\r\n        try {\r\n            const gameRef = doc(db, `artifacts/${appId}/public/data/games`, gameId);\r\n            await updateDoc(gameRef, { category: newCategory });\r\n        } catch (error) {\r\n            console.error(\"Error updating category:\", error);\r\n            showMessage(\"Failed to update category.\");\r\n        }\r\n    };\r\n\r\n    const handleStartGame = async () => {\r\n        if (!isHost) return;\r\n        try {\r\n            const gameRef = doc(db, `artifacts/${appId}/public/data/games`, gameId);\r\n            const playersInGame = Object.values(gameData.players);\r\n            if (playersInGame.length < 1) { // Changed from 2 to 1 to allow solo testing\r\n                showMessage(\"You need at least 1 player to start the game.\");\r\n                return;\r\n            }\r\n\r\n            // Distribute unique hands to all players\r\n            const promptCardsForCategory = PROMPT_CARDS[gameData.category];\r\n            let availableCards = [...ANSWER_CARDS];\r\n            const updatedPlayers = { ...gameData.players }; // Create a mutable copy\r\n\r\n            for (const pId in updatedPlayers) {\r\n                const hand = [];\r\n                // Ensure players always have 10 cards at the start of the game\r\n                for (let i = 0; i < 10; i++) {\r\n                    if (availableCards.length === 0) {\r\n                        // If pool runs low, replenish it with all ANSWER_CARDS shuffled\r\n                        availableCards = shuffleArray([...ANSWER_CARDS]);\r\n                        console.warn(\"Answer card pool replenished by reshuffling all cards during initial deal.\");\r\n                    }\r\n                    const cardIndex = Math.floor(Math.random() * availableCards.length);\r\n                    hand.push(availableCards.splice(cardIndex, 1)[0]);\r\n                }\r\n                updatedPlayers[pId].hand = hand;\r\n                updatedPlayers[pId].hasSubmitted = false;\r\n                updatedPlayers[pId].hasVoted = false;\r\n            }\r\n\r\n            const initialPrompt = getRandomPrompt(promptCardsForCategory, []); // No history yet for first prompt\r\n            \r\n            // Image generation now happens in the onSnapshot listener triggered by the update below\r\n            // No direct image generation call here.\r\n\r\n            await updateDoc(gameRef, {\r\n                status: 'submission',\r\n                currentRound: 1,\r\n                maxRounds: Math.min(10, promptCardsForCategory.length), // Set max rounds\r\n                prompts: [initialPrompt], // Store the full prompt object\r\n                promptHistory: [initialPrompt.text], // Keep text history for getRandomPrompt filter\r\n                players: updatedPlayers, // CRITICAL FIX: Pass updatedPlayers to Firestore\r\n                submittedAnswers: {},\r\n                playerChoices: {},\r\n                votes: {},\r\n                isLoadingImage: initialPrompt.type === 'image_judgment' // Set initial loading flag for image prompt\r\n            });\r\n\r\n        } catch (error) {\r\n            console.error(\"Error starting game:\", error);\r\n            showMessage(\"An error occurred while starting the game.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"text-center p-4\">\r\n            <h2 className=\"text-4xl font-bold mb-4 text-white\">Game Lobby</h2>\r\n            <p className=\"text-xl text-gray-200 mb-6\">\r\n                Game Code: <span className=\"font-bold text-yellow-300\">{gameCode}</span>\r\n            </p>\r\n            <div className=\"text-lg text-gray-200 mb-2 flex items-center justify-center\">\r\n                <span className=\"mr-2\">Category:</span>\r\n                {isHost ? (\r\n                    <select\r\n                        value={gameData.category}\r\n                        onChange={handleCategoryChange}\r\n                        className=\"p-2 rounded-lg bg-white bg-opacity-20 text-white font-semibold focus:outline-none focus:ring-2 focus:ring-blue-400\"\r\n                    >\r\n                        {Object.keys(PROMPT_CARDS).map(cat => (\r\n                            <option key={cat} value={cat} className=\"text-black\">{cat}</option>\r\n                        ))}\r\n                    </select>\r\n                ) : (\r\n                    <span className=\"font-semibold text-pink-200\">{gameData.category}</span>\r\n                )}\r\n            </div>\r\n            <p className=\"text-lg text-gray-200 mb-4\">Players Connected:</p>\r\n            <ul className=\"list-disc list-inside text-left mx-auto max-w-xs mb-8 text-gray-100\">\r\n                {players.map(player => (\r\n                    <li key={player.id} className=\"py-1\">\r\n                        {player.name} {player.isHost && \"(Host)\"}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            {isHost && (\r\n                <button\r\n                    onClick={handleStartGame}\r\n                    disabled={!canStartGame}\r\n                    className={`w-full py-4 px-8 rounded-full shadow-lg transition duration-300 transform ${\r\n                        canStartGame\r\n                            ? 'bg-gradient-to-r from-purple-500 to-indigo-600 hover:from-purple-600 hover:to-indigo-700 text-white font-bold hover:scale-105'\r\n                            : 'bg-gray-600 text-gray-300 cursor-not-allowed'\r\n                    }`}\r\n                >\r\n                    {canStartGame ? 'Start Game' : `Need ${2 - players.length} more player(s) to start`}\r\n                </button>\r\n            )}\r\n            {!isHost && (\r\n                <p className=\"text-xl text-gray-300 italic\">Waiting for host to start the game!</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\n// GamePage Component\r\nconst GamePage = ({ gameData, gameId, userId, showMessage, isLoadingImage }) => { // Pass isLoadingImage\r\n    if (!gameData || !gameData.prompts || gameData.prompts.length === 0) {\r\n        return <p className=\"text-center text-xl text-gray-200\">Waiting for game to start...</p>;\r\n    }\r\n    const currentPrompt = gameData.prompts[gameData.currentRound - 1];\r\n\r\n    if (!currentPrompt) {\r\n        return <p className=\"text-center text-xl text-gray-200\">Loading prompt data...</p>;\r\n    }\r\n\r\n    return <GameRound gameData={gameData} gameId={gameId} userId={userId} showMessage={showMessage} isLoadingImage={isLoadingImage} />; // Pass isLoadingImage\r\n};\r\n\r\nconst GamePrompt = ({ prompt, gameData, isLoadingImage }) => { // Receive isLoadingImage\r\n    if (!prompt) return null;\r\n\r\n    // Show loading message if it's an image prompt AND host is currently generating it\r\n    if (prompt.type === 'image_judgment' && isLoadingImage) { // Check local loading state\r\n        return (\r\n            <div className=\"text-center p-4\">\r\n                <h2 className=\"text-3xl font-bold mb-4 text-white animate-pulse\">Generating AI Image...</h2>\r\n                <p className=\"text-xl text-gray-200\">The host is creating a new visual prompt. Please wait.</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"text-center bg-white bg-opacity-20 rounded-xl p-4 md:p-6 shadow-xl w-full max-w-2xl border border-white border-opacity-30 mb-6\">\r\n            <p className=\"text-xl font-bold text-yellow-200 mb-2\">{prompt.pillar}</p>\r\n            <p className=\"text-3xl md:text-4xl font-extrabold text-white leading-tight\"\r\n                dangerouslySetInnerHTML={{ __html: prompt.text.replace(/__________________/g, '<span class=\"text-pink-300 underline\">BLANK</span>') }}\r\n            >\r\n            </p>\r\n            {prompt.type === 'image_judgment' && prompt.imageUrl && (\r\n                <img src={prompt.imageUrl} alt={prompt.ai_prompt_description} className=\"mt-4 rounded-lg shadow-lg mx-auto w-full max-w-md h-auto object-contain\" />\r\n            )}\r\n            <p className=\"mt-4 text-lg text-gray-200\">\r\n                Round {gameData.currentRound} of {gameData.maxRounds}\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst GameRound = ({ gameData, gameId, userId, showMessage, isLoadingImage }) => { // Receive isLoadingImage\r\n    // State for player's current action\r\n    const [selectedCard, setSelectedCard] = useState(null);\r\n    const [customAnswer, setCustomAnswer] = useState('');\r\n    const [nominationData, setNominationData] = useState({ nominatedPlayerId: '', justification: '' });\r\n    const [selectedVote, setSelectedVote] = useState(null);\r\n    const [selectedChoice, setSelectedChoice] = useState(null); // For scenario_vote\r\n\r\n    const gameRef = doc(db, `artifacts/${appId}/public/data/games`, gameId);\r\n    const currentPlayer = gameData.players[userId];\r\n    const { players: allPlayers, currentRound, status, prompts, submittedAnswers: submittedAnswersObj } = gameData;\r\n    const currentPrompt = prompts[currentRound - 1]; // Access the correct prompt based on round\r\n    const isHost = gameData.hostId === userId;\r\n\r\n    const submittedAnswers = Object.values(submittedAnswersObj || {}).sort((a, b) => (a.submittedAt?.seconds || 0) - (b.submittedAt?.seconds || 0));\r\n    const playersInGame = Object.values(allPlayers || {}).sort((a, b) => a.name.localeCompare(b.name));\r\n\r\n    // Reset local state when game phase changes\r\n    useEffect(() => {\r\n        setSelectedCard(null);\r\n        setCustomAnswer('');\r\n        setNominationData({ nominatedPlayerId: '', justification: '' });\r\n        setSelectedVote(null);\r\n        setSelectedChoice(null);\r\n    }, [gameData.status, gameData.currentRound]);\r\n\r\n    const handleSelectCard = (card) => {\r\n        setSelectedCard(card);\r\n    };\r\n\r\n    const handleCustomAnswerChange = (e) => {\r\n        setCustomAnswer(e.target.value);\r\n    };\r\n\r\n    const handleNominationChange = (field, value) => {\r\n        setNominationData(prev => ({ ...prev, [field]: value }));\r\n    };\r\n\r\n    const handleSubmitAnswer = async () => {\r\n        if (currentPlayer.hasSubmitted) {\r\n            showMessage(\"You have already submitted an answer for this round.\");\r\n            return;\r\n        }\r\n\r\n        // If it's an image judgment prompt and the image hasn't loaded yet, prevent submission\r\n        if (currentPrompt.type === 'image_judgment' && !currentPrompt.imageUrl && isLoadingImage) {\r\n            showMessage(\"Please wait for the image to finish generating before submitting.\");\r\n            return;\r\n        }\r\n\r\n        let answerContent = '';\r\n        // For fill and image_judgment, answer is a card or custom text\r\n        if (currentPrompt.type === 'fill' || currentPrompt.type === 'image_judgment') {\r\n            if (selectedCard === null) {\r\n                showMessage(\"Please select a card or type a custom answer.\");\r\n                return;\r\n            }\r\n            if (selectedCard === \"BLANK_CARD_SELECTED\") {\r\n                if (!customAnswer.trim()) {\r\n                    showMessage(\"Please type your custom answer.\");\r\n                    return;\r\n                }\r\n                answerContent = customAnswer.trim();\r\n            } else {\r\n                answerContent = selectedCard;\r\n            }\r\n        } else if (currentPrompt.type === 'thisSoundsLike') {\r\n            if (!nominationData.nominatedPlayerId || !nominationData.justification.trim()) {\r\n                showMessage(\"Please select a player and provide a justification.\");\r\n                return;\r\n            }\r\n            answerContent = {\r\n                nominatedPlayerId: nominationData.nominatedPlayerId,\r\n                justification: nominationData.justification.trim()\r\n            };\r\n        } else {\r\n            showMessage(\"Invalid prompt type.\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const submissionId = generateId();\r\n            const updates = {\r\n                [`players.${userId}.hasSubmitted`]: true,\r\n                // Only remove the card if it was selected from the hand and not a custom answer\r\n                [`players.${userId}.hand`]: (currentPrompt.type === 'fill' || currentPrompt.type === 'image_judgment') && selectedCard !== \"BLANK_CARD_SELECTED\"\r\n                    ? currentPlayer.hand.filter(card => card !== selectedCard)\r\n                    : currentPlayer.hand,\r\n                [`submittedAnswers.${submissionId}`]: {\r\n                    id: submissionId,\r\n                    playerId: userId,\r\n                    answer: answerContent,\r\n                    votes: 0,\r\n                    voters: [],\r\n                    submittedAt: serverTimestamp() // Add timestamp for stable sorting\r\n                }\r\n            };\r\n\r\n            await updateDoc(gameRef, updates);\r\n            showMessage(\"Answer submitted!\");\r\n        } catch (error) {\r\n            console.error(\"Error submitting answer:\", error);\r\n            showMessage(\"Failed to submit answer. Please try again.\");\r\n        }\r\n    };\r\n\r\n    const handleSubmitChoice = async () => {\r\n        if (!selectedChoice) {\r\n            showMessage(\"Please select a choice.\");\r\n            return;\r\n        }\r\n        try {\r\n            const updates = {\r\n                [`players.${userId}.hasSubmitted`]: true,\r\n                [`playerChoices.${userId}`]: selectedChoice\r\n            };\r\n            await updateDoc(gameRef, updates);\r\n            showMessage(\"Your choice has been submitted!\");\r\n        } catch (error) {\r\n            console.error(\"Error submitting choice:\", error);\r\n            showMessage(\"Failed to submit choice. Please try again.\");\r\n        }\r\n    };\r\n\r\n    // Check if all active players have submitted their answers\r\n    const submittedCount = currentPrompt.type === 'scenario_vote'\r\n        ? Object.keys(gameData.playerChoices || {}).length\r\n        : submittedAnswers.length;\r\n\r\n    const playersWhoShouldSubmit = playersInGame.filter(p => !p.isHost || currentPrompt.type !== 'fill' && currentPrompt.type !== 'image_judgment');\r\n    const allPlayersSubmitted = submittedCount === playersWhoShouldSubmit.length;\r\n\r\n    // Host manages phase transitions\r\n    useEffect(() => {\r\n        // Only trigger if current phase is 'submission' and all relevant players have submitted\r\n        if (isHost && gameData.status === 'submission' && allPlayersSubmitted && playersWhoShouldSubmit.length > 0) {\r\n            updateDoc(gameRef, { status: 'voting' }).catch(e => console.error(\"Error setting status to voting:\", e));\r\n        }\r\n    }, [allPlayersSubmitted, playersWhoShouldSubmit.length, isHost, gameData.status, gameRef]);\r\n\r\n\r\n    const handleScenarioVote = async (targetPlayerId, voteType) => {\r\n        if (currentPlayer.hasVoted) {\r\n            showMessage(\"You have already submitted your votes for this round.\");\r\n            return;\r\n        }\r\n\r\n        // Prevent voting for self for scenario_vote as well\r\n        if (targetPlayerId === userId) {\r\n            showMessage(\"You cannot vote for your own take.\");\r\n            return;\r\n        }\r\n\r\n        const votePath = `votes.${targetPlayerId}.${voteType}`;\r\n        try {\r\n            await updateDoc(gameRef, {\r\n                [votePath]: arrayUnion(userId)\r\n            });\r\n            showMessage(`${voteType === 'hearts' ? 'Heart' : 'Red Flag'} given!`);\r\n        } catch (error) {\r\n            console.error(\"Error casting scenario vote:\", error);\r\n            showMessage(\"Failed to cast vote.\");\r\n        }\r\n    };\r\n\r\n    const handleLockInVotes = async () => {\r\n        if (currentPlayer.hasVoted) return;\r\n        try {\r\n            await updateDoc(gameRef, { [`players.${userId}.hasVoted`]: true });\r\n            showMessage(\"Votes locked in!\");\r\n        } catch (error) {\r\n            console.error(\"Error locking in votes:\", error);\r\n            showMessage(\"Failed to lock in votes.\");\r\n        }\r\n    };\r\n\r\n    const handleVote = async (submissionId) => {\r\n        if (currentPlayer.hasVoted) {\r\n            showMessage(\"You've already voted this round.\");\r\n            return;\r\n        }\r\n        if (selectedVote) {\r\n            showMessage(\"You can only vote for one answer.\");\r\n            return;\r\n        }\r\n\r\n        const submission = submittedAnswersObj[submissionId]; // Use submittedAnswersObj directly\r\n        if (!submission) return;\r\n\r\n        // Prevent voting for oneself in applicable modes\r\n        if (submission.playerId === userId) {\r\n            showMessage(\"You cannot vote for your own answer.\");\r\n            return;\r\n        }\r\n\r\n        setSelectedVote(submissionId); // Optimistically update UI\r\n\r\n        try {\r\n            await updateDoc(gameRef, {\r\n                [`submittedAnswers.${submissionId}.votes`]: increment(1),\r\n                [`submittedAnswers.${submissionId}.voters`]: arrayUnion(userId),\r\n                [`players.${userId}.hasVoted`]: true,\r\n                [`votes.${submissionId}`]: arrayUnion(userId) // General vote tracking\r\n            });\r\n            showMessage(\"Vote submitted!\");\r\n        } catch (error) {\r\n            console.error(\"Error submitting vote:\", error);\r\n            setSelectedVote(null); // Revert on error\r\n            showMessage(\"Failed to submit vote. Please try again.\");\r\n        }\r\n    };\r\n\r\n    // Determine if all players have voted\r\n    const votersCount = playersInGame.filter(p => p.hasVoted).length;\r\n    const allPlayersVoted = votersCount === playersInGame.length;\r\n\r\n\r\n    useEffect(() => {\r\n        // Only trigger if we are in the voting phase and all active players have voted\r\n        if (isHost && gameData.status === 'voting' && allPlayersVoted && playersInGame.length > 0) {\r\n            \r\n            const updates = {};\r\n            let roundResults = {}; // For scenario_vote display\r\n\r\n            if (currentPrompt.type === 'scenario_vote') {\r\n                playersInGame.forEach(player => {\r\n                    const votesOnPlayer = gameData.votes[player.id] || {};\r\n                    const hearts = (votesOnPlayer.hearts || []).length;\r\n                    const redFlags = (votesOnPlayer.redFlags || []).length;\r\n                    const roundScore = hearts - redFlags;\r\n                    \r\n                    updates[`players.${player.id}.score`] = increment(roundScore);\r\n                    updates[`players.${player.id}.totalHearts`] = increment(hearts);\r\n                    updates[`players.${player.id}.totalRedFlags`] = increment(redFlags);\r\n\r\n                    roundResults[player.id] = {\r\n                        choiceKey: gameData.playerChoices[player.id],\r\n                        hearts,\r\n                        redFlags\r\n                    };\r\n                });\r\n            } else {\r\n                // Existing scoring logic for other modes\r\n                let maxVotes = 0;\r\n                let winningSubmissions = [];\r\n\r\n                submittedAnswers.forEach(sub => {\r\n                    if (sub.votes > maxVotes) {\r\n                        maxVotes = sub.votes;\r\n                        winningSubmissions = [sub];\r\n                    } else if (sub.votes === maxVotes) {\r\n                        winningSubmissions.push(sub);\r\n                    }\r\n                });\r\n\r\n                if (maxVotes > 0) {\r\n                    winningSubmissions.forEach(sub => {\r\n                        updates[`players.${sub.playerId}.score`] = increment(1);\r\n                    });\r\n                }\r\n                // Store winning submission IDs for retrieval in LeaderboardPage\r\n                updates.currentWinningSubmission = maxVotes > 0 ? winningSubmissions.map(s => s.id) : null;\r\n            }\r\n\r\n            updates.status = 'round_end';\r\n            if (currentPrompt.type === 'scenario_vote') {\r\n                updates.roundResults = roundResults;\r\n            }\r\n\r\n            updateDoc(gameRef, updates).catch(e => console.error(\"Error ending round:\", e));\r\n        }\r\n    }, [allPlayersVoted, playersInGame.length, isHost, gameData.status, gameRef, submittedAnswers, currentPrompt]);\r\n\r\n    const playerHand = currentPlayer?.hand || [];\r\n\r\n    return (\r\n        <div className=\"w-full max-w-4xl mx-auto p-4 flex flex-col items-center justify-center\">\r\n            <GamePrompt prompt={currentPrompt} gameData={gameData} isLoadingImage={isLoadingImage} /> {/* Pass isLoadingImage */}\r\n\r\n            {gameData.status === 'submission' && (\r\n                currentPrompt.type === 'scenario_vote' ? (\r\n                    <div className=\"w-full text-center\">\r\n                        {!currentPlayer.hasSubmitted ? (\r\n                            <>\r\n                                <h3 className=\"text-2xl font-bold text-white mb-4\">What's your take?</h3>\r\n                                <div className=\"space-y-3 mb-6\">\r\n                                    {Object.entries(currentPrompt.choices).sort((a, b) => a[0].localeCompare(b[0])).map(([key, value]) => (\r\n                                        <button\r\n                                            key={key}\r\n                                            onClick={() => setSelectedChoice(key)}\r\n                                            className={`w-full text-left p-4 rounded-xl shadow-md transition transform ${\r\n                                                selectedChoice === key ? 'bg-blue-400 scale-105 ring-4 ring-blue-500 text-white' : 'bg-white hover:bg-gray-100 text-gray-900'\r\n                                            }`}\r\n                                        >\r\n                                            <span className=\"font-bold uppercase mr-3\">{key})</span>{value}\r\n                                        </button>\r\n                                    ))}\r\n                                </div>\r\n                                <button\r\n                                    onClick={handleSubmitChoice}\r\n                                    disabled={!selectedChoice}\r\n                                    className=\"w-full bg-gradient-to-r from-purple-500 to-indigo-600 hover:from-purple-600 hover:to-indigo-700 text-white font-bold py-4 px-8 rounded-full shadow-lg transition duration-300 transform hover:scale-105 disabled:opacity-50\"\r\n                                >\r\n                                    Submit Choice\r\n                                </button>\r\n                            </>\r\n                        ) : (\r\n                            <p className=\"text-2xl text-gray-200 animate-pulse\">Waiting for other players to submit their take...</p>\r\n                        )}\r\n                        <p className=\"text-gray-300 mt-4 text-lg\">\r\n                            Submitted: {submittedCount} / {playersWhoShouldSubmit.length}\r\n                        </p>\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"w-full max-w-lg mx-auto\">\r\n                        {!currentPlayer.hasSubmitted ? (\r\n                            <>\r\n                                <h3 className=\"text-xl font-bold text-white mb-4\">Your Hand:</h3>\r\n                                <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-2 mb-6\">\r\n                                    {playerHand.map((card, index) => (\r\n                                        <button\r\n                                            key={card + index} // Use card content + index as key for uniqueness\r\n                                            onClick={() => handleSelectCard(card)}\r\n                                            className={`p-3 rounded-lg shadow-md h-32 text-sm text-gray-900 transition-transform transform hover:scale-105 ${selectedCard === card ? 'bg-cyan-300 ring-4 ring-cyan-500' : 'bg-white hover:bg-gray-100'}`}\r\n                                        >\r\n                                            {card}\r\n                                        </button>\r\n                                    ))}\r\n                                    {(currentPrompt.type === 'fill' || currentPrompt.type === 'image_judgment') && (\r\n                                        <button\r\n                                            onClick={() => handleSelectCard(\"BLANK_CARD_SELECTED\")}\r\n                                            className={`p-3 rounded-lg shadow-md h-32 text-sm transition-transform transform hover:scale-105 ${selectedCard === \"BLANK_CARD_SELECTED\" ? 'bg-yellow-300 ring-4 ring-yellow-500 text-gray-900' : 'bg-gray-200 hover:bg-gray-300 text-gray-900'}`}\r\n                                        >\r\n                                            Write your own...\r\n                                        </button>\r\n                                    )}\r\n                                </div>\r\n\r\n                                {currentPrompt.type === 'thisSoundsLike' && (\r\n                                    <div className=\"mb-4\">\r\n                                        <h3 className=\"text-xl font-bold text-white mb-2\">1. Nominate a Player</h3>\r\n                                        <select\r\n                                            value={nominationData.nominatedPlayerId}\r\n                                            onChange={(e) => setNominationData(prev => ({ ...prev, nominatedPlayerId: e.target.value }))}\r\n                                            className=\"w-full p-3 rounded-lg bg-white text-gray-900\"\r\n                                        >\r\n                                            <option value=\"\">Select a player...</option>\r\n                                            {playersInGame.filter(p => p.id !== userId).map(p => (\r\n                                                <option key={p.id} value={p.id}>{p.name}</option>\r\n                                            ))}\r\n                                        </select>\r\n                                        <h3 className=\"text-xl font-bold text-white mb-2 mt-4\">2. Justify your nomination</h3>\r\n                                        <textarea\r\n                                            value={nominationData.justification}\r\n                                            onChange={(e) => setNominationData(prev => ({ ...prev, justification: e.target.value }))}\r\n                                            placeholder=\"Why does this sound like them?\"\r\n                                            className=\"w-full p-3 rounded-lg bg-white text-gray-900 h-24\"\r\n                                        ></textarea>\r\n                                    </div>\r\n                                )}\r\n\r\n                                {selectedCard === \"BLANK_CARD_SELECTED\" && (\r\n                                    <div className=\"mb-4\">\r\n                                        <h3 className=\"text-xl font-bold text-white mb-2\">Write Your Custom Answer</h3>\r\n                                        <textarea\r\n                                            value={customAnswer}\r\n                                            onChange={(e) => setCustomAnswer(e.target.value)}\r\n                                            className=\"w-full p-3 rounded-lg bg-white text-gray-900 h-24\"\r\n                                            placeholder=\"Make it good!\"\r\n                                        ></textarea>\r\n                                    </div>\r\n                                )}\r\n                                <button\r\n                                    onClick={handleSubmitAnswer}\r\n                                    className=\"w-full bg-gradient-to-r from-teal-500 to-cyan-600 hover:from-teal-600 hover:to-cyan-700 text-white font-bold py-4 px-8 rounded-full shadow-lg transition duration-300 transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                                    disabled={((currentPrompt.type === 'fill' || currentPrompt.type === 'image_judgment') && (!selectedCard || (selectedCard === \"BLANK_CARD_SELECTED\" && !customAnswer.trim()))) || (currentPrompt.type === 'thisSoundsLike' && (!nominationData.nominatedPlayerId || !nominationData.justification.trim()))}\r\n                                >\r\n                                    Submit Answer\r\n                                </button>\r\n                            </>\r\n                        ) : (\r\n                            <p className=\"text-2xl text-gray-200 animate-pulse\">Waiting for other players to submit...</p>\r\n                        )}\r\n                        <p className=\"text-gray-300 mt-4 text-lg\">\r\n                            Submitted: {submittedCount} / {playersWhoShouldSubmit.length}\r\n                        </p>\r\n                    </div>\r\n                )\r\n            )}\r\n\r\n            {gameData.status === 'voting' && (\r\n                currentPrompt.type === 'scenario_vote' ? (\r\n                    <div className=\"w-full text-center\">\r\n                        <h3 className=\"text-2xl font-bold text-white mb-4\">Judge Their Takes!</h3>\r\n                        <p className=\"text-gray-300 mb-6\">Give a ❤️ for a relationship goal or a 🚩 for a red flag.</p>\r\n                        <div className=\"space-y-4 mb-6\">\r\n                            {playersInGame.filter(p => p.id !== userId).map(player => { // Filter self from voting\r\n                                const choiceKey = gameData.playerChoices[player.id];\r\n                                const choiceText = choiceKey ? currentPrompt.choices[choiceKey] : \"No choice submitted.\";\r\n                                const hearts = gameData.votes?.[player.id]?.hearts || [];\r\n                                const redFlags = gameData.votes?.[player.id]?.redFlags || [];\r\n                                const hasVotedHeart = hearts.includes(userId);\r\n                                const hasVotedFlag = redFlags.includes(userId);\r\n\r\n                                return (\r\n                                    <div key={player.id} className=\"bg-white bg-opacity-20 rounded-xl p-4 text-left\">\r\n                                        <p className=\"font-bold text-white text-lg\">{player.name}'s take:</p>\r\n                                        <p className=\"text-gray-200 mb-3\">\"{choiceText}\"</p>\r\n                                        <div className=\"flex justify-end items-center space-x-3\">\r\n                                            <button\r\n                                                onClick={() => handleScenarioVote(player.id, 'hearts')}\r\n                                                disabled={hasVotedHeart || hasVotedFlag || currentPlayer.hasVoted}\r\n                                                className={`px-4 py-2 rounded-full font-bold text-2xl transition transform hover:scale-110 disabled:opacity-50 ${hasVotedHeart ? 'bg-pink-400' : 'bg-gray-300 hover:bg-pink-300'}`}\r\n                                            >\r\n                                                ❤️\r\n                                            </button>\r\n                                            <button\r\n                                                onClick={() => handleScenarioVote(player.id, 'redFlags')}\r\n                                                disabled={hasVotedHeart || hasVotedFlag || currentPlayer.hasVoted}\r\n                                                className={`px-4 py-2 rounded-full font-bold text-2xl transition transform hover:scale-110 disabled:opacity-50 ${hasVotedFlag ? 'bg-red-500' : 'bg-gray-300 hover:bg-red-400'}`}\r\n                                            >\r\n                                                🚩\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                        {!currentPlayer.hasVoted && (\r\n                            <button onClick={handleLockInVotes} className=\"w-full bg-gradient-to-r from-green-500 to-lime-400 text-white font-bold py-4 px-8 rounded-full shadow-lg\">\r\n                                Lock In Your Votes\r\n                            </button>\r\n                        )}\r\n                        <p className=\"text-gray-300 mt-4 text-lg\">\r\n                            Voted: {votersCount} / {playersInGame.length}\r\n                        </p>\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"w-full text-center\">\r\n                        <h3 className=\"text-2xl font-bold text-white mb-4\">Vote for your favorite!</h3>\r\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\r\n                            {submittedAnswers.map(sub => (\r\n                                <div key={sub.id} className=\"relative bg-white bg-opacity-20 rounded-xl p-4 flex flex-col justify-between\">\r\n                                    <p className=\"text-white text-lg font-semibold mb-4\">\"{sub.answer}\"</p>\r\n                                    <div className=\"text-right\">\r\n                                        <button\r\n                                            onClick={() => handleVote(sub.id)}\r\n                                            disabled={currentPlayer.hasVoted || sub.playerId === userId}\r\n                                            className=\"bg-gradient-to-r from-pink-500 to-orange-500 hover:from-pink-600 hover:to-orange-600 text-white font-bold py-2 px-4 rounded-full shadow-lg transition duration-300 disabled:opacity-50\"\r\n                                        >\r\n                                            Vote\r\n                                        </button>\r\n                                        {gameData.votes[sub.id] && <span className=\"ml-4 text-lg font-bold text-white\">{(gameData.votes[sub.id] || []).length}</span>} {/* Corrected vote count display */}\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        {!currentPlayer.hasVoted && (\r\n                            <p className=\"text-lg text-gray-300\">Choose the funniest or most fitting answer!</p>\r\n                        )}\r\n                        <p className=\"text-gray-300 mt-4 text-lg\">\r\n                            Voted: {votersCount} / {playersInGame.length}\r\n                        </p>\r\n                    </div>\r\n                )\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\n// LeaderboardPage Component\r\nconst LeaderboardPage = ({ gameData, userId, gameId, showMessage }) => {\r\n    const isHost = gameData.hostId === userId;\r\n    const players = Object.values(gameData.players).sort((a, b) => b.score - a.score);\r\n    const currentPrompt = gameData.prompts[gameData.currentRound - 1]; // Access the correct prompt\r\n\r\n    const winningSubmissions = (gameData.currentWinningSubmission || []).map(id => gameData.submittedAnswers[id]).filter(Boolean);\r\n    const winnerNames = winningSubmissions.map(sub => gameData.players[sub.playerId]?.name).join(', ');\r\n\r\n    const handleNextRound = async () => {\r\n        if (!isHost) return;\r\n\r\n        try {\r\n            const gameRef = doc(db, `artifacts/${appId}/public/data/games`, gameId);\r\n            const nextRound = gameData.currentRound + 1;\r\n\r\n            if (nextRound > gameData.maxRounds) {\r\n                await updateDoc(gameRef, { status: 'game_over' });\r\n            } else {\r\n                const promptCardsForCategory = PROMPT_CARDS[gameData.category];\r\n                const newPrompt = getRandomPrompt(promptCardsForCategory, gameData.promptHistory || []);\r\n                \r\n                // Reset player states for the new round and replenish hands\r\n                const updatedPlayers = {};\r\n                let currentAnswerCardPool = [...gameData.answerCardPool]; // Make a mutable copy\r\n\r\n                for (const pId in gameData.players) {\r\n                    const player = gameData.players[pId];\r\n                    let currentHand = player.hand || [];\r\n                    const cardsNeeded = 10 - currentHand.length; // Ensure hand size is 10\r\n\r\n                    let newCards = [];\r\n                    if (cardsNeeded > 0) {\r\n                        if (currentAnswerCardPool.length < cardsNeeded) {\r\n                            // If pool runs low, replenish it with all ANSWER_CARDS shuffled\r\n                            currentAnswerCardPool = shuffleArray([...ANSWER_CARDS]);\r\n                            console.warn(\"Answer card pool replenished by reshuffling all cards.\");\r\n                        }\r\n                        newCards = currentAnswerCardPool.slice(0, cardsNeeded);\r\n                        currentAnswerCardPool = currentAnswerCardPool.slice(cardsNeeded);\r\n                    }\r\n\r\n                    updatedPlayers[pId] = {\r\n                        ...player,\r\n                        hand: [...currentHand, ...newCards], // Replenish hand\r\n                        hasSubmitted: false,\r\n                        hasVoted: false\r\n                    };\r\n                }\r\n\r\n                await updateDoc(gameRef, {\r\n                    status: 'submission',\r\n                    currentRound: nextRound,\r\n                    prompts: arrayUnion(newPrompt), // Store the full new prompt object\r\n                    promptHistory: arrayUnion(newPrompt.text), // Only store text for history check\r\n                    players: updatedPlayers,\r\n                    submittedAnswers: {}, // Clear submissions for new round\r\n                    playerChoices: {}, // Clear player choices for new round\r\n                    votes: {}, // Clear votes for new round\r\n                    roundResults: deleteField(), // Clean up old round results\r\n                    currentWinningSubmission: null, // Clear winning submission from previous round\r\n                    answerCardPool: currentAnswerCardPool, // Save the updated pool state\r\n                    isLoadingImage: newPrompt.type === 'image_judgment' // Set loading flag for host to generate image\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error advancing round:\", error);\r\n            showMessage(\"Failed to advance round. Please try again.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"text-center p-4\">\r\n            <h2 className=\"text-4xl font-bold text-white mb-6 animate-fade-in-down\">Round {gameData.currentRound} Results</h2>\r\n\r\n            {currentPrompt.type === 'scenario_vote' && gameData.roundResults ? (\r\n                 <div className=\"bg-white bg-opacity-20 backdrop-blur-md rounded-xl shadow-lg p-6 mb-8 w-full max-w-2xl mx-auto\">\r\n                    <h3 className=\"text-2xl font-bold text-cyan-300 mb-4\">How did everyone do?</h3>\r\n                    <div className=\"space-y-4\">\r\n                        {players.map(player => {\r\n                            const result = gameData.roundResults[player.id];\r\n                            if (!result) return null;\r\n                            const choiceText = currentPrompt.choices[result.choiceKey];\r\n                            return (\r\n                                <div key={player.id} className=\"text-left p-4 bg-gray-900 bg-opacity-50 rounded-lg\">\r\n                                    <p className=\"font-bold text-white text-xl\">{player.name}'s take:</p>\r\n                                    <p className=\"text-gray-300 italic my-2\">\"{choiceText}\"</p>\r\n                                    <div className=\"flex justify-end items-center space-x-4 text-xl\">\r\n                                        <span className=\"text-pink-400 font-bold\">❤️ {result.hearts}</span>\r\n                                        <span className=\"text-red-500 font-bold\">🚩 {result.redFlags}</span>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div className=\"bg-white bg-opacity-20 backdrop-blur-md rounded-xl shadow-lg p-6 mb-8 w-full max-w-2xl mx-auto\">\r\n                    <h3 className=\"text-2xl font-bold text-cyan-300 mb-2\">Winning Answer{winningSubmissions.length > 1 ? 's' : ''}</h3>\r\n                    {winningSubmissions.length > 0 ? (\r\n                        <>\r\n                            {winningSubmissions.map(sub => (\r\n                                <p key={sub.id} className=\"text-white text-xl font-semibold bg-gray-900 bg-opacity-50 rounded-md p-4 my-2\">\"{sub.answer}\"</p>\r\n                            ))}\r\n                            <p className=\"text-gray-300 mt-2 text-lg\">Submitted by: <span className=\"font-bold text-white\">{winnerNames}</span> (+1 point)</p>\r\n                        </>\r\n                    ) : (\r\n                        <p className=\"text-white text-xl font-semibold\">No winning answer this round. Everyone gets to keep their dignity.</p>\r\n                    )}\r\n                </div>\r\n            )}\r\n\r\n\r\n            <div className=\"bg-white bg-opacity-20 backdrop-blur-md rounded-xl shadow-lg p-6 w-full max-w-md mx-auto\">\r\n                <h3 className=\"text-3xl font-bold text-white mb-4\">Leaderboard</h3>\r\n                {gameData.category === \"Red Flag or Relationship Goal\" ? (\r\n                    <ul className=\"space-y-3 mb-8\">\r\n                        {players.map((player, index) => (\r\n                            <li key={player.id} className={`flex items-center justify-between p-4 rounded-xl shadow-md text-white ${\r\n                                index === 0 ? 'bg-yellow-400 bg-opacity-50' : 'bg-white bg-opacity-30'\r\n                            }`}>\r\n                                <span className=\"text-lg font-semibold\">{player.name}</span>\r\n                                <div className=\"flex items-center space-x-4 text-lg\">\r\n                                    <span className=\"text-pink-400 font-bold\">❤️ {player.totalHearts || 0}</span>\r\n                                    <span className=\"text-red-500 font-bold\">🚩 {player.totalRedFlags || 0}</span>\r\n                                </div>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                ) : (\r\n                    <ul className=\"space-y-3 mb-8\">\r\n                        {players.map((player, index) => (\r\n                            <li key={player.id} className={`flex items-center justify-between p-4 rounded-xl shadow-md ${\r\n                                index === 0 ? 'bg-yellow-300 text-gray-900 font-bold text-xl' : 'bg-white bg-opacity-30 text-white'\r\n                            }`}>\r\n                                <div className=\"flex items-center space-x-4\">\r\n                                    <span className=\"text-lg font-bold\">{index + 1}.</span>\r\n                                    <span className=\"text-lg\">{player.name}</span>\r\n                                </div>\r\n                                <span className=\"text-lg font-bold\">{player.score} pts</span>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                )}\r\n                {isHost && (\r\n                    <button\r\n                        onClick={handleNextRound}\r\n                        className=\"w-full bg-gradient-to-r from-purple-500 to-indigo-600 hover:from-purple-600 hover:to-indigo-700 text-white font-bold py-4 px-8 rounded-full shadow-lg transition duration-300 transform hover:scale-105\"\r\n                    >\r\n                        {gameData.currentRound < gameData.maxRounds ? 'Next Round' : 'End Game'}\r\n                    </button>\r\n                )}\r\n                {!isHost && (\r\n                    <p className=\"text-xl text-gray-300 italic\">Waiting for host to continue...</p>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// WinnerPage Component\r\nconst WinnerPage = ({ gameData, userId, onPlayAgain, showMessage }) => {\r\n    const players = Object.values(gameData.players);\r\n    const winner = players.length > 0 ? players.sort((a, b) => b.score - a.score)[0] : null;\r\n\r\n    const lovers = players.filter(p => p.totalHearts > p.totalRedFlags).sort((a, b) => b.score - a.score);\r\n    const walkingRedFlags = players.filter(p => p.totalRedFlags > p.totalHearts).sort((a, b) => a.score - b.score);\r\n    const neutral = players.filter(p => p.totalHearts === p.totalRedFlags);\r\n\r\n    const isHost = gameData.hostId === userId;\r\n\r\n    const getPlayerTitle = (player) => {\r\n        if ((player.totalHearts + player.totalRedFlags) > 0) {\r\n            return player.totalHearts >= player.totalRedFlags ? \"Lover\" : \"Walking Red Flag\";\r\n        }\r\n        return \"Still Figuring it Out\";\r\n    };\r\n\r\n    const handleDeleteGame = async () => {\r\n        showMessage(\"Are you sure you want to delete this game? This action cannot be undone.\", async () => {\r\n            try {\r\n                // Ensure gameData.id is available. It should be, as this is WinnerPage.\r\n                // Firebase doc ID is automatically populated on gameData from onSnapshot\r\n                if (gameData.id) {\r\n                    await deleteDoc(doc(db, `artifacts/${appId}/public/data/games`, gameData.id));\r\n                    onPlayAgain(); // Go back to home page after deletion\r\n                } else {\r\n                    console.error(\"Game ID is undefined, cannot delete.\");\r\n                    showMessage(\"Failed to delete game: Game ID missing.\");\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error deleting game:\", error);\r\n                showMessage(\"Failed to delete game. Please try again.\");\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"text-center p-4\">\r\n            <h2 className=\"text-5xl font-bold text-yellow-300 mb-4 animate-bounce\">Game Over!</h2>\r\n            {winner && <h3 className=\"text-3xl text-white mb-8\">And the winner is... <span className=\"font-bold text-cyan-400\">{winner.name}!</span></h3>}\r\n\r\n            <div className=\"bg-white bg-opacity-20 backdrop-blur-md rounded-xl shadow-lg p-6 w-full max-w-2xl mx-auto\">\r\n                <h4 className=\"text-2xl font-bold text-white mb-4\">Final Standings</h4>\r\n                \r\n                {lovers.length > 0 && (\r\n                    <div className=\"mb-6\">\r\n                        <h5 className=\"text-2xl font-bold text-pink-400 mb-3\">Lovers ❤️</h5>\r\n                        <ul className=\"space-y-3\">\r\n                            {lovers.map((player) => (\r\n                                <li key={player.id} className=\"flex items-center justify-center p-3 bg-gray-900 bg-opacity-50 rounded-lg text-white\">\r\n                                    <span className=\"text-xl font-semibold\">{player.name}</span>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                )}\r\n\r\n                {walkingRedFlags.length > 0 && (\r\n                    <div className=\"mb-6\">\r\n                        <h5 className=\"text-2xl font-bold text-red-500 mb-3\">Walking Red Flags 🚩</h5>\r\n                         <ul className=\"space-y-3\">\r\n                            {walkingRedFlags.map((player) => (\r\n                                <li key={player.id} className=\"flex items-center justify-center p-3 bg-gray-900 bg-opacity-50 rounded-lg text-white\">\r\n                                    <span className=\"text-xl font-semibold\">{player.name}</span>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                )}\r\n\r\n                {neutral.length > 0 && (\r\n                     <div className=\"mb-6\">\r\n                        <h5 className=\"text-2xl font-bold text-gray-400 mb-3\">Still Figuring Things Out... 🤔</h5>\r\n                         <ul className=\"space-y-3\">\r\n                            {neutral.map((player) => (\r\n                                <li key={player.id} className=\"flex items-center justify-center p-3 bg-gray-900 bg-opacity-50 rounded-lg text-white\">\r\n                                    <span className=\"text-xl font-semibold\">{player.name}</span>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {isHost && (\r\n                <>\r\n                    <button\r\n                        onClick={onPlayAgain}\r\n                        className=\"w-full bg-gradient-to-r from-green-500 to-lime-400 hover:from-green-600 hover:to-lime-500 text-white font-bold py-4 px-8 rounded-full shadow-lg transition duration-300 transform hover:scale-105 mb-4\"\r\n                    >\r\n                        Play Again!\r\n                    </button>\r\n                    <button\r\n                        onClick={handleDeleteGame}\r\n                        className=\"w-full bg-red-600 hover:bg-red-700 text-white font-bold py-4 px-8 rounded-full shadow-lg transition duration-300 transform hover:scale-105\"\r\n                    >\r\n                        Delete This Game\r\n                    </button>\r\n                </>\r\n            )}\r\n            {!isHost && (\r\n                <p className=\"text-xl text-gray-300 italic\">Ask the host to start a new game!</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\n// Utility function to shuffle an array (Fisher-Yates)\r\nconst shuffleArray = (array) => {\r\n    let currentIndex = array.length, randomIndex;\r\n    while (currentIndex !== 0) {\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex--;\r\n        [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\r\n    }\r\n    return array;\r\n};\r\n\r\n// Utility function to get a random prompt that hasn't been played yet\r\nconst getRandomPrompt = (promptList, history) => {\r\n    // History should contain the 'text' of previously played prompts\r\n    const availablePrompts = promptList.filter(p => !history.includes(p.text));\r\n    if (availablePrompts.length === 0) {\r\n        console.warn(\"All prompts for this category have been used. Reshuffling prompts for this round.\");\r\n        return promptList[Math.floor(Math.random() * promptList.length)]; // If all used, pick randomly from full list\r\n    }\r\n    const randomIndex = Math.floor(Math.random() * availablePrompts.length);\r\n    return availablePrompts[randomIndex];\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,aAAa,QAAQ,cAAc;AAC5C,SAASC,OAAO,EAAEC,iBAAiB,EAAEC,qBAAqB,EAAEC,kBAAkB,QAAQ,eAAe;AACrG,SAASC,YAAY,EAAEC,GAAG,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,SAAS,EAAEC,SAAS,EAAEC,UAAU,EAAEC,UAAU,EAAEC,KAAK,EAAEC,KAAK,EAAEC,UAAU,EAAEC,WAAW,EAAEC,eAAe,EAAEC,OAAO,EAAEC,WAAW,EAAEC,SAAS,QAAQ,oBAAoB;;AAErN;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACC,OAAO,CAACC,GAAG,CAACC,yBAAyB,IAAI,IAAI,CAAC;AAChF,MAAMC,KAAK,GAAGH,OAAO,CAACC,GAAG,CAACG,YAAY,IAAI,gBAAgB;;AAE1D;AACA,MAAMC,GAAG,GAAGlC,aAAa,CAAC0B,cAAc,CAAC;AACzC,MAAMS,EAAE,GAAG9B,YAAY,CAAC6B,GAAG,CAAC;AAC5B,MAAME,IAAI,GAAGnC,OAAO,CAACiC,GAAG,CAAC;;AAEzB;AACA,MAAMG,UAAU,GAAGA,CAAA,KAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC;;AAEpE;AACA,MAAMC,YAAY,GAAG;EACjB,aAAa,EAAE,CACX;IAAEC,IAAI,EAAE,MAAM;IAAEC,MAAM,EAAE,YAAY;IAAEC,IAAI,EAAE;EAAoG,CAAC,EACjJ;IAAEF,IAAI,EAAE,MAAM;IAAEC,MAAM,EAAE,eAAe;IAAEC,IAAI,EAAE;EAA0H,CAAC,EAC1K;IAAEF,IAAI,EAAE,MAAM;IAAEC,MAAM,EAAE,SAAS;IAAEC,IAAI,EAAE;EAAmG,CAAC,EAC7I;IAAEF,IAAI,EAAE,gBAAgB;IAAEC,MAAM,EAAE,YAAY;IAAEC,IAAI,EAAE;EAA6H,CAAC,EACpL;IAAEF,IAAI,EAAE,MAAM;IAAEC,MAAM,EAAE,YAAY;IAAEC,IAAI,EAAE;EAA2G,CAAC,EACxJ;IAAEF,IAAI,EAAE,MAAM;IAAEC,MAAM,EAAE,eAAe;IAAEC,IAAI,EAAE;EAAmF,CAAC,EACnI;IAAEF,IAAI,EAAE,MAAM;IAAEC,MAAM,EAAE,SAAS;IAAEC,IAAI,EAAE;EAAsF,CAAC,EAChI;IAAEF,IAAI,EAAE,gBAAgB;IAAEC,MAAM,EAAE,YAAY;IAAEC,IAAI,EAAE;EAAkF,CAAC,EACzI;IACIF,IAAI,EAAE,gBAAgB;IACtBC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE,8CAA8C;IACpDC,qBAAqB,EAAE;EAC3B,CAAC,CACJ;EACD,yBAAyB,EAAE,CACvB;IAAEH,IAAI,EAAE,MAAM;IAAEC,MAAM,EAAE,YAAY;IAAEC,IAAI,EAAE;EAAoH,CAAC,EACjK;IAAEF,IAAI,EAAE,MAAM;IAAEC,MAAM,EAAE,eAAe;IAAEC,IAAI,EAAE;EAA0G,CAAC,EAC1J;IAAEF,IAAI,EAAE,MAAM;IAAEC,MAAM,EAAE,SAAS;IAAEC,IAAI,EAAE;EAAqH,CAAC,EAC/J;IAAEF,IAAI,EAAE,gBAAgB;IAAEC,MAAM,EAAE,YAAY;IAAEC,IAAI,EAAE;EAA8I,CAAC,EACrM;IAAEF,IAAI,EAAE,MAAM;IAAEC,MAAM,EAAE,YAAY;IAAEC,IAAI,EAAE;EAAiF,CAAC,EAC9H;IAAEF,IAAI,EAAE,MAAM;IAAEC,MAAM,EAAE,eAAe;IAAEC,IAAI,EAAE;EAAuG,CAAC,EACvJ;IAAEF,IAAI,EAAE,MAAM;IAAEC,MAAM,EAAE,SAAS;IAAEC,IAAI,EAAE;EAA+F,CAAC,EACzI;IAAEF,IAAI,EAAE,gBAAgB;IAAEC,MAAM,EAAE,eAAe;IAAEC,IAAI,EAAE;EAA+F,CAAC,EACzJ;IACIF,IAAI,EAAE,gBAAgB;IACtBC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE,4CAA4C;IAClDC,qBAAqB,EAAE;EAC3B,CAAC,CACJ;EACD,mBAAmB,EAAE,CACjB;IAAEH,IAAI,EAAE,MAAM;IAAEC,MAAM,EAAE,eAAe;IAAEC,IAAI,EAAE;EAAmG,CAAC,EACnJ;IAAEF,IAAI,EAAE,MAAM;IAAEC,MAAM,EAAE,YAAY;IAAEC,IAAI,EAAE;EAAoF,CAAC,EACjI;IAAEF,IAAI,EAAE,MAAM;IAAEC,MAAM,EAAE,SAAS;IAAEC,IAAI,EAAE;EAAkF,CAAC,EAC5H;IAAEF,IAAI,EAAE,gBAAgB;IAAEC,MAAM,EAAE,YAAY;IAAEC,IAAI,EAAE;EAAsK,CAAC,EAC7N;IAAEF,IAAI,EAAE,MAAM;IAAEC,MAAM,EAAE,eAAe;IAAEC,IAAI,EAAE;EAAoF,CAAC,EACpI;IAAEF,IAAI,EAAE,MAAM;IAAEC,MAAM,EAAE,YAAY;IAAEC,IAAI,EAAE;EAA4F,CAAC,EACzI;IAAEF,IAAI,EAAE,MAAM;IAAEC,MAAM,EAAE,SAAS;IAAEC,IAAI,EAAE;EAAyF,CAAC,EACnI;IAAEF,IAAI,EAAE,gBAAgB;IAAEC,MAAM,EAAE,YAAY;IAAEC,IAAI,EAAE;EAA4F,CAAC,EACnJ;IACIF,IAAI,EAAE,gBAAgB;IACtBC,MAAM,EAAE,eAAe;IACvBC,IAAI,EAAE,wEAAwE;IAC9EC,qBAAqB,EAAE;EAC3B,CAAC,CACJ;EACD,6BAA6B,EAAE,CAC3B;IAAEH,IAAI,EAAE,MAAM;IAAEC,MAAM,EAAE,YAAY;IAAEC,IAAI,EAAE;EAAyG,CAAC,EACtJ;IAAEF,IAAI,EAAE,MAAM;IAAEC,MAAM,EAAE,eAAe;IAAEC,IAAI,EAAE;EAAkG,CAAC,EAClJ;IAAEF,IAAI,EAAE,MAAM;IAAEC,MAAM,EAAE,YAAY;IAAEC,IAAI,EAAE;EAAkF,CAAC,EAC/H;IAAEF,IAAI,EAAE,gBAAgB;IAAEC,MAAM,EAAE,SAAS;IAAEC,IAAI,EAAE;EAAiH,CAAC,EACrK;IAAEF,IAAI,EAAE,MAAM;IAAEC,MAAM,EAAE,YAAY;IAAEC,IAAI,EAAE;EAAwG,CAAC,EACrJ;IAAEF,IAAI,EAAE,MAAM;IAAEC,MAAM,EAAE,eAAe;IAAEC,IAAI,EAAE;EAA4E,CAAC,EAC5H;IAAEF,IAAI,EAAE,MAAM;IAAEC,MAAM,EAAE,YAAY;IAAEC,IAAI,EAAE;EAAsF,CAAC,EACnI;IAAEF,IAAI,EAAE,gBAAgB;IAAEC,MAAM,EAAE,eAAe;IAAEC,IAAI,EAAE;EAAyF,CAAC,EACnJ;IACIF,IAAI,EAAE,gBAAgB;IACtBC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE,qCAAqC;IAC3CC,qBAAqB,EAAE;EAC3B,CAAC,CACJ;EACD,oCAAoC,EAAE,CAClC;IAAEH,IAAI,EAAE,MAAM;IAAEC,MAAM,EAAE,eAAe;IAAEC,IAAI,EAAE;EAAyG,CAAC,EACzJ;IAAEF,IAAI,EAAE,MAAM;IAAEC,MAAM,EAAE,SAAS;IAAEC,IAAI,EAAE;EAAyF,CAAC,EACnI;IAAEF,IAAI,EAAE,MAAM;IAAEC,MAAM,EAAE,YAAY;IAAEC,IAAI,EAAE;EAAmG,CAAC,EAChJ;IAAEF,IAAI,EAAE,gBAAgB;IAAEC,MAAM,EAAE,YAAY;IAAEC,IAAI,EAAE;EAA8G,CAAC,EACrK;IAAEF,IAAI,EAAE,MAAM;IAAEC,MAAM,EAAE,eAAe;IAAEC,IAAI,EAAE;EAA6E,CAAC,EAC7H;IAAEF,IAAI,EAAE,MAAM;IAAEC,MAAM,EAAE,SAAS;IAAEC,IAAI,EAAE;EAA+E,CAAC,EACzH;IAAEF,IAAI,EAAE,MAAM;IAAEC,MAAM,EAAE,YAAY;IAAEC,IAAI,EAAE;EAA0F,CAAC,EACvI;IAAEF,IAAI,EAAE,gBAAgB;IAAEC,MAAM,EAAE,YAAY;IAAEC,IAAI,EAAE;EAAwI,CAAC,EAC/L;IACIF,IAAI,EAAE,gBAAgB;IACtBC,MAAM,EAAE,SAAS;IACjBC,IAAI,EAAE,6CAA6C;IACnDC,qBAAqB,EAAE;EAC3B,CAAC,CACJ;EACD,sBAAsB,EAAE,CACpB;IAAEH,IAAI,EAAE,MAAM;IAAEC,MAAM,EAAE,YAAY;IAAEC,IAAI,EAAE;EAA+F,CAAC,EAC5I;IAAEF,IAAI,EAAE,MAAM;IAAEC,MAAM,EAAE,YAAY;IAAEC,IAAI,EAAE;EAA4F,CAAC,EACzI;IAAEF,IAAI,EAAE,MAAM;IAAEC,MAAM,EAAE,eAAe;IAAEC,IAAI,EAAE;EAAoF,CAAC,EACpI;IAAEF,IAAI,EAAE,gBAAgB;IAAEC,MAAM,EAAE,SAAS;IAAEC,IAAI,EAAE;EAA8I,CAAC,EAClM;IAAEF,IAAI,EAAE,MAAM;IAAEC,MAAM,EAAE,YAAY;IAAEC,IAAI,EAAE;EAA4F,CAAC,EACzI;IAAEF,IAAI,EAAE,MAAM;IAAEC,MAAM,EAAE,YAAY;IAAEC,IAAI,EAAE;EAAgF,CAAC,EAC7H;IAAEF,IAAI,EAAE,MAAM;IAAEC,MAAM,EAAE,eAAe;IAAEC,IAAI,EAAE;EAAsF,CAAC,EACtI;IAAEF,IAAI,EAAE,gBAAgB;IAAEC,MAAM,EAAE,YAAY;IAAEC,IAAI,EAAE;EAA2G,CAAC,EAClK;IACIF,IAAI,EAAE,gBAAgB;IACtBC,MAAM,EAAE,WAAW;IACnBC,IAAI,EAAE,gDAAgD;IACtDC,qBAAqB,EAAE;EAC3B,CAAC,CACJ;EACD,YAAY,EAAE,CACV;IAAEH,IAAI,EAAE,gBAAgB;IAAEC,MAAM,EAAE,eAAe;IAAEC,IAAI,EAAE,uCAAuC;IAAEC,qBAAqB,EAAE;EAAoZ,CAAC,EAC9gB;IAAEH,IAAI,EAAE,gBAAgB;IAAEC,MAAM,EAAE,YAAY;IAAEC,IAAI,EAAE,uCAAuC;IAAEC,qBAAqB,EAAE;EAAgb,CAAC,EACviB;IAAEH,IAAI,EAAE,gBAAgB;IAAEC,MAAM,EAAE,SAAS;IAAEC,IAAI,EAAE,wBAAwB;IAAEC,qBAAqB,EAAE;EAA4a,CAAC,EACjhB;IAAEH,IAAI,EAAE,gBAAgB;IAAEC,MAAM,EAAE,YAAY;IAAEC,IAAI,EAAE,sCAAsC;IAAEC,qBAAqB,EAAE;EAAif,CAAC,CAC1mB;EACD,+BAA+B,EAAE,CAC7B;IACIH,IAAI,EAAE,eAAe;IACrBE,IAAI,EAAE,gUAAgU;IACtUE,OAAO,EAAE;MACLC,CAAC,EAAE,uMAAuM;MAC1MC,CAAC,EAAE,+JAA+J;MAClKC,CAAC,EAAE,4OAA4O;MAC/OC,CAAC,EAAE;IACP;EACJ,CAAC;AAET,CAAC;AAED,MAAMC,YAAY,GAAG,CACjB,yBAAyB,EAAE,8CAA8C,EAAE,iCAAiC,EAC5G,gCAAgC,EAAE,kCAAkC,EAAE,8CAA8C,EACpH,+BAA+B,EAAE,gCAAgC,EAAE,2CAA2C,EAC9G,sCAAsC,EAAE,mCAAmC,EAAE,kCAAkC,EAC/G,uDAAuD,EAAE,8BAA8B,EAAE,yBAAyB,EAClH,gCAAgC,EAAE,iDAAiD,EAAE,oBAAoB,EACzG,gDAAgD,EAAE,yCAAyC,EAAE,oBAAoB,EACjH,uCAAuC,EAAE,sDAAsD,EAAE,4BAA4B,EAC7H,yCAAyC,EAAE,sDAAsD,EAAE,mCAAmC,EACtI,2CAA2C,EAAE,sCAAsC,EAAE,yBAAyB,EAC9G,4CAA4C,EAAE,8BAA8B,EAAE,kDAAkD,EAChI,mCAAmC,EAAE,qDAAqD,EAAE,yBAAyB,EACrH,sCAAsC,EAAE,0CAA0C,EAAE,yBAAyB,EAC7G,6CAA6C,EAAE,8CAA8C,EAAE,iCAAiC,EAChI,iCAAiC,EAAE,uCAAuC,EAAE,sCAAsC,EAClH,sCAAsC,EAAE,wDAAwD,EAAE,0BAA0B,EAC5H,sCAAsC,EAAE,sBAAsB,EAAE,yCAAyC,EACzG,6CAA6C,EAAE,kEAAkE,EAAE,oBAAoB,EACvI,mCAAmC,EAAE,8BAA8B,EAAE,sCAAsC,EAC3G,6CAA6C,EAAE,kCAAkC,EAAE,uCAAuC,EAC1H,sCAAsC,EAAE,0CAA0C,EAAE,6BAA6B,EACjH,gDAAgD,EAAE,gCAAgC,EAAE,2CAA2C,EAC/H,wCAAwC,EAAE,qCAAqC,EAAE,6CAA6C,EAC9H,iDAAiD,EAAE,gDAAgD,EAAE,gCAAgC,EACrI,kCAAkC,EAAE,8CAA8C,EAAE,uCAAuC,EAC3H,8CAA8C,EAAE,gDAAgD,EAAE,2CAA2C,EAC7I,4CAA4C,EAAE,wCAAwC,EAAE,iCAAiC,EACzH,gEAAgE,EAAE,6CAA6C,EAAE,kCAAkC,EACnJ,sCAAsC,EAAE,mDAAmD,EAAE,4CAA4C,EACzI,kCAAkC,EAAE,2DAA2D,EAAE,qCAAqC,EACtI,qEAAqE,EAAE,wDAAwD,EAAE,6CAA6C,CACjL;;AAED;AACA,MAAMC,YAAY,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAQ,CAAC,KAAK;EAC3C,IAAI,CAACD,OAAO,EAAE,OAAO,IAAI;EACzB,oBACI/B,OAAA;IAAKiC,SAAS,EAAC,mFAAmF;IAAAC,QAAA,eAC9FlC,OAAA;MAAKiC,SAAS,EAAC,+DAA+D;MAAAC,QAAA,gBAC1ElC,OAAA;QAAGiC,SAAS,EAAC,0CAA0C;QAAAC,QAAA,EAAEH;MAAO;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrEtC,OAAA;QACIuC,OAAO,EAAEP,OAAQ;QACjBC,SAAS,EAAC,6HAA6H;QAAAC,QAAA,EAC1I;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;;AAED;AAAAE,EAAA,GAjBMV,YAAY;AAkBlB,SAASW,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGtE,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACuE,WAAW,EAAEC,cAAc,CAAC,GAAGxE,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;EACxD,MAAM,CAACyE,MAAM,EAAEC,SAAS,CAAC,GAAG1E,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAAC2E,QAAQ,EAAEC,WAAW,CAAC,GAAG5E,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACyD,OAAO,EAAEoB,UAAU,CAAC,GAAG7E,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAAC8E,WAAW,EAAEC,cAAc,CAAC,GAAG/E,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACgF,cAAc,EAAEC,iBAAiB,CAAC,GAAGjF,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC7D,MAAM,CAACkF,UAAU,EAAEC,aAAa,CAAC,GAAGnF,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAElD;EACAC,SAAS,CAAC,MAAM;IACZ,MAAMmF,mBAAmB,GAAG,wBAAwB;IAEpD,MAAMC,WAAW,GAAG9E,kBAAkB,CAACgC,IAAI,EAAE,MAAO+C,WAAW,IAAK;MAChE,MAAMC,gBAAgB,GAAGvD,OAAO,CAACC,GAAG,CAACuD,4BAA4B;MACjE,IAAID,gBAAgB,EAAE;QAClB;QACA;QACA,IAAI,CAACD,WAAW,EAAE;UACd,IAAI;YACA,MAAMhF,qBAAqB,CAACiC,IAAI,EAAEgD,gBAAgB,CAAC;UACvD,CAAC,CAAC,OAAOE,KAAK,EAAE;YACZC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;YAC9DZ,UAAU,CAAC,0BAA0BY,KAAK,CAAChC,OAAO,mBAAmB,CAAC;UAC1E;QACJ;QACA;QACA,IAAIlB,IAAI,CAAC+C,WAAW,EAAE;UAClBhB,SAAS,CAAC/B,IAAI,CAAC+C,WAAW,CAACK,GAAG,CAAC;UAC/B;UACA,IAAI,CAACT,UAAU,EAAE;YACbC,aAAa,CAAC,UAAU5C,IAAI,CAAC+C,WAAW,CAACK,GAAG,CAAC/C,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;UACnE;QACJ;MACJ,CAAC,MAAM;QACH;QACA;QACA,IAAIgD,UAAU,GAAGC,cAAc,CAACC,OAAO,CAACV,mBAAmB,CAAC;QAC5D,IAAI,CAACQ,UAAU,EAAE;UACbA,UAAU,GAAG,SAASG,MAAM,CAACC,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC;UAC7CH,cAAc,CAACI,OAAO,CAACb,mBAAmB,EAAEQ,UAAU,CAAC;UACvDF,OAAO,CAACQ,GAAG,CAAC,+BAA+B,EAAEN,UAAU,CAAC;QAC5D,CAAC,MAAM;UACHF,OAAO,CAACQ,GAAG,CAAC,yBAAyB,EAAEN,UAAU,CAAC;QACtD;QAEAtB,SAAS,CAACsB,UAAU,CAAC,CAAC,CAAC;QACvB;QACA,IAAI,CAACV,UAAU,EAAE;UACbC,aAAa,CAAC,UAAUS,UAAU,CAAChD,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;QACzD;MACJ;MACAmC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;IAC1B,CAAC,CAAC;IACF,OAAO,MAAMM,WAAW,CAAC,CAAC;EAC9B,CAAC,EAAE,CAACH,UAAU,CAAC,CAAC,CAAC,CAAC;;EAGlB;EACAjF,SAAS,CAAC,MAAM;IACZ,IAAI,CAACwE,MAAM,IAAI,CAACK,WAAW,IAAI,CAACT,MAAM,EAAE,OAAO,CAAC;;IAEhD,MAAM8B,UAAU,GAAG1F,GAAG,CAAC6B,EAAE,EAAE,aAAaH,KAAK,oBAAoB,EAAEsC,MAAM,CAAC;IAC1E,MAAM2B,eAAe,GAAGrF,UAAU,CAACoF,UAAU,EAAE,MAAOE,OAAO,IAAK;MAC9D,IAAIA,OAAO,CAACC,MAAM,CAAC,CAAC,EAAE;QAAA,IAAAC,aAAA,EAAAC,cAAA;QAClB,MAAMC,IAAI,GAAGJ,OAAO,CAACI,IAAI,CAAC,CAAC;QAC3B,MAAMC,WAAW,GAAG/B,QAAQ,CAAC,CAAC;QAC9BC,WAAW,CAAC6B,IAAI,CAAC;;QAEjB;QACA;QACA,IACIpC,MAAM,KAAKoC,IAAI,CAACE,MAAM;QAAI;QAC1BF,IAAI,CAACG,MAAM,KAAK,YAAY;QAAI;QAChCH,IAAI,CAACI,OAAO,IAAI,EAAAN,aAAA,GAAAE,IAAI,CAACI,OAAO,CAACJ,IAAI,CAACK,YAAY,GAAG,CAAC,CAAC,cAAAP,aAAA,uBAAnCA,aAAA,CAAqCzD,IAAI,MAAK,gBAAgB;QAAI;QAClF,GAAA0D,cAAA,GAACC,IAAI,CAACI,OAAO,CAACJ,IAAI,CAACK,YAAY,GAAG,CAAC,CAAC,cAAAN,cAAA,eAAnCA,cAAA,CAAqCO,QAAQ;QAAI;QACjD,CAACL,WAAW,IAAIA,WAAW,CAACI,YAAY,KAAKL,IAAI,CAACK,YAAY,IAAIJ,WAAW,CAACE,MAAM,KAAK,YAAY,CAAC,CAAC;QAAA,EAC1G;UACE3B,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC;UACzB,MAAM+B,uBAAuB,GAAGP,IAAI,CAACI,OAAO,CAACJ,IAAI,CAACK,YAAY,GAAG,CAAC,CAAC;UACnE,IAAI;YACA,MAAMC,QAAQ,GAAG,MAAME,sBAAsB,CAACD,uBAAuB,CAAC/D,qBAAqB,CAAC;YAC5F;YACA,MAAMpC,SAAS,CAACsF,UAAU,EAAE;cACxB,CAAC,WAAWM,IAAI,CAACK,YAAY,GAAG,CAAC,WAAW,GAAGC,QAAQ;cACvD/B,cAAc,EAAE,KAAK,CAAC;YAC1B,CAAC,CAAC;UACN,CAAC,CAAC,OAAOS,KAAK,EAAE;YACZC,OAAO,CAACD,KAAK,CAAC,gDAAgD,EAAEA,KAAK,CAAC;YACtE,MAAM5E,SAAS,CAACsF,UAAU,EAAE;cACxB,CAAC,WAAWM,IAAI,CAACK,YAAY,GAAG,CAAC,WAAW,GAAG,qEAAqE;cACpH9B,cAAc,EAAE;YACpB,CAAC,CAAC;YACFkC,WAAW,CAAC,gEAAgE,CAAC;UACjF,CAAC,SAAS;YACNjC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC;UAC9B;QACJ;;QAEA;QACA,IAAIwB,IAAI,CAACG,MAAM,KAAK,SAAS,IAAIH,IAAI,CAACG,MAAM,KAAK,YAAY,IAAIH,IAAI,CAACG,MAAM,KAAK,QAAQ,EAAE;UACvFpC,cAAc,CAAC,MAAM,CAAC;QAC1B,CAAC,MAAM,IAAIiC,IAAI,CAACG,MAAM,KAAK,WAAW,EAAE;UACpCpC,cAAc,CAAC,aAAa,CAAC;QACjC,CAAC,MAAM,IAAIiC,IAAI,CAACG,MAAM,KAAK,WAAW,EAAE;UACpCpC,cAAc,CAAC,QAAQ,CAAC;QAC5B,CAAC,MAAM,IAAIiC,IAAI,CAACG,MAAM,KAAK,OAAO,EAAE;UAChCpC,cAAc,CAAC,OAAO,CAAC;QAC3B;MACJ,CAAC,MAAM;QACHkB,OAAO,CAACQ,GAAG,CAAC,0CAA0C,CAAC;QACvDxB,SAAS,CAAC,IAAI,CAAC;QACfE,WAAW,CAAC,IAAI,CAAC;QACjBJ,cAAc,CAAC,MAAM,CAAC;QACtB0C,WAAW,CAAC,0BAA0B,CAAC;MAC3C;IACJ,CAAC,EAAGzB,KAAK,IAAK;MACVC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrDyB,WAAW,CAAC,6CAA6C,CAAC;IAC9D,CAAC,CAAC;IAEF,OAAO,MAAMd,eAAe,CAAC,CAAC;EAClC,CAAC,EAAE,CAAC3B,MAAM,EAAEK,WAAW,EAAET,MAAM,CAAC,CAAC,CAAC,CAAC;;EAEnC;EACA,MAAM4C,sBAAsB,GAAG,MAAOE,iBAAiB,IAAK;IACxDzB,OAAO,CAACQ,GAAG,CAAC,gCAAgC,EAAEiB,iBAAiB,CAAC;IAChE;IACA;IACA,MAAM,IAAIC,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IACzD,MAAME,cAAc,GAAG,gDAAgDC,kBAAkB,CAACL,iBAAiB,CAACvE,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE;IAC/H8C,OAAO,CAACQ,GAAG,CAAC,sBAAsB,EAAEqB,cAAc,CAAC;IACnD,OAAOA,cAAc;EACzB,CAAC;EAED,MAAML,WAAW,GAAIO,GAAG,IAAK;IACzB5C,UAAU,CAAC4C,GAAG,CAAC;EACnB,CAAC;EAED,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI,CAAC/C,QAAQ,IAAI,CAACA,QAAQ,CAACgC,MAAM,KAAKtC,MAAM,EAAE;IAE9C,IAAI;MACA,MAAMsD,OAAO,GAAGlH,GAAG,CAAC6B,EAAE,EAAE,aAAaH,KAAK,oBAAoB,EAAEsC,MAAM,CAAC;MACvE,MAAM;QAAEqC,YAAY;QAAEc,SAAS;QAAEC,QAAQ;QAAEC;MAAc,CAAC,GAAGnD,QAAQ;MACrE,MAAMoD,SAAS,GAAGjB,YAAY,GAAG,CAAC;MAElC,IAAIiB,SAAS,GAAGH,SAAS,EAAE;QACvB,MAAM/G,SAAS,CAAC8G,OAAO,EAAE;UAAEf,MAAM,EAAE;QAAY,CAAC,CAAC;MACrD,CAAC,MAAM;QACH,MAAMoB,sBAAsB,GAAGnF,YAAY,CAACgF,QAAQ,CAAC;QACrD,MAAMI,SAAS,GAAGC,eAAe,CAACF,sBAAsB,EAAEF,aAAa,IAAI,EAAE,CAAC;QAC9E,MAAMK,oBAAoB,GAAGhH,UAAU,CAAC8G,SAAS,CAACjF,IAAI,CAAC;QAEvD,MAAMoF,cAAc,GAAG,CAAC,CAAC;QACzB,KAAK,MAAMC,GAAG,IAAI1D,QAAQ,CAAC2D,OAAO,EAAE;UAChCF,cAAc,CAACC,GAAG,CAAC,GAAG;YAClB,GAAG1D,QAAQ,CAAC2D,OAAO,CAACD,GAAG,CAAC;YACxBE,YAAY,EAAE,KAAK;YACnBC,QAAQ,EAAE;UACd,CAAC;QACL;QAEA,MAAM3H,SAAS,CAAC8G,OAAO,EAAE;UACrBf,MAAM,EAAE,YAAY;UACpBE,YAAY,EAAEiB,SAAS;UACvBlB,OAAO,EAAE1F,UAAU,CAAC8G,SAAS,CAAC;UAC9BH,aAAa,EAAEK,oBAAoB;UACnCG,OAAO,EAAEF,cAAc;UACvBK,gBAAgB,EAAE,CAAC,CAAC;UACpBC,aAAa,EAAE,CAAC,CAAC;UACjBC,KAAK,EAAE,CAAC,CAAC;UACTC,wBAAwB,EAAE,IAAI;UAC9B5D,cAAc,EAAEiD,SAAS,CAACnF,IAAI,KAAK;QACvC,CAAC,CAAC;MACN;IACJ,CAAC,CAAC,OAAO2C,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACtDyB,WAAW,CAAC,iCAAiC,CAAC;IAClD;EACJ,CAAC;;EAED;EACA,MAAM2B,YAAY,GAAIC,KAAK,IAAK;IAC5B,IAAIC,YAAY,GAAGD,KAAK,CAACE,MAAM;MAAEC,WAAW;IAC5C,OAAOF,YAAY,KAAK,CAAC,EAAE;MACvBE,WAAW,GAAGxG,IAAI,CAACyG,KAAK,CAACzG,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGqG,YAAY,CAAC;MACtDA,YAAY,EAAE;MACd,CAACD,KAAK,CAACC,YAAY,CAAC,EAAED,KAAK,CAACG,WAAW,CAAC,CAAC,GAAG,CAACH,KAAK,CAACG,WAAW,CAAC,EAAEH,KAAK,CAACC,YAAY,CAAC,CAAC;IACzF;IACA,OAAOD,KAAK;EAChB,CAAC;;EAED;EACA,MAAMZ,eAAe,GAAGA,CAACiB,UAAU,EAAEC,OAAO,KAAK;IAC7C,MAAMC,gBAAgB,GAAGF,UAAU,CAACG,MAAM,CAACC,CAAC,IAAI,CAACH,OAAO,CAACI,QAAQ,CAACD,CAAC,CAACvG,IAAI,CAAC,CAAC;IAC1E,IAAIqG,gBAAgB,CAACL,MAAM,KAAK,CAAC,EAAE;MAC/B9B,WAAW,CAAC,yEAAyE,CAAC;MACtF,OAAOiC,UAAU,CAAC1G,IAAI,CAACyG,KAAK,CAACzG,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGyG,UAAU,CAACH,MAAM,CAAC,CAAC;IACpE;IACA,MAAMC,WAAW,GAAGxG,IAAI,CAACyG,KAAK,CAACzG,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG2G,gBAAgB,CAACL,MAAM,CAAC;IACvE,OAAOK,gBAAgB,CAACJ,WAAW,CAAC;EACxC,CAAC;;EAED;EACA,MAAMQ,UAAU,GAAGA,CAAA,KAAM;IACrB,QAAQlF,WAAW;MACf,KAAK,MAAM;QACP,oBAAO7C,OAAA,CAACgI,QAAQ;UAAClF,cAAc,EAAEA,cAAe;UAACE,SAAS,EAAEA,SAAU;UAACL,MAAM,EAAEA,MAAO;UAAC6C,WAAW,EAAEA,WAAY;UAAChC,UAAU,EAAEA,UAAW;UAACC,aAAa,EAAEA;QAAc;UAAAtB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAC7K,KAAK,OAAO;QACR,oBAAOtC,OAAA,CAACiI,SAAS;UAAChF,QAAQ,EAAEA,QAAS;UAACF,MAAM,EAAEA,MAAO;UAACJ,MAAM,EAAEA,MAAO;UAAC6C,WAAW,EAAEA;QAAY;UAAArD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACtG,KAAK,MAAM;QACP,oBAAOtC,OAAA,CAACkI,QAAQ;UAACjF,QAAQ,EAAEA,QAAS;UAACF,MAAM,EAAEA,MAAO;UAACJ,MAAM,EAAEA,MAAO;UAAC6C,WAAW,EAAEA,WAAY;UAAClC,cAAc,EAAEA;QAAe;UAAAnB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAE;MACvI,KAAK,aAAa;QACd,oBAAOtC,OAAA,CAACmI,eAAe;UAAClF,QAAQ,EAAEA,QAAS;UAACN,MAAM,EAAEA,MAAO;UAACI,MAAM,EAAEA,MAAO;UAACyC,WAAW,EAAEA;QAAY;UAAArD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAE;MAC9G,KAAK,QAAQ;QACT,oBAAOtC,OAAA,CAACoI,UAAU;UAACnF,QAAQ,EAAEA,QAAS;UAACN,MAAM,EAAEA,MAAO;UAAC0F,WAAW,EAAEA,CAAA,KAAM;YACtErF,SAAS,CAAC,IAAI,CAAC;YACfE,WAAW,CAAC,IAAI,CAAC;YACjBJ,cAAc,CAAC,MAAM,CAAC;UAC1B,CAAE;UAAC0C,WAAW,EAAEA;QAAY;UAAArD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAE;MACrC;QACI,oBAAOtC,OAAA,CAACgI,QAAQ;UAAClF,cAAc,EAAEA,cAAe;UAACE,SAAS,EAAEA,SAAU;UAACL,MAAM,EAAEA,MAAO;UAAC6C,WAAW,EAAEA,WAAY;UAAChC,UAAU,EAAEA,UAAW;UAACC,aAAa,EAAEA;QAAc;UAAAtB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;IACjL;EACJ,CAAC;EAED,IAAI,CAACc,WAAW,EAAE;IACd,oBACIpD,OAAA;MAAKiC,SAAS,EAAC,+HAA+H;MAAAC,QAAA,eAC1IlC,OAAA;QAAGiC,SAAS,EAAC,wBAAwB;QAAAC,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxD,CAAC;EAEd;EAEA,oBACItC,OAAA;IAAKiC,SAAS,EAAC,4IAA4I;IAAAC,QAAA,GACtJH,OAAO,iBAAI/B,OAAA,CAAC8B,YAAY;MAACC,OAAO,EAAEA,OAAO,CAACT,IAAK;MAACU,OAAO,EAAED,OAAO,CAACuG,QAAQ,GAAG,MAAM;QAAEvG,OAAO,CAACuG,QAAQ,CAAC,CAAC;QAAEnF,UAAU,CAAC,IAAI,CAAC;MAAE,CAAC,GAAG,MAAMA,UAAU,CAAC,IAAI;IAAE;MAAAhB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzJtC,OAAA;MAAIiC,SAAS,EAAC,mFAAmF;MAAAC,QAAA,EAAC;IAElG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACLtC,OAAA;MAAGiC,SAAS,EAAC,gEAAgE;MAAAC,QAAA,GAAC,kBAC1D,eAAAlC,OAAA;QAAMiC,SAAS,EAAC,iEAAiE;QAAAC,QAAA,EAAES;MAAM;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClH,CAAC,eACJtC,OAAA;MAAKiC,SAAS,EAAC,mJAAmJ;MAAAC,QAAA,EAC7J6F,UAAU,CAAC;IAAC;MAAA5F,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;;AAEA;AAAAI,EAAA,CA3PSD,GAAG;AAAA8F,GAAA,GAAH9F,GAAG;AA4PZ,MAAMuF,QAAQ,GAAGA,CAAC;EAAElF,cAAc;EAAEE,SAAS;EAAEL,MAAM;EAAE6C,WAAW;EAAEhC,UAAU;EAAEC;AAAc,CAAC,KAAK;EAAA+E,GAAA;EAChG,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGpK,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMqK,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI,CAACnF,UAAU,CAACoF,IAAI,CAAC,CAAC,EAAE;MACpBpD,WAAW,CAAC,6BAA6B,CAAC;MAC1C;IACJ;IACA,IAAI;MACA,MAAMqD,UAAU,GAAGC,MAAM,CAACC,IAAI,CAAC5H,YAAY,CAAC;MAC5C,MAAM6H,cAAc,GAAGH,UAAU,CAAC9H,IAAI,CAACyG,KAAK,CAACzG,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG6H,UAAU,CAACvB,MAAM,CAAC,CAAC,CAAC,CAAC;MAClF,MAAM2B,QAAQ,GAAGlI,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAACgI,WAAW,CAAC,CAAC,CAAC,CAAC;MAC3ElF,OAAO,CAACQ,GAAG,CAAC,sBAAsB,EAAEyE,QAAQ,CAAC,CAAC,CAAC;;MAE/C,MAAME,cAAc,GAAG,CAAC,CAAC;MACzB;MACAA,cAAc,CAACxG,MAAM,CAAC,GAAG;QACrByG,EAAE,EAAEzG,MAAM;QAAE;QACZ0G,IAAI,EAAE7F,UAAU,CAACoF,IAAI,CAAC,CAAC;QAAE;QACzBU,KAAK,EAAE,CAAC;QACRC,MAAM,EAAE,IAAI;QACZC,IAAI,EAAErC,YAAY,CAAC,CAAC,GAAGtF,YAAY,CAAC,CAAC,CAAC4H,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;QAAE;QACpD5C,YAAY,EAAE,KAAK;QACnBC,QAAQ,EAAE,KAAK;QACf4C,aAAa,EAAE,CAAC;QAChBC,WAAW,EAAE;MACjB,CAAC;MAED,MAAMC,UAAU,GAAG,MAAM3K,MAAM,CAACK,UAAU,CAACsB,EAAE,EAAE,aAAaH,KAAK,oBAAoB,CAAC,EAAE;QACpFwE,MAAM,EAAEtC,MAAM;QACdwD,QAAQ,EAAE6C,cAAc;QACxB5D,YAAY,EAAE,CAAC;QACfc,SAAS,EAAE,EAAE;QACbf,OAAO,EAAE,EAAE;QAAE;QACbD,MAAM,EAAE,OAAO;QAAE;QACjB0B,OAAO,EAAEuC,cAAc;QACvBpC,gBAAgB,EAAE,CAAC,CAAC;QACpBC,aAAa,EAAE,CAAC,CAAC;QAAE;QACnBC,KAAK,EAAE,CAAC,CAAC;QACTgC,QAAQ,EAAEA,QAAQ;QAAE;QACpBY,SAAS,EAAElK,eAAe,CAAC,CAAC;QAC5ByG,aAAa,EAAE,EAAE;QAAE;QACnB0D,cAAc,EAAE3C,YAAY,CAAC,CAAC,GAAGtF,YAAY,CAAC,CAAC;QAAE;QACjDyB,cAAc,EAAE,KAAK,CAAC;MAC1B,CAAC,CAAC;MACFU,OAAO,CAACQ,GAAG,CAAC,+CAA+C/D,KAAK,sBAAsBmJ,UAAU,CAACR,EAAE,EAAE,CAAC,CAAC,CAAC;MACxGpG,SAAS,CAAC4G,UAAU,CAACR,EAAE,CAAC;MACxBtG,cAAc,CAAC,OAAO,CAAC;MACvB0C,WAAW,CAAC,6BAA6ByD,QAAQ,EAAE,CAAC;IACxD,CAAC,CAAC,OAAOlF,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CyB,WAAW,CAAC,0CAA0C,CAAC;IAC3D;EACJ,CAAC;EAED,MAAMuE,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACvG,UAAU,CAACoF,IAAI,CAAC,CAAC,EAAE;MACpBpD,WAAW,CAAC,6BAA6B,CAAC;MAC1C;IACJ;IACA,IAAI,CAACiD,QAAQ,EAAE;MACXjD,WAAW,CAAC,2BAA2B,CAAC;MACxC;IACJ;IAEA,IAAI;MACAxB,OAAO,CAACQ,GAAG,CAAC,2DAA2D/D,KAAK,qCAAqCgI,QAAQ,CAACS,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MAC5I,MAAMc,CAAC,GAAGzK,KAAK,CAACD,UAAU,CAACsB,EAAE,EAAE,aAAaH,KAAK,oBAAoB,CAAC,EAAEjB,KAAK,CAAC,UAAU,EAAE,IAAI,EAAEiJ,QAAQ,CAACS,WAAW,CAAC,CAAC,CAAC,CAAC;MACxH,MAAMe,aAAa,GAAG,MAAMrK,OAAO,CAACoK,CAAC,CAAC;MACtChG,OAAO,CAACQ,GAAG,CAAC,uBAAuB,EAAEyF,aAAa,CAACC,KAAK,CAAC,CAAC,CAAC;;MAE3D,IAAI,CAACD,aAAa,CAACC,KAAK,EAAE;QACtB,MAAMC,OAAO,GAAGF,aAAa,CAACG,IAAI,CAAC,CAAC,CAAC;QACrC,MAAMnH,QAAQ,GAAGkH,OAAO,CAACpF,IAAI,CAAC,CAAC;QAC/B,MAAMkB,OAAO,GAAGlH,GAAG,CAAC6B,EAAE,EAAE,aAAaH,KAAK,oBAAoB,EAAE0J,OAAO,CAACf,EAAE,CAAC;QAE3E,IAAInG,QAAQ,CAAC2D,OAAO,CAACjE,MAAM,CAAC,EAAE;UAC1B6C,WAAW,CAAC,+BAA+B,CAAC;UAC5CxC,SAAS,CAACmH,OAAO,CAACf,EAAE,CAAC;UACrBtG,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC;UACzB;QACJ;;QAEA;QACA,MAAMuH,UAAU,GAAGlD,YAAY,CAAC,CAAC,GAAGtF,YAAY,CAAC,CAAC,CAAC4H,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;QAE/D,MAAMtK,SAAS,CAAC8G,OAAO,EAAE;UACrB,CAAC,WAAWtD,MAAM,EAAE,GAAG;YACnByG,EAAE,EAAEzG,MAAM;YAAE;YACZ0G,IAAI,EAAE7F,UAAU,CAACoF,IAAI,CAAC,CAAC;YAAE;YACzBU,KAAK,EAAE,CAAC;YACRC,MAAM,EAAE,KAAK;YACbC,IAAI,EAAEa,UAAU;YAChBxD,YAAY,EAAE,KAAK;YACnBC,QAAQ,EAAE,KAAK;YACf4C,aAAa,EAAE,CAAC;YAChBC,WAAW,EAAE;UACjB;QACJ,CAAC,CAAC;QACF3G,SAAS,CAACmH,OAAO,CAACf,EAAE,CAAC;QACrBtG,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC;QACzB0C,WAAW,CAAC,eAAeiD,QAAQ,GAAG,CAAC;MAC3C,CAAC,MAAM;QACHjD,WAAW,CAAC,oBAAoB,CAAC;MACrC;IACJ,CAAC,CAAC,OAAOzB,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3CyB,WAAW,CAAC,wCAAwC,CAAC;IACzD;EACJ,CAAC;EAED,oBACIxF,OAAA;IAAKiC,SAAS,EAAC,aAAa;IAAAC,QAAA,gBACxBlC,OAAA;MACIoB,IAAI,EAAC,MAAM;MACXkJ,WAAW,EAAC,qBAAqB;MACjCC,KAAK,EAAE/G,UAAW;MAClBgH,QAAQ,EAAGC,CAAC,IAAKhH,aAAa,CAACgH,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC/CtI,SAAS,EAAC,mJAAmJ;MAC7J0I,SAAS,EAAC,IAAI,CAAC;IAAA;MAAAxI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,eACFtC,OAAA;MACIuC,OAAO,EAAEoG,gBAAiB;MAC1B1G,SAAS,EAAC,sMAAsM;MAAAC,QAAA,EACnN;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTtC,OAAA;MAAKiC,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACjBlC,OAAA;QAAGiC,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACxCtC,OAAA;QACIoB,IAAI,EAAC,MAAM;QACXkJ,WAAW,EAAC,iBAAiB;QAC7BC,KAAK,EAAE9B,QAAS;QAChB+B,QAAQ,EAAGC,CAAC,IAAK/B,WAAW,CAAC+B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC7CtI,SAAS,EAAC,6JAA6J;QACvK0I,SAAS,EAAC;MAAG;QAAAxI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB,CAAC,eACFtC,OAAA;QACIuC,OAAO,EAAEwH,cAAe;QACxB9H,SAAS,EAAC,mMAAmM;QAAAC,QAAA,EAChN;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eACNtC,OAAA;MAAGiC,SAAS,EAAC,4BAA4B;MAAAC,QAAA,EAAC;IAE1C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEd,CAAC;;AAED;AAAAkG,GAAA,CAvJMR,QAAQ;AAAA4C,GAAA,GAAR5C,QAAQ;AAwJd,MAAMC,SAAS,GAAGA,CAAC;EAAEhF,QAAQ;EAAEF,MAAM;EAAEJ,MAAM;EAAE6C;AAAY,CAAC,KAAK;EAC7D,IAAI,CAACvC,QAAQ,EAAE,oBAAOjD,OAAA;IAAGiC,SAAS,EAAC,mCAAmC;IAAAC,QAAA,EAAC;EAAgB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAE3F,MAAMsE,OAAO,GAAGkC,MAAM,CAAC+B,MAAM,CAAC5H,QAAQ,CAAC2D,OAAO,IAAI,CAAC,CAAC,CAAC,CAACkE,IAAI,CAAC,CAACrJ,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAAC4H,IAAI,CAAC0B,aAAa,CAACrJ,CAAC,CAAC2H,IAAI,CAAC,CAAC;EAClG,MAAME,MAAM,GAAGtG,QAAQ,CAACgC,MAAM,KAAKtC,MAAM;EACzC,MAAMqI,YAAY,GAAGpE,OAAO,CAACU,MAAM,IAAI,CAAC;EACxC,MAAM2B,QAAQ,GAAGhG,QAAQ,CAACgG,QAAQ;EAElC,MAAMgC,oBAAoB,GAAG,MAAOR,CAAC,IAAK;IACtC,IAAI,CAAClB,MAAM,EAAE;IACb,MAAM2B,WAAW,GAAGT,CAAC,CAACC,MAAM,CAACH,KAAK;IAClC,IAAI;MACA,MAAMtE,OAAO,GAAGlH,GAAG,CAAC6B,EAAE,EAAE,aAAaH,KAAK,oBAAoB,EAAEsC,MAAM,CAAC;MACvE,MAAM5D,SAAS,CAAC8G,OAAO,EAAE;QAAEE,QAAQ,EAAE+E;MAAY,CAAC,CAAC;IACvD,CAAC,CAAC,OAAOnH,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChDyB,WAAW,CAAC,4BAA4B,CAAC;IAC7C;EACJ,CAAC;EAED,MAAM2F,eAAe,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI,CAAC5B,MAAM,EAAE;IACb,IAAI;MACA,MAAMtD,OAAO,GAAGlH,GAAG,CAAC6B,EAAE,EAAE,aAAaH,KAAK,oBAAoB,EAAEsC,MAAM,CAAC;MACvE,MAAMqI,aAAa,GAAGtC,MAAM,CAAC+B,MAAM,CAAC5H,QAAQ,CAAC2D,OAAO,CAAC;MACrD,IAAIwE,aAAa,CAAC9D,MAAM,GAAG,CAAC,EAAE;QAAE;QAC5B9B,WAAW,CAAC,+CAA+C,CAAC;QAC5D;MACJ;;MAEA;MACA,MAAMc,sBAAsB,GAAGnF,YAAY,CAAC8B,QAAQ,CAACkD,QAAQ,CAAC;MAC9D,IAAIkF,cAAc,GAAG,CAAC,GAAGxJ,YAAY,CAAC;MACtC,MAAM6E,cAAc,GAAG;QAAE,GAAGzD,QAAQ,CAAC2D;MAAQ,CAAC,CAAC,CAAC;;MAEhD,KAAK,MAAMD,GAAG,IAAID,cAAc,EAAE;QAC9B,MAAM8C,IAAI,GAAG,EAAE;QACf;QACA,KAAK,IAAI8B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;UACzB,IAAID,cAAc,CAAC/D,MAAM,KAAK,CAAC,EAAE;YAC7B;YACA+D,cAAc,GAAGlE,YAAY,CAAC,CAAC,GAAGtF,YAAY,CAAC,CAAC;YAChDmC,OAAO,CAACuH,IAAI,CAAC,4EAA4E,CAAC;UAC9F;UACA,MAAMC,SAAS,GAAGzK,IAAI,CAACyG,KAAK,CAACzG,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGqK,cAAc,CAAC/D,MAAM,CAAC;UACnEkC,IAAI,CAACiC,IAAI,CAACJ,cAAc,CAACK,MAAM,CAACF,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrD;QACA9E,cAAc,CAACC,GAAG,CAAC,CAAC6C,IAAI,GAAGA,IAAI;QAC/B9C,cAAc,CAACC,GAAG,CAAC,CAACE,YAAY,GAAG,KAAK;QACxCH,cAAc,CAACC,GAAG,CAAC,CAACG,QAAQ,GAAG,KAAK;MACxC;MAEA,MAAM6E,aAAa,GAAGnF,eAAe,CAACF,sBAAsB,EAAE,EAAE,CAAC,CAAC,CAAC;;MAEnE;MACA;;MAEA,MAAMnH,SAAS,CAAC8G,OAAO,EAAE;QACrBf,MAAM,EAAE,YAAY;QACpBE,YAAY,EAAE,CAAC;QACfc,SAAS,EAAEnF,IAAI,CAAC6K,GAAG,CAAC,EAAE,EAAEtF,sBAAsB,CAACgB,MAAM,CAAC;QAAE;QACxDnC,OAAO,EAAE,CAACwG,aAAa,CAAC;QAAE;QAC1BvF,aAAa,EAAE,CAACuF,aAAa,CAACrK,IAAI,CAAC;QAAE;QACrCsF,OAAO,EAAEF,cAAc;QAAE;QACzBK,gBAAgB,EAAE,CAAC,CAAC;QACpBC,aAAa,EAAE,CAAC,CAAC;QACjBC,KAAK,EAAE,CAAC,CAAC;QACT3D,cAAc,EAAEqI,aAAa,CAACvK,IAAI,KAAK,gBAAgB,CAAC;MAC5D,CAAC,CAAC;IAEN,CAAC,CAAC,OAAO2C,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CyB,WAAW,CAAC,4CAA4C,CAAC;IAC7D;EACJ,CAAC;EAED,oBACIxF,OAAA;IAAKiC,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC5BlC,OAAA;MAAIiC,SAAS,EAAC,oCAAoC;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClEtC,OAAA;MAAGiC,SAAS,EAAC,4BAA4B;MAAAC,QAAA,GAAC,aAC3B,eAAAlC,OAAA;QAAMiC,SAAS,EAAC,2BAA2B;QAAAC,QAAA,EAAE+G;MAAQ;QAAA9G,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzE,CAAC,eACJtC,OAAA;MAAKiC,SAAS,EAAC,6DAA6D;MAAAC,QAAA,gBACxElC,OAAA;QAAMiC,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EACtCiH,MAAM,gBACHvJ,OAAA;QACIuK,KAAK,EAAEtH,QAAQ,CAACkD,QAAS;QACzBqE,QAAQ,EAAES,oBAAqB;QAC/BhJ,SAAS,EAAC,oHAAoH;QAAAC,QAAA,EAE7H4G,MAAM,CAACC,IAAI,CAAC5H,YAAY,CAAC,CAAC0K,GAAG,CAACC,GAAG,iBAC9B9L,OAAA;UAAkBuK,KAAK,EAAEuB,GAAI;UAAC7J,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAE4J;QAAG,GAA5CA,GAAG;UAAA3J,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAkD,CACrE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,gBAETtC,OAAA;QAAMiC,SAAS,EAAC,6BAA6B;QAAAC,QAAA,EAAEe,QAAQ,CAACkD;MAAQ;QAAAhE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAC1E;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACNtC,OAAA;MAAGiC,SAAS,EAAC,4BAA4B;MAAAC,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAChEtC,OAAA;MAAIiC,SAAS,EAAC,qEAAqE;MAAAC,QAAA,EAC9E0E,OAAO,CAACiF,GAAG,CAACE,MAAM,iBACf/L,OAAA;QAAoBiC,SAAS,EAAC,MAAM;QAAAC,QAAA,GAC/B6J,MAAM,CAAC1C,IAAI,EAAC,GAAC,EAAC0C,MAAM,CAACxC,MAAM,IAAI,QAAQ;MAAA,GADnCwC,MAAM,CAAC3C,EAAE;QAAAjH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEd,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,EACJiH,MAAM,iBACHvJ,OAAA;MACIuC,OAAO,EAAE4I,eAAgB;MACzBa,QAAQ,EAAE,CAAChB,YAAa;MACxB/I,SAAS,EAAE,6EACP+I,YAAY,GACN,+HAA+H,GAC/H,8CAA8C,EACrD;MAAA9I,QAAA,EAEF8I,YAAY,GAAG,YAAY,GAAG,QAAQ,CAAC,GAAGpE,OAAO,CAACU,MAAM;IAA0B;MAAAnF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/E,CACX,EACA,CAACiH,MAAM,iBACJvJ,OAAA;MAAGiC,SAAS,EAAC,8BAA8B;MAAAC,QAAA,EAAC;IAAmC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACrF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;;AAED;AAAA2J,GAAA,GA9HMhE,SAAS;AA+Hf,MAAMC,QAAQ,GAAGA,CAAC;EAAEjF,QAAQ;EAAEF,MAAM;EAAEJ,MAAM;EAAE6C,WAAW;EAAElC;AAAe,CAAC,KAAK;EAAE;EAC9E,IAAI,CAACL,QAAQ,IAAI,CAACA,QAAQ,CAACkC,OAAO,IAAIlC,QAAQ,CAACkC,OAAO,CAACmC,MAAM,KAAK,CAAC,EAAE;IACjE,oBAAOtH,OAAA;MAAGiC,SAAS,EAAC,mCAAmC;MAAAC,QAAA,EAAC;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC5F;EACA,MAAM4J,aAAa,GAAGjJ,QAAQ,CAACkC,OAAO,CAAClC,QAAQ,CAACmC,YAAY,GAAG,CAAC,CAAC;EAEjE,IAAI,CAAC8G,aAAa,EAAE;IAChB,oBAAOlM,OAAA;MAAGiC,SAAS,EAAC,mCAAmC;MAAAC,QAAA,EAAC;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACtF;EAEA,oBAAOtC,OAAA,CAACmM,SAAS;IAAClJ,QAAQ,EAAEA,QAAS;IAACF,MAAM,EAAEA,MAAO;IAACJ,MAAM,EAAEA,MAAO;IAAC6C,WAAW,EAAEA,WAAY;IAAClC,cAAc,EAAEA;EAAe;IAAAnB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,CAAC,CAAC;AACxI,CAAC;AAAC8J,GAAA,GAXIlE,QAAQ;AAad,MAAMmE,UAAU,GAAGA,CAAC;EAAEC,MAAM;EAAErJ,QAAQ;EAAEK;AAAe,CAAC,KAAK;EAAE;EAC3D,IAAI,CAACgJ,MAAM,EAAE,OAAO,IAAI;;EAExB;EACA,IAAIA,MAAM,CAAClL,IAAI,KAAK,gBAAgB,IAAIkC,cAAc,EAAE;IAAE;IACtD,oBACItD,OAAA;MAAKiC,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC5BlC,OAAA;QAAIiC,SAAS,EAAC,kDAAkD;QAAAC,QAAA,EAAC;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5FtC,OAAA;QAAGiC,SAAS,EAAC,uBAAuB;QAAAC,QAAA,EAAC;MAAsD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9F,CAAC;EAEd;EAEA,oBACItC,OAAA;IAAKiC,SAAS,EAAC,gIAAgI;IAAAC,QAAA,gBAC3IlC,OAAA;MAAGiC,SAAS,EAAC,wCAAwC;MAAAC,QAAA,EAAEoK,MAAM,CAACjL;IAAM;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzEtC,OAAA;MAAGiC,SAAS,EAAC,8DAA8D;MACvEsK,uBAAuB,EAAE;QAAEC,MAAM,EAAEF,MAAM,CAAChL,IAAI,CAACmL,OAAO,CAAC,qBAAqB,EAAE,oDAAoD;MAAE;IAAE;MAAAtK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEvI,CAAC,EACHgK,MAAM,CAAClL,IAAI,KAAK,gBAAgB,IAAIkL,MAAM,CAACjH,QAAQ,iBAChDrF,OAAA;MAAK0M,GAAG,EAAEJ,MAAM,CAACjH,QAAS;MAACsH,GAAG,EAAEL,MAAM,CAAC/K,qBAAsB;MAACU,SAAS,EAAC;IAAyE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACtJ,eACDtC,OAAA;MAAGiC,SAAS,EAAC,4BAA4B;MAAAC,QAAA,GAAC,QAChC,EAACe,QAAQ,CAACmC,YAAY,EAAC,MAAI,EAACnC,QAAQ,CAACiD,SAAS;IAAA;MAAA/D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEd,CAAC;AAACsK,GAAA,GA5BIP,UAAU;AA8BhB,MAAMF,SAAS,GAAGA,CAAC;EAAElJ,QAAQ;EAAEF,MAAM;EAAEJ,MAAM;EAAE6C,WAAW;EAAElC;AAAe,CAAC,KAAK;EAAAuJ,GAAA;EAAE;EAC/E;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGzO,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAAC0O,YAAY,EAAEC,eAAe,CAAC,GAAG3O,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC4O,cAAc,EAAEC,iBAAiB,CAAC,GAAG7O,QAAQ,CAAC;IAAE8O,iBAAiB,EAAE,EAAE;IAAEC,aAAa,EAAE;EAAG,CAAC,CAAC;EAClG,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGjP,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACkP,cAAc,EAAEC,iBAAiB,CAAC,GAAGnP,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE5D,MAAM2H,OAAO,GAAGlH,GAAG,CAAC6B,EAAE,EAAE,aAAaH,KAAK,oBAAoB,EAAEsC,MAAM,CAAC;EACvE,MAAM2K,aAAa,GAAGzK,QAAQ,CAAC2D,OAAO,CAACjE,MAAM,CAAC;EAC9C,MAAM;IAAEiE,OAAO,EAAE+G,UAAU;IAAEvI,YAAY;IAAEF,MAAM;IAAEC,OAAO;IAAE4B,gBAAgB,EAAE6G;EAAoB,CAAC,GAAG3K,QAAQ;EAC9G,MAAMiJ,aAAa,GAAG/G,OAAO,CAACC,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC;EACjD,MAAMmE,MAAM,GAAGtG,QAAQ,CAACgC,MAAM,KAAKtC,MAAM;EAEzC,MAAMoE,gBAAgB,GAAG+B,MAAM,CAAC+B,MAAM,CAAC+C,mBAAmB,IAAI,CAAC,CAAC,CAAC,CAAC9C,IAAI,CAAC,CAACrJ,CAAC,EAAEC,CAAC;IAAA,IAAAmM,cAAA,EAAAC,cAAA;IAAA,OAAK,CAAC,EAAAD,cAAA,GAAApM,CAAC,CAACsM,WAAW,cAAAF,cAAA,uBAAbA,cAAA,CAAeG,OAAO,KAAI,CAAC,KAAK,EAAAF,cAAA,GAAApM,CAAC,CAACqM,WAAW,cAAAD,cAAA,uBAAbA,cAAA,CAAeE,OAAO,KAAI,CAAC,CAAC;EAAA,EAAC;EAC/I,MAAM5C,aAAa,GAAGtC,MAAM,CAAC+B,MAAM,CAAC8C,UAAU,IAAI,CAAC,CAAC,CAAC,CAAC7C,IAAI,CAAC,CAACrJ,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAAC4H,IAAI,CAAC0B,aAAa,CAACrJ,CAAC,CAAC2H,IAAI,CAAC,CAAC;;EAElG;EACA9K,SAAS,CAAC,MAAM;IACZwO,eAAe,CAAC,IAAI,CAAC;IACrBE,eAAe,CAAC,EAAE,CAAC;IACnBE,iBAAiB,CAAC;MAAEC,iBAAiB,EAAE,EAAE;MAAEC,aAAa,EAAE;IAAG,CAAC,CAAC;IAC/DE,eAAe,CAAC,IAAI,CAAC;IACrBE,iBAAiB,CAAC,IAAI,CAAC;EAC3B,CAAC,EAAE,CAACxK,QAAQ,CAACiC,MAAM,EAAEjC,QAAQ,CAACmC,YAAY,CAAC,CAAC;EAE5C,MAAM6I,gBAAgB,GAAIC,IAAI,IAAK;IAC/BnB,eAAe,CAACmB,IAAI,CAAC;EACzB,CAAC;EAED,MAAMC,wBAAwB,GAAI1D,CAAC,IAAK;IACpCwC,eAAe,CAACxC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;EACnC,CAAC;EAED,MAAM6D,sBAAsB,GAAGA,CAACC,KAAK,EAAE9D,KAAK,KAAK;IAC7C4C,iBAAiB,CAACmB,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE,CAACD,KAAK,GAAG9D;IAAM,CAAC,CAAC,CAAC;EAC5D,CAAC;EAED,MAAMgE,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAIb,aAAa,CAAC7G,YAAY,EAAE;MAC5BrB,WAAW,CAAC,sDAAsD,CAAC;MACnE;IACJ;;IAEA;IACA,IAAI0G,aAAa,CAAC9K,IAAI,KAAK,gBAAgB,IAAI,CAAC8K,aAAa,CAAC7G,QAAQ,IAAI/B,cAAc,EAAE;MACtFkC,WAAW,CAAC,mEAAmE,CAAC;MAChF;IACJ;IAEA,IAAIgJ,aAAa,GAAG,EAAE;IACtB;IACA,IAAItC,aAAa,CAAC9K,IAAI,KAAK,MAAM,IAAI8K,aAAa,CAAC9K,IAAI,KAAK,gBAAgB,EAAE;MAC1E,IAAI0L,YAAY,KAAK,IAAI,EAAE;QACvBtH,WAAW,CAAC,+CAA+C,CAAC;QAC5D;MACJ;MACA,IAAIsH,YAAY,KAAK,qBAAqB,EAAE;QACxC,IAAI,CAACE,YAAY,CAACpE,IAAI,CAAC,CAAC,EAAE;UACtBpD,WAAW,CAAC,iCAAiC,CAAC;UAC9C;QACJ;QACAgJ,aAAa,GAAGxB,YAAY,CAACpE,IAAI,CAAC,CAAC;MACvC,CAAC,MAAM;QACH4F,aAAa,GAAG1B,YAAY;MAChC;IACJ,CAAC,MAAM,IAAIZ,aAAa,CAAC9K,IAAI,KAAK,gBAAgB,EAAE;MAChD,IAAI,CAAC8L,cAAc,CAACE,iBAAiB,IAAI,CAACF,cAAc,CAACG,aAAa,CAACzE,IAAI,CAAC,CAAC,EAAE;QAC3EpD,WAAW,CAAC,qDAAqD,CAAC;QAClE;MACJ;MACAgJ,aAAa,GAAG;QACZpB,iBAAiB,EAAEF,cAAc,CAACE,iBAAiB;QACnDC,aAAa,EAAEH,cAAc,CAACG,aAAa,CAACzE,IAAI,CAAC;MACrD,CAAC;IACL,CAAC,MAAM;MACHpD,WAAW,CAAC,sBAAsB,CAAC;MACnC;IACJ;IAEA,IAAI;MACA,MAAMiJ,YAAY,GAAG3N,UAAU,CAAC,CAAC;MACjC,MAAM4N,OAAO,GAAG;QACZ,CAAC,WAAW/L,MAAM,eAAe,GAAG,IAAI;QACxC;QACA,CAAC,WAAWA,MAAM,OAAO,GAAG,CAACuJ,aAAa,CAAC9K,IAAI,KAAK,MAAM,IAAI8K,aAAa,CAAC9K,IAAI,KAAK,gBAAgB,KAAK0L,YAAY,KAAK,qBAAqB,GAC1IY,aAAa,CAAClE,IAAI,CAAC5B,MAAM,CAACsG,IAAI,IAAIA,IAAI,KAAKpB,YAAY,CAAC,GACxDY,aAAa,CAAClE,IAAI;QACxB,CAAC,oBAAoBiF,YAAY,EAAE,GAAG;UAClCrF,EAAE,EAAEqF,YAAY;UAChBE,QAAQ,EAAEhM,MAAM;UAChBiM,MAAM,EAAEJ,aAAa;UACrBvH,KAAK,EAAE,CAAC;UACR4H,MAAM,EAAE,EAAE;UACVd,WAAW,EAAEpO,eAAe,CAAC,CAAC,CAAC;QACnC;MACJ,CAAC;MAED,MAAMR,SAAS,CAAC8G,OAAO,EAAEyI,OAAO,CAAC;MACjClJ,WAAW,CAAC,mBAAmB,CAAC;IACpC,CAAC,CAAC,OAAOzB,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChDyB,WAAW,CAAC,4CAA4C,CAAC;IAC7D;EACJ,CAAC;EAED,MAAMsJ,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI,CAACtB,cAAc,EAAE;MACjBhI,WAAW,CAAC,yBAAyB,CAAC;MACtC;IACJ;IACA,IAAI;MACA,MAAMkJ,OAAO,GAAG;QACZ,CAAC,WAAW/L,MAAM,eAAe,GAAG,IAAI;QACxC,CAAC,iBAAiBA,MAAM,EAAE,GAAG6K;MACjC,CAAC;MACD,MAAMrO,SAAS,CAAC8G,OAAO,EAAEyI,OAAO,CAAC;MACjClJ,WAAW,CAAC,iCAAiC,CAAC;IAClD,CAAC,CAAC,OAAOzB,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChDyB,WAAW,CAAC,4CAA4C,CAAC;IAC7D;EACJ,CAAC;;EAED;EACA,MAAMuJ,cAAc,GAAG7C,aAAa,CAAC9K,IAAI,KAAK,eAAe,GACvD0H,MAAM,CAACC,IAAI,CAAC9F,QAAQ,CAAC+D,aAAa,IAAI,CAAC,CAAC,CAAC,CAACM,MAAM,GAChDP,gBAAgB,CAACO,MAAM;EAE7B,MAAM0H,sBAAsB,GAAG5D,aAAa,CAACxD,MAAM,CAACC,CAAC,IAAI,CAACA,CAAC,CAAC0B,MAAM,IAAI2C,aAAa,CAAC9K,IAAI,KAAK,MAAM,IAAI8K,aAAa,CAAC9K,IAAI,KAAK,gBAAgB,CAAC;EAC/I,MAAM6N,mBAAmB,GAAGF,cAAc,KAAKC,sBAAsB,CAAC1H,MAAM;;EAE5E;EACA/I,SAAS,CAAC,MAAM;IACZ;IACA,IAAIgL,MAAM,IAAItG,QAAQ,CAACiC,MAAM,KAAK,YAAY,IAAI+J,mBAAmB,IAAID,sBAAsB,CAAC1H,MAAM,GAAG,CAAC,EAAE;MACxGnI,SAAS,CAAC8G,OAAO,EAAE;QAAEf,MAAM,EAAE;MAAS,CAAC,CAAC,CAACgK,KAAK,CAACzE,CAAC,IAAIzG,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAE0G,CAAC,CAAC,CAAC;IAC5G;EACJ,CAAC,EAAE,CAACwE,mBAAmB,EAAED,sBAAsB,CAAC1H,MAAM,EAAEiC,MAAM,EAAEtG,QAAQ,CAACiC,MAAM,EAAEe,OAAO,CAAC,CAAC;EAG1F,MAAMkJ,kBAAkB,GAAG,MAAAA,CAAOC,cAAc,EAAEC,QAAQ,KAAK;IAC3D,IAAI3B,aAAa,CAAC5G,QAAQ,EAAE;MACxBtB,WAAW,CAAC,uDAAuD,CAAC;MACpE;IACJ;;IAEA;IACA,IAAI4J,cAAc,KAAKzM,MAAM,EAAE;MAC3B6C,WAAW,CAAC,oCAAoC,CAAC;MACjD;IACJ;IAEA,MAAM8J,QAAQ,GAAG,SAASF,cAAc,IAAIC,QAAQ,EAAE;IACtD,IAAI;MACA,MAAMlQ,SAAS,CAAC8G,OAAO,EAAE;QACrB,CAACqJ,QAAQ,GAAG7P,UAAU,CAACkD,MAAM;MACjC,CAAC,CAAC;MACF6C,WAAW,CAAC,GAAG6J,QAAQ,KAAK,QAAQ,GAAG,OAAO,GAAG,UAAU,SAAS,CAAC;IACzE,CAAC,CAAC,OAAOtL,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpDyB,WAAW,CAAC,sBAAsB,CAAC;IACvC;EACJ,CAAC;EAED,MAAM+J,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI7B,aAAa,CAAC5G,QAAQ,EAAE;IAC5B,IAAI;MACA,MAAM3H,SAAS,CAAC8G,OAAO,EAAE;QAAE,CAAC,WAAWtD,MAAM,WAAW,GAAG;MAAK,CAAC,CAAC;MAClE6C,WAAW,CAAC,kBAAkB,CAAC;IACnC,CAAC,CAAC,OAAOzB,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/CyB,WAAW,CAAC,0BAA0B,CAAC;IAC3C;EACJ,CAAC;EAED,MAAMgK,UAAU,GAAG,MAAOf,YAAY,IAAK;IACvC,IAAIf,aAAa,CAAC5G,QAAQ,EAAE;MACxBtB,WAAW,CAAC,kCAAkC,CAAC;MAC/C;IACJ;IACA,IAAI8H,YAAY,EAAE;MACd9H,WAAW,CAAC,mCAAmC,CAAC;MAChD;IACJ;IAEA,MAAMiK,UAAU,GAAG7B,mBAAmB,CAACa,YAAY,CAAC,CAAC,CAAC;IACtD,IAAI,CAACgB,UAAU,EAAE;;IAEjB;IACA,IAAIA,UAAU,CAACd,QAAQ,KAAKhM,MAAM,EAAE;MAChC6C,WAAW,CAAC,sCAAsC,CAAC;MACnD;IACJ;IAEA+H,eAAe,CAACkB,YAAY,CAAC,CAAC,CAAC;;IAE/B,IAAI;MACA,MAAMtP,SAAS,CAAC8G,OAAO,EAAE;QACrB,CAAC,oBAAoBwI,YAAY,QAAQ,GAAG3O,SAAS,CAAC,CAAC,CAAC;QACxD,CAAC,oBAAoB2O,YAAY,SAAS,GAAGhP,UAAU,CAACkD,MAAM,CAAC;QAC/D,CAAC,WAAWA,MAAM,WAAW,GAAG,IAAI;QACpC,CAAC,SAAS8L,YAAY,EAAE,GAAGhP,UAAU,CAACkD,MAAM,CAAC,CAAC;MAClD,CAAC,CAAC;MACF6C,WAAW,CAAC,iBAAiB,CAAC;IAClC,CAAC,CAAC,OAAOzB,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CwJ,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;MACvB/H,WAAW,CAAC,0CAA0C,CAAC;IAC3D;EACJ,CAAC;;EAED;EACA,MAAMkK,WAAW,GAAGtE,aAAa,CAACxD,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACf,QAAQ,CAAC,CAACQ,MAAM;EAChE,MAAMqI,eAAe,GAAGD,WAAW,KAAKtE,aAAa,CAAC9D,MAAM;EAG5D/I,SAAS,CAAC,MAAM;IACZ;IACA,IAAIgL,MAAM,IAAItG,QAAQ,CAACiC,MAAM,KAAK,QAAQ,IAAIyK,eAAe,IAAIvE,aAAa,CAAC9D,MAAM,GAAG,CAAC,EAAE;MAEvF,MAAMoH,OAAO,GAAG,CAAC,CAAC;MAClB,IAAIkB,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC;;MAEvB,IAAI1D,aAAa,CAAC9K,IAAI,KAAK,eAAe,EAAE;QACxCgK,aAAa,CAACyE,OAAO,CAAC9D,MAAM,IAAI;UAC5B,MAAM+D,aAAa,GAAG7M,QAAQ,CAACgE,KAAK,CAAC8E,MAAM,CAAC3C,EAAE,CAAC,IAAI,CAAC,CAAC;UACrD,MAAM2G,MAAM,GAAG,CAACD,aAAa,CAACC,MAAM,IAAI,EAAE,EAAEzI,MAAM;UAClD,MAAM0I,QAAQ,GAAG,CAACF,aAAa,CAACE,QAAQ,IAAI,EAAE,EAAE1I,MAAM;UACtD,MAAM2I,UAAU,GAAGF,MAAM,GAAGC,QAAQ;UAEpCtB,OAAO,CAAC,WAAW3C,MAAM,CAAC3C,EAAE,QAAQ,CAAC,GAAGtJ,SAAS,CAACmQ,UAAU,CAAC;UAC7DvB,OAAO,CAAC,WAAW3C,MAAM,CAAC3C,EAAE,cAAc,CAAC,GAAGtJ,SAAS,CAACiQ,MAAM,CAAC;UAC/DrB,OAAO,CAAC,WAAW3C,MAAM,CAAC3C,EAAE,gBAAgB,CAAC,GAAGtJ,SAAS,CAACkQ,QAAQ,CAAC;UAEnEJ,YAAY,CAAC7D,MAAM,CAAC3C,EAAE,CAAC,GAAG;YACtB8G,SAAS,EAAEjN,QAAQ,CAAC+D,aAAa,CAAC+E,MAAM,CAAC3C,EAAE,CAAC;YAC5C2G,MAAM;YACNC;UACJ,CAAC;QACL,CAAC,CAAC;MACN,CAAC,MAAM;QACH;QACA,IAAIG,QAAQ,GAAG,CAAC;QAChB,IAAIC,kBAAkB,GAAG,EAAE;QAE3BrJ,gBAAgB,CAAC8I,OAAO,CAACQ,GAAG,IAAI;UAC5B,IAAIA,GAAG,CAACpJ,KAAK,GAAGkJ,QAAQ,EAAE;YACtBA,QAAQ,GAAGE,GAAG,CAACpJ,KAAK;YACpBmJ,kBAAkB,GAAG,CAACC,GAAG,CAAC;UAC9B,CAAC,MAAM,IAAIA,GAAG,CAACpJ,KAAK,KAAKkJ,QAAQ,EAAE;YAC/BC,kBAAkB,CAAC3E,IAAI,CAAC4E,GAAG,CAAC;UAChC;QACJ,CAAC,CAAC;QAEF,IAAIF,QAAQ,GAAG,CAAC,EAAE;UACdC,kBAAkB,CAACP,OAAO,CAACQ,GAAG,IAAI;YAC9B3B,OAAO,CAAC,WAAW2B,GAAG,CAAC1B,QAAQ,QAAQ,CAAC,GAAG7O,SAAS,CAAC,CAAC,CAAC;UAC3D,CAAC,CAAC;QACN;QACA;QACA4O,OAAO,CAACxH,wBAAwB,GAAGiJ,QAAQ,GAAG,CAAC,GAAGC,kBAAkB,CAACvE,GAAG,CAACyE,CAAC,IAAIA,CAAC,CAAClH,EAAE,CAAC,GAAG,IAAI;MAC9F;MAEAsF,OAAO,CAACxJ,MAAM,GAAG,WAAW;MAC5B,IAAIgH,aAAa,CAAC9K,IAAI,KAAK,eAAe,EAAE;QACxCsN,OAAO,CAACkB,YAAY,GAAGA,YAAY;MACvC;MAEAzQ,SAAS,CAAC8G,OAAO,EAAEyI,OAAO,CAAC,CAACQ,KAAK,CAACzE,CAAC,IAAIzG,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAE0G,CAAC,CAAC,CAAC;IACnF;EACJ,CAAC,EAAE,CAACkF,eAAe,EAAEvE,aAAa,CAAC9D,MAAM,EAAEiC,MAAM,EAAEtG,QAAQ,CAACiC,MAAM,EAAEe,OAAO,EAAEc,gBAAgB,EAAEmF,aAAa,CAAC,CAAC;EAE9G,MAAM7B,UAAU,GAAG,CAAAqD,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAElE,IAAI,KAAI,EAAE;EAE5C,oBACIxJ,OAAA;IAAKiC,SAAS,EAAC,wEAAwE;IAAAC,QAAA,gBACnFlC,OAAA,CAACqM,UAAU;MAACC,MAAM,EAAEJ,aAAc;MAACjJ,QAAQ,EAAEA,QAAS;MAACK,cAAc,EAAEA;IAAe;MAAAnB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAAC,EAEzFW,QAAQ,CAACiC,MAAM,KAAK,YAAY,KAC7BgH,aAAa,CAAC9K,IAAI,KAAK,eAAe,gBAClCpB,OAAA;MAAKiC,SAAS,EAAC,oBAAoB;MAAAC,QAAA,GAC9B,CAACwL,aAAa,CAAC7G,YAAY,gBACxB7G,OAAA,CAAAE,SAAA;QAAAgC,QAAA,gBACIlC,OAAA;UAAIiC,SAAS,EAAC,oCAAoC;UAAAC,QAAA,EAAC;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzEtC,OAAA;UAAKiC,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAC1B4G,MAAM,CAACyH,OAAO,CAACrE,aAAa,CAAC1K,OAAO,CAAC,CAACsJ,IAAI,CAAC,CAACrJ,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAAC,CAAC,CAAC,CAACsJ,aAAa,CAACrJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACmK,GAAG,CAAC,CAAC,CAAC2E,GAAG,EAAEjG,KAAK,CAAC,kBAC7FvK,OAAA;YAEIuC,OAAO,EAAEA,CAAA,KAAMkL,iBAAiB,CAAC+C,GAAG,CAAE;YACtCvO,SAAS,EAAE,kEACPuL,cAAc,KAAKgD,GAAG,GAAG,uDAAuD,GAAG,0CAA0C,EAC9H;YAAAtO,QAAA,gBAEHlC,OAAA;cAAMiC,SAAS,EAAC,0BAA0B;cAAAC,QAAA,GAAEsO,GAAG,EAAC,GAAC;YAAA;cAAArO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,EAACiI,KAAK;UAAA,GANzDiG,GAAG;YAAArO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAOJ,CACX;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACNtC,OAAA;UACIuC,OAAO,EAAEuM,kBAAmB;UAC5B9C,QAAQ,EAAE,CAACwB,cAAe;UAC1BvL,SAAS,EAAC,6NAA6N;UAAAC,QAAA,EAC1O;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,eACX,CAAC,gBAEHtC,OAAA;QAAGiC,SAAS,EAAC,sCAAsC;QAAAC,QAAA,EAAC;MAAiD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAC3G,eACDtC,OAAA;QAAGiC,SAAS,EAAC,4BAA4B;QAAAC,QAAA,GAAC,aAC3B,EAAC6M,cAAc,EAAC,KAAG,EAACC,sBAAsB,CAAC1H,MAAM;MAAA;QAAAnF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,gBAENtC,OAAA;MAAKiC,SAAS,EAAC,yBAAyB;MAAAC,QAAA,GACnC,CAACwL,aAAa,CAAC7G,YAAY,gBACxB7G,OAAA,CAAAE,SAAA;QAAAgC,QAAA,gBACIlC,OAAA;UAAIiC,SAAS,EAAC,mCAAmC;UAAAC,QAAA,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjEtC,OAAA;UAAKiC,SAAS,EAAC,2DAA2D;UAAAC,QAAA,GACrEmI,UAAU,CAACwB,GAAG,CAAC,CAACqC,IAAI,EAAEuC,KAAK,kBACxBzQ,OAAA;YACuB;YACnBuC,OAAO,EAAEA,CAAA,KAAM0L,gBAAgB,CAACC,IAAI,CAAE;YACtCjM,SAAS,EAAE,sGAAsG6K,YAAY,KAAKoB,IAAI,GAAG,kCAAkC,GAAG,4BAA4B,EAAG;YAAAhM,QAAA,EAE5MgM;UAAI,GAJAA,IAAI,GAAGuC,KAAK;YAAAtO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAKb,CACX,CAAC,EACD,CAAC4J,aAAa,CAAC9K,IAAI,KAAK,MAAM,IAAI8K,aAAa,CAAC9K,IAAI,KAAK,gBAAgB,kBACtEpB,OAAA;YACIuC,OAAO,EAAEA,CAAA,KAAM0L,gBAAgB,CAAC,qBAAqB,CAAE;YACvDhM,SAAS,EAAE,wFAAwF6K,YAAY,KAAK,qBAAqB,GAAG,oDAAoD,GAAG,6CAA6C,EAAG;YAAA5K,QAAA,EACtP;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CACX;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,EAEL4J,aAAa,CAAC9K,IAAI,KAAK,gBAAgB,iBACpCpB,OAAA;UAAKiC,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACjBlC,OAAA;YAAIiC,SAAS,EAAC,mCAAmC;YAAAC,QAAA,EAAC;UAAoB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC3EtC,OAAA;YACIuK,KAAK,EAAE2C,cAAc,CAACE,iBAAkB;YACxC5C,QAAQ,EAAGC,CAAC,IAAK0C,iBAAiB,CAACmB,IAAI,KAAK;cAAE,GAAGA,IAAI;cAAElB,iBAAiB,EAAE3C,CAAC,CAACC,MAAM,CAACH;YAAM,CAAC,CAAC,CAAE;YAC7FtI,SAAS,EAAC,8CAA8C;YAAAC,QAAA,gBAExDlC,OAAA;cAAQuK,KAAK,EAAC,EAAE;cAAArI,QAAA,EAAC;YAAkB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EAC3C8I,aAAa,CAACxD,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACuB,EAAE,KAAKzG,MAAM,CAAC,CAACkJ,GAAG,CAAChE,CAAC,iBAC7C7H,OAAA;cAAmBuK,KAAK,EAAE1C,CAAC,CAACuB,EAAG;cAAAlH,QAAA,EAAE2F,CAAC,CAACwB;YAAI,GAA1BxB,CAAC,CAACuB,EAAE;cAAAjH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAA+B,CACnD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eACTtC,OAAA;YAAIiC,SAAS,EAAC,wCAAwC;YAAAC,QAAA,EAAC;UAA0B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACtFtC,OAAA;YACIuK,KAAK,EAAE2C,cAAc,CAACG,aAAc;YACpC7C,QAAQ,EAAGC,CAAC,IAAK0C,iBAAiB,CAACmB,IAAI,KAAK;cAAE,GAAGA,IAAI;cAAEjB,aAAa,EAAE5C,CAAC,CAACC,MAAM,CAACH;YAAM,CAAC,CAAC,CAAE;YACzFD,WAAW,EAAC,gCAAgC;YAC5CrI,SAAS,EAAC;UAAmD;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CACR,EAEAwK,YAAY,KAAK,qBAAqB,iBACnC9M,OAAA;UAAKiC,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACjBlC,OAAA;YAAIiC,SAAS,EAAC,mCAAmC;YAAAC,QAAA,EAAC;UAAwB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC/EtC,OAAA;YACIuK,KAAK,EAAEyC,YAAa;YACpBxC,QAAQ,EAAGC,CAAC,IAAKwC,eAAe,CAACxC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YACjDtI,SAAS,EAAC,mDAAmD;YAC7DqI,WAAW,EAAC;UAAe;YAAAnI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CACR,eACDtC,OAAA;UACIuC,OAAO,EAAEgM,kBAAmB;UAC5BtM,SAAS,EAAC,iPAAiP;UAC3P+J,QAAQ,EAAG,CAACE,aAAa,CAAC9K,IAAI,KAAK,MAAM,IAAI8K,aAAa,CAAC9K,IAAI,KAAK,gBAAgB,MAAM,CAAC0L,YAAY,IAAKA,YAAY,KAAK,qBAAqB,IAAI,CAACE,YAAY,CAACpE,IAAI,CAAC,CAAE,CAAC,IAAMsD,aAAa,CAAC9K,IAAI,KAAK,gBAAgB,KAAK,CAAC8L,cAAc,CAACE,iBAAiB,IAAI,CAACF,cAAc,CAACG,aAAa,CAACzE,IAAI,CAAC,CAAC,CAAG;UAAA1G,QAAA,EAC7S;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,eACX,CAAC,gBAEHtC,OAAA;QAAGiC,SAAS,EAAC,sCAAsC;QAAAC,QAAA,EAAC;MAAsC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAChG,eACDtC,OAAA;QAAGiC,SAAS,EAAC,4BAA4B;QAAAC,QAAA,GAAC,aAC3B,EAAC6M,cAAc,EAAC,KAAG,EAACC,sBAAsB,CAAC1H,MAAM;MAAA;QAAAnF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACR,CACJ,EAEAW,QAAQ,CAACiC,MAAM,KAAK,QAAQ,KACzBgH,aAAa,CAAC9K,IAAI,KAAK,eAAe,gBAClCpB,OAAA;MAAKiC,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBAC/BlC,OAAA;QAAIiC,SAAS,EAAC,oCAAoC;QAAAC,QAAA,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1EtC,OAAA;QAAGiC,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAC;MAAyD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC/FtC,OAAA;QAAKiC,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAC1BkJ,aAAa,CAACxD,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACuB,EAAE,KAAKzG,MAAM,CAAC,CAACkJ,GAAG,CAACE,MAAM,IAAI;UAAA,IAAA2E,eAAA,EAAAC,qBAAA,EAAAC,gBAAA,EAAAC,qBAAA;UAAE;UACxD,MAAMX,SAAS,GAAGjN,QAAQ,CAAC+D,aAAa,CAAC+E,MAAM,CAAC3C,EAAE,CAAC;UACnD,MAAM0H,UAAU,GAAGZ,SAAS,GAAGhE,aAAa,CAAC1K,OAAO,CAAC0O,SAAS,CAAC,GAAG,sBAAsB;UACxF,MAAMH,MAAM,GAAG,EAAAW,eAAA,GAAAzN,QAAQ,CAACgE,KAAK,cAAAyJ,eAAA,wBAAAC,qBAAA,GAAdD,eAAA,CAAiB3E,MAAM,CAAC3C,EAAE,CAAC,cAAAuH,qBAAA,uBAA3BA,qBAAA,CAA6BZ,MAAM,KAAI,EAAE;UACxD,MAAMC,QAAQ,GAAG,EAAAY,gBAAA,GAAA3N,QAAQ,CAACgE,KAAK,cAAA2J,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAiB7E,MAAM,CAAC3C,EAAE,CAAC,cAAAyH,qBAAA,uBAA3BA,qBAAA,CAA6Bb,QAAQ,KAAI,EAAE;UAC5D,MAAMe,aAAa,GAAGhB,MAAM,CAACjI,QAAQ,CAACnF,MAAM,CAAC;UAC7C,MAAMqO,YAAY,GAAGhB,QAAQ,CAAClI,QAAQ,CAACnF,MAAM,CAAC;UAE9C,oBACI3C,OAAA;YAAqBiC,SAAS,EAAC,iDAAiD;YAAAC,QAAA,gBAC5ElC,OAAA;cAAGiC,SAAS,EAAC,8BAA8B;cAAAC,QAAA,GAAE6J,MAAM,CAAC1C,IAAI,EAAC,UAAQ;YAAA;cAAAlH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eACrEtC,OAAA;cAAGiC,SAAS,EAAC,oBAAoB;cAAAC,QAAA,GAAC,IAAC,EAAC4O,UAAU,EAAC,IAAC;YAAA;cAAA3O,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eACpDtC,OAAA;cAAKiC,SAAS,EAAC,yCAAyC;cAAAC,QAAA,gBACpDlC,OAAA;gBACIuC,OAAO,EAAEA,CAAA,KAAM4M,kBAAkB,CAACpD,MAAM,CAAC3C,EAAE,EAAE,QAAQ,CAAE;gBACvD4C,QAAQ,EAAE+E,aAAa,IAAIC,YAAY,IAAItD,aAAa,CAAC5G,QAAS;gBAClE7E,SAAS,EAAE,sGAAsG8O,aAAa,GAAG,aAAa,GAAG,+BAA+B,EAAG;gBAAA7O,QAAA,EACtL;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACTtC,OAAA;gBACIuC,OAAO,EAAEA,CAAA,KAAM4M,kBAAkB,CAACpD,MAAM,CAAC3C,EAAE,EAAE,UAAU,CAAE;gBACzD4C,QAAQ,EAAE+E,aAAa,IAAIC,YAAY,IAAItD,aAAa,CAAC5G,QAAS;gBAClE7E,SAAS,EAAE,sGAAsG+O,YAAY,GAAG,YAAY,GAAG,8BAA8B,EAAG;gBAAA9O,QAAA,EACnL;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACR,CAAC;UAAA,GAlBAyJ,MAAM,CAAC3C,EAAE;YAAAjH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAmBd,CAAC;QAEd,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,EACL,CAACoL,aAAa,CAAC5G,QAAQ,iBACpB9G,OAAA;QAAQuC,OAAO,EAAEgN,iBAAkB;QAACtN,SAAS,EAAC,0GAA0G;QAAAC,QAAA,EAAC;MAEzJ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACX,eACDtC,OAAA;QAAGiC,SAAS,EAAC,4BAA4B;QAAAC,QAAA,GAAC,SAC/B,EAACwN,WAAW,EAAC,KAAG,EAACtE,aAAa,CAAC9D,MAAM;MAAA;QAAAnF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,gBAENtC,OAAA;MAAKiC,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBAC/BlC,OAAA;QAAIiC,SAAS,EAAC,oCAAoC;QAAAC,QAAA,EAAC;MAAuB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/EtC,OAAA;QAAKiC,SAAS,EAAC,4CAA4C;QAAAC,QAAA,EACtD6E,gBAAgB,CAAC8E,GAAG,CAACwE,GAAG,iBACrBrQ,OAAA;UAAkBiC,SAAS,EAAC,8EAA8E;UAAAC,QAAA,gBACtGlC,OAAA;YAAGiC,SAAS,EAAC,uCAAuC;YAAAC,QAAA,GAAC,IAAC,EAACmO,GAAG,CAACzB,MAAM,EAAC,IAAC;UAAA;YAAAzM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACvEtC,OAAA;YAAKiC,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACvBlC,OAAA;cACIuC,OAAO,EAAEA,CAAA,KAAMiN,UAAU,CAACa,GAAG,CAACjH,EAAE,CAAE;cAClC4C,QAAQ,EAAE0B,aAAa,CAAC5G,QAAQ,IAAIuJ,GAAG,CAAC1B,QAAQ,KAAKhM,MAAO;cAC5DV,SAAS,EAAC,wLAAwL;cAAAC,QAAA,EACrM;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EACRW,QAAQ,CAACgE,KAAK,CAACoJ,GAAG,CAACjH,EAAE,CAAC,iBAAIpJ,OAAA;cAAMiC,SAAS,EAAC,mCAAmC;cAAAC,QAAA,EAAE,CAACe,QAAQ,CAACgE,KAAK,CAACoJ,GAAG,CAACjH,EAAE,CAAC,IAAI,EAAE,EAAE9B;YAAM;cAAAnF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,EAAC,GAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9H,CAAC;QAAA,GAXA+N,GAAG,CAACjH,EAAE;UAAAjH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAYX,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,EACL,CAACoL,aAAa,CAAC5G,QAAQ,iBACpB9G,OAAA;QAAGiC,SAAS,EAAC,uBAAuB;QAAAC,QAAA,EAAC;MAA2C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACtF,eACDtC,OAAA;QAAGiC,SAAS,EAAC,4BAA4B;QAAAC,QAAA,GAAC,SAC/B,EAACwN,WAAW,EAAC,KAAG,EAACtE,aAAa,CAAC9D,MAAM;MAAA;QAAAnF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACR,CACJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;;AAED;AAAAuK,GAAA,CAtdMV,SAAS;AAAA8E,GAAA,GAAT9E,SAAS;AAudf,MAAMhE,eAAe,GAAGA,CAAC;EAAElF,QAAQ;EAAEN,MAAM;EAAEI,MAAM;EAAEyC;AAAY,CAAC,KAAK;EACnE,MAAM+D,MAAM,GAAGtG,QAAQ,CAACgC,MAAM,KAAKtC,MAAM;EACzC,MAAMiE,OAAO,GAAGkC,MAAM,CAAC+B,MAAM,CAAC5H,QAAQ,CAAC2D,OAAO,CAAC,CAACkE,IAAI,CAAC,CAACrJ,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAAC4H,KAAK,GAAG7H,CAAC,CAAC6H,KAAK,CAAC;EACjF,MAAM4C,aAAa,GAAGjJ,QAAQ,CAACkC,OAAO,CAAClC,QAAQ,CAACmC,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC;;EAEnE,MAAMgL,kBAAkB,GAAG,CAACnN,QAAQ,CAACiE,wBAAwB,IAAI,EAAE,EAAE2E,GAAG,CAACzC,EAAE,IAAInG,QAAQ,CAAC8D,gBAAgB,CAACqC,EAAE,CAAC,CAAC,CAACxB,MAAM,CAACsJ,OAAO,CAAC;EAC7H,MAAMC,WAAW,GAAGf,kBAAkB,CAACvE,GAAG,CAACwE,GAAG;IAAA,IAAAe,qBAAA;IAAA,QAAAA,qBAAA,GAAInO,QAAQ,CAAC2D,OAAO,CAACyJ,GAAG,CAAC1B,QAAQ,CAAC,cAAAyC,qBAAA,uBAA9BA,qBAAA,CAAgC/H,IAAI;EAAA,EAAC,CAACgI,IAAI,CAAC,IAAI,CAAC;EAElG,MAAMrL,eAAe,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI,CAACuD,MAAM,EAAE;IAEb,IAAI;MACA,MAAMtD,OAAO,GAAGlH,GAAG,CAAC6B,EAAE,EAAE,aAAaH,KAAK,oBAAoB,EAAEsC,MAAM,CAAC;MACvE,MAAMsD,SAAS,GAAGpD,QAAQ,CAACmC,YAAY,GAAG,CAAC;MAE3C,IAAIiB,SAAS,GAAGpD,QAAQ,CAACiD,SAAS,EAAE;QAChC,MAAM/G,SAAS,CAAC8G,OAAO,EAAE;UAAEf,MAAM,EAAE;QAAY,CAAC,CAAC;MACrD,CAAC,MAAM;QACH,MAAMoB,sBAAsB,GAAGnF,YAAY,CAAC8B,QAAQ,CAACkD,QAAQ,CAAC;QAC9D,MAAMI,SAAS,GAAGC,eAAe,CAACF,sBAAsB,EAAErD,QAAQ,CAACmD,aAAa,IAAI,EAAE,CAAC;;QAEvF;QACA,MAAMM,cAAc,GAAG,CAAC,CAAC;QACzB,IAAI4K,qBAAqB,GAAG,CAAC,GAAGrO,QAAQ,CAAC6G,cAAc,CAAC,CAAC,CAAC;;QAE1D,KAAK,MAAMnD,GAAG,IAAI1D,QAAQ,CAAC2D,OAAO,EAAE;UAChC,MAAMmF,MAAM,GAAG9I,QAAQ,CAAC2D,OAAO,CAACD,GAAG,CAAC;UACpC,IAAI4K,WAAW,GAAGxF,MAAM,CAACvC,IAAI,IAAI,EAAE;UACnC,MAAMgI,WAAW,GAAG,EAAE,GAAGD,WAAW,CAACjK,MAAM,CAAC,CAAC;;UAE7C,IAAImK,QAAQ,GAAG,EAAE;UACjB,IAAID,WAAW,GAAG,CAAC,EAAE;YACjB,IAAIF,qBAAqB,CAAChK,MAAM,GAAGkK,WAAW,EAAE;cAC5C;cACAF,qBAAqB,GAAGnK,YAAY,CAAC,CAAC,GAAGtF,YAAY,CAAC,CAAC;cACvDmC,OAAO,CAACuH,IAAI,CAAC,wDAAwD,CAAC;YAC1E;YACAkG,QAAQ,GAAGH,qBAAqB,CAAC7H,KAAK,CAAC,CAAC,EAAE+H,WAAW,CAAC;YACtDF,qBAAqB,GAAGA,qBAAqB,CAAC7H,KAAK,CAAC+H,WAAW,CAAC;UACpE;UAEA9K,cAAc,CAACC,GAAG,CAAC,GAAG;YAClB,GAAGoF,MAAM;YACTvC,IAAI,EAAE,CAAC,GAAG+H,WAAW,EAAE,GAAGE,QAAQ,CAAC;YAAE;YACrC5K,YAAY,EAAE,KAAK;YACnBC,QAAQ,EAAE;UACd,CAAC;QACL;QAEA,MAAM3H,SAAS,CAAC8G,OAAO,EAAE;UACrBf,MAAM,EAAE,YAAY;UACpBE,YAAY,EAAEiB,SAAS;UACvBlB,OAAO,EAAE1F,UAAU,CAAC8G,SAAS,CAAC;UAAE;UAChCH,aAAa,EAAE3G,UAAU,CAAC8G,SAAS,CAACjF,IAAI,CAAC;UAAE;UAC3CsF,OAAO,EAAEF,cAAc;UACvBK,gBAAgB,EAAE,CAAC,CAAC;UAAE;UACtBC,aAAa,EAAE,CAAC,CAAC;UAAE;UACnBC,KAAK,EAAE,CAAC,CAAC;UAAE;UACX2I,YAAY,EAAE/P,WAAW,CAAC,CAAC;UAAE;UAC7BqH,wBAAwB,EAAE,IAAI;UAAE;UAChC4C,cAAc,EAAEwH,qBAAqB;UAAE;UACvChO,cAAc,EAAEiD,SAAS,CAACnF,IAAI,KAAK,gBAAgB,CAAC;QACxD,CAAC,CAAC;MACN;IACJ,CAAC,CAAC,OAAO2C,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CyB,WAAW,CAAC,4CAA4C,CAAC;IAC7D;EACJ,CAAC;EAED,oBACIxF,OAAA;IAAKiC,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC5BlC,OAAA;MAAIiC,SAAS,EAAC,yDAAyD;MAAAC,QAAA,GAAC,QAAM,EAACe,QAAQ,CAACmC,YAAY,EAAC,UAAQ;IAAA;MAAAjD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEjH4J,aAAa,CAAC9K,IAAI,KAAK,eAAe,IAAI6B,QAAQ,CAAC2M,YAAY,gBAC3D5P,OAAA;MAAKiC,SAAS,EAAC,gGAAgG;MAAAC,QAAA,gBAC5GlC,OAAA;QAAIiC,SAAS,EAAC,uCAAuC;QAAAC,QAAA,EAAC;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/EtC,OAAA;QAAKiC,SAAS,EAAC,WAAW;QAAAC,QAAA,EACrB0E,OAAO,CAACiF,GAAG,CAACE,MAAM,IAAI;UACnB,MAAM2F,MAAM,GAAGzO,QAAQ,CAAC2M,YAAY,CAAC7D,MAAM,CAAC3C,EAAE,CAAC;UAC/C,IAAI,CAACsI,MAAM,EAAE,OAAO,IAAI;UACxB,MAAMZ,UAAU,GAAG5E,aAAa,CAAC1K,OAAO,CAACkQ,MAAM,CAACxB,SAAS,CAAC;UAC1D,oBACIlQ,OAAA;YAAqBiC,SAAS,EAAC,oDAAoD;YAAAC,QAAA,gBAC/ElC,OAAA;cAAGiC,SAAS,EAAC,8BAA8B;cAAAC,QAAA,GAAE6J,MAAM,CAAC1C,IAAI,EAAC,UAAQ;YAAA;cAAAlH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eACrEtC,OAAA;cAAGiC,SAAS,EAAC,2BAA2B;cAAAC,QAAA,GAAC,IAAC,EAAC4O,UAAU,EAAC,IAAC;YAAA;cAAA3O,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eAC3DtC,OAAA;cAAKiC,SAAS,EAAC,iDAAiD;cAAAC,QAAA,gBAC5DlC,OAAA;gBAAMiC,SAAS,EAAC,yBAAyB;gBAAAC,QAAA,GAAC,eAAG,EAACwP,MAAM,CAAC3B,MAAM;cAAA;gBAAA5N,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACnEtC,OAAA;gBAAMiC,SAAS,EAAC,wBAAwB;gBAAAC,QAAA,GAAC,eAAG,EAACwP,MAAM,CAAC1B,QAAQ;cAAA;gBAAA7N,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnE,CAAC;UAAA,GANAyJ,MAAM,CAAC3C,EAAE;YAAAjH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAOd,CAAC;QAEd,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,gBAENtC,OAAA;MAAKiC,SAAS,EAAC,gGAAgG;MAAAC,QAAA,gBAC3GlC,OAAA;QAAIiC,SAAS,EAAC,uCAAuC;QAAAC,QAAA,GAAC,gBAAc,EAACkO,kBAAkB,CAAC9I,MAAM,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE;MAAA;QAAAnF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAClH8N,kBAAkB,CAAC9I,MAAM,GAAG,CAAC,gBAC1BtH,OAAA,CAAAE,SAAA;QAAAgC,QAAA,GACKkO,kBAAkB,CAACvE,GAAG,CAACwE,GAAG,iBACvBrQ,OAAA;UAAgBiC,SAAS,EAAC,gFAAgF;UAAAC,QAAA,GAAC,IAAC,EAACmO,GAAG,CAACzB,MAAM,EAAC,IAAC;QAAA,GAAjHyB,GAAG,CAACjH,EAAE;UAAAjH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA8G,CAC/H,CAAC,eACFtC,OAAA;UAAGiC,SAAS,EAAC,4BAA4B;UAAAC,QAAA,GAAC,gBAAc,eAAAlC,OAAA;YAAMiC,SAAS,EAAC,sBAAsB;YAAAC,QAAA,EAAEiP;UAAW;YAAAhP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAAW;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA,eACpI,CAAC,gBAEHtC,OAAA;QAAGiC,SAAS,EAAC,kCAAkC;QAAAC,QAAA,EAAC;MAAkE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACxH;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACR,eAGDtC,OAAA;MAAKiC,SAAS,EAAC,0FAA0F;MAAAC,QAAA,gBACrGlC,OAAA;QAAIiC,SAAS,EAAC,oCAAoC;QAAAC,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAClEW,QAAQ,CAACkD,QAAQ,KAAK,+BAA+B,gBAClDnG,OAAA;QAAIiC,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EACzB0E,OAAO,CAACiF,GAAG,CAAC,CAACE,MAAM,EAAE0E,KAAK,kBACvBzQ,OAAA;UAAoBiC,SAAS,EAAE,yEAC3BwO,KAAK,KAAK,CAAC,GAAG,6BAA6B,GAAG,wBAAwB,EACvE;UAAAvO,QAAA,gBACClC,OAAA;YAAMiC,SAAS,EAAC,uBAAuB;YAAAC,QAAA,EAAE6J,MAAM,CAAC1C;UAAI;YAAAlH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC5DtC,OAAA;YAAKiC,SAAS,EAAC,qCAAqC;YAAAC,QAAA,gBAChDlC,OAAA;cAAMiC,SAAS,EAAC,yBAAyB;cAAAC,QAAA,GAAC,eAAG,EAAC6J,MAAM,CAACpC,WAAW,IAAI,CAAC;YAAA;cAAAxH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC7EtC,OAAA;cAAMiC,SAAS,EAAC,wBAAwB;cAAAC,QAAA,GAAC,eAAG,EAAC6J,MAAM,CAACrC,aAAa,IAAI,CAAC;YAAA;cAAAvH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7E,CAAC;QAAA,GAPDyJ,MAAM,CAAC3C,EAAE;UAAAjH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQd,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,gBAELtC,OAAA;QAAIiC,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EACzB0E,OAAO,CAACiF,GAAG,CAAC,CAACE,MAAM,EAAE0E,KAAK,kBACvBzQ,OAAA;UAAoBiC,SAAS,EAAE,8DAC3BwO,KAAK,KAAK,CAAC,GAAG,+CAA+C,GAAG,mCAAmC,EACpG;UAAAvO,QAAA,gBACClC,OAAA;YAAKiC,SAAS,EAAC,6BAA6B;YAAAC,QAAA,gBACxClC,OAAA;cAAMiC,SAAS,EAAC,mBAAmB;cAAAC,QAAA,GAAEuO,KAAK,GAAG,CAAC,EAAC,GAAC;YAAA;cAAAtO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACvDtC,OAAA;cAAMiC,SAAS,EAAC,SAAS;cAAAC,QAAA,EAAE6J,MAAM,CAAC1C;YAAI;cAAAlH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7C,CAAC,eACNtC,OAAA;YAAMiC,SAAS,EAAC,mBAAmB;YAAAC,QAAA,GAAE6J,MAAM,CAACzC,KAAK,EAAC,MAAI;UAAA;YAAAnH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA,GAPxDyJ,MAAM,CAAC3C,EAAE;UAAAjH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQd,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CACP,EACAiH,MAAM,iBACHvJ,OAAA;QACIuC,OAAO,EAAEyD,eAAgB;QACzB/D,SAAS,EAAC,yMAAyM;QAAAC,QAAA,EAElNe,QAAQ,CAACmC,YAAY,GAAGnC,QAAQ,CAACiD,SAAS,GAAG,YAAY,GAAG;MAAU;QAAA/D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnE,CACX,EACA,CAACiH,MAAM,iBACJvJ,OAAA;QAAGiC,SAAS,EAAC,8BAA8B;QAAAC,QAAA,EAAC;MAA+B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACjF;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;;AAED;AAAAqP,GAAA,GA/JMxJ,eAAe;AAgKrB,MAAMC,UAAU,GAAGA,CAAC;EAAEnF,QAAQ;EAAEN,MAAM;EAAE0F,WAAW;EAAE7C;AAAY,CAAC,KAAK;EACnE,MAAMoB,OAAO,GAAGkC,MAAM,CAAC+B,MAAM,CAAC5H,QAAQ,CAAC2D,OAAO,CAAC;EAC/C,MAAMgL,MAAM,GAAGhL,OAAO,CAACU,MAAM,GAAG,CAAC,GAAGV,OAAO,CAACkE,IAAI,CAAC,CAACrJ,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAAC4H,KAAK,GAAG7H,CAAC,CAAC6H,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI;EAEvF,MAAMuI,MAAM,GAAGjL,OAAO,CAACgB,MAAM,CAACC,CAAC,IAAIA,CAAC,CAAC8B,WAAW,GAAG9B,CAAC,CAAC6B,aAAa,CAAC,CAACoB,IAAI,CAAC,CAACrJ,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAAC4H,KAAK,GAAG7H,CAAC,CAAC6H,KAAK,CAAC;EACrG,MAAMwI,eAAe,GAAGlL,OAAO,CAACgB,MAAM,CAACC,CAAC,IAAIA,CAAC,CAAC6B,aAAa,GAAG7B,CAAC,CAAC8B,WAAW,CAAC,CAACmB,IAAI,CAAC,CAACrJ,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAAC6H,KAAK,GAAG5H,CAAC,CAAC4H,KAAK,CAAC;EAC9G,MAAMyI,OAAO,GAAGnL,OAAO,CAACgB,MAAM,CAACC,CAAC,IAAIA,CAAC,CAAC8B,WAAW,KAAK9B,CAAC,CAAC6B,aAAa,CAAC;EAEtE,MAAMH,MAAM,GAAGtG,QAAQ,CAACgC,MAAM,KAAKtC,MAAM;EAEzC,MAAMqP,cAAc,GAAIjG,MAAM,IAAK;IAC/B,IAAKA,MAAM,CAACpC,WAAW,GAAGoC,MAAM,CAACrC,aAAa,GAAI,CAAC,EAAE;MACjD,OAAOqC,MAAM,CAACpC,WAAW,IAAIoC,MAAM,CAACrC,aAAa,GAAG,OAAO,GAAG,kBAAkB;IACpF;IACA,OAAO,uBAAuB;EAClC,CAAC;EAED,MAAMuI,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjCzM,WAAW,CAAC,0EAA0E,EAAE,YAAY;MAChG,IAAI;QACA;QACA;QACA,IAAIvC,QAAQ,CAACmG,EAAE,EAAE;UACb,MAAMhK,SAAS,CAACL,GAAG,CAAC6B,EAAE,EAAE,aAAaH,KAAK,oBAAoB,EAAEwC,QAAQ,CAACmG,EAAE,CAAC,CAAC;UAC7Ef,WAAW,CAAC,CAAC,CAAC,CAAC;QACnB,CAAC,MAAM;UACHrE,OAAO,CAACD,KAAK,CAAC,sCAAsC,CAAC;UACrDyB,WAAW,CAAC,yCAAyC,CAAC;QAC1D;MACJ,CAAC,CAAC,OAAOzB,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5CyB,WAAW,CAAC,0CAA0C,CAAC;MAC3D;IACJ,CAAC,CAAC;EACN,CAAC;EAED,oBACIxF,OAAA;IAAKiC,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC5BlC,OAAA;MAAIiC,SAAS,EAAC,wDAAwD;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrFsP,MAAM,iBAAI5R,OAAA;MAAIiC,SAAS,EAAC,0BAA0B;MAAAC,QAAA,GAAC,uBAAqB,eAAAlC,OAAA;QAAMiC,SAAS,EAAC,yBAAyB;QAAAC,QAAA,GAAE0P,MAAM,CAACvI,IAAI,EAAC,GAAC;MAAA;QAAAlH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE7ItC,OAAA;MAAKiC,SAAS,EAAC,2FAA2F;MAAAC,QAAA,gBACtGlC,OAAA;QAAIiC,SAAS,EAAC,oCAAoC;QAAAC,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAEtEuP,MAAM,CAACvK,MAAM,GAAG,CAAC,iBACdtH,OAAA;QAAKiC,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACjBlC,OAAA;UAAIiC,SAAS,EAAC,uCAAuC;UAAAC,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpEtC,OAAA;UAAIiC,SAAS,EAAC,WAAW;UAAAC,QAAA,EACpB2P,MAAM,CAAChG,GAAG,CAAEE,MAAM,iBACf/L,OAAA;YAAoBiC,SAAS,EAAC,sFAAsF;YAAAC,QAAA,eAChHlC,OAAA;cAAMiC,SAAS,EAAC,uBAAuB;cAAAC,QAAA,EAAE6J,MAAM,CAAC1C;YAAI;cAAAlH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO;UAAC,GADvDyJ,MAAM,CAAC3C,EAAE;YAAAjH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEd,CACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CACR,EAEAwP,eAAe,CAACxK,MAAM,GAAG,CAAC,iBACvBtH,OAAA;QAAKiC,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACjBlC,OAAA;UAAIiC,SAAS,EAAC,sCAAsC;UAAAC,QAAA,EAAC;QAAoB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC7EtC,OAAA;UAAIiC,SAAS,EAAC,WAAW;UAAAC,QAAA,EACrB4P,eAAe,CAACjG,GAAG,CAAEE,MAAM,iBACxB/L,OAAA;YAAoBiC,SAAS,EAAC,sFAAsF;YAAAC,QAAA,eAChHlC,OAAA;cAAMiC,SAAS,EAAC,uBAAuB;cAAAC,QAAA,EAAE6J,MAAM,CAAC1C;YAAI;cAAAlH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO;UAAC,GADvDyJ,MAAM,CAAC3C,EAAE;YAAAjH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEd,CACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CACR,EAEAyP,OAAO,CAACzK,MAAM,GAAG,CAAC,iBACdtH,OAAA;QAAKiC,SAAS,EAAC,MAAM;QAAAC,QAAA,gBAClBlC,OAAA;UAAIiC,SAAS,EAAC,uCAAuC;UAAAC,QAAA,EAAC;QAA+B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzFtC,OAAA;UAAIiC,SAAS,EAAC,WAAW;UAAAC,QAAA,EACrB6P,OAAO,CAAClG,GAAG,CAAEE,MAAM,iBAChB/L,OAAA;YAAoBiC,SAAS,EAAC,sFAAsF;YAAAC,QAAA,eAChHlC,OAAA;cAAMiC,SAAS,EAAC,uBAAuB;cAAAC,QAAA,EAAE6J,MAAM,CAAC1C;YAAI;cAAAlH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO;UAAC,GADvDyJ,MAAM,CAAC3C,EAAE;YAAAjH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEd,CACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CACR;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,EAELiH,MAAM,iBACHvJ,OAAA,CAAAE,SAAA;MAAAgC,QAAA,gBACIlC,OAAA;QACIuC,OAAO,EAAE8F,WAAY;QACrBpG,SAAS,EAAC,wMAAwM;QAAAC,QAAA,EACrN;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTtC,OAAA;QACIuC,OAAO,EAAE0P,gBAAiB;QAC1BhQ,SAAS,EAAC,4IAA4I;QAAAC,QAAA,EACzJ;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eACX,CACL,EACA,CAACiH,MAAM,iBACJvJ,OAAA;MAAGiC,SAAS,EAAC,8BAA8B;MAAAC,QAAA,EAAC;IAAiC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACnF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;;AAED;AAAA4P,GAAA,GA3GM9J,UAAU;AA4GhB,MAAMjB,YAAY,GAAIC,KAAK,IAAK;EAC5B,IAAIC,YAAY,GAAGD,KAAK,CAACE,MAAM;IAAEC,WAAW;EAC5C,OAAOF,YAAY,KAAK,CAAC,EAAE;IACvBE,WAAW,GAAGxG,IAAI,CAACyG,KAAK,CAACzG,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGqG,YAAY,CAAC;IACtDA,YAAY,EAAE;IACd,CAACD,KAAK,CAACC,YAAY,CAAC,EAAED,KAAK,CAACG,WAAW,CAAC,CAAC,GAAG,CAACH,KAAK,CAACG,WAAW,CAAC,EAAEH,KAAK,CAACC,YAAY,CAAC,CAAC;EACzF;EACA,OAAOD,KAAK;AAChB,CAAC;;AAED;AACA,MAAMZ,eAAe,GAAGA,CAACiB,UAAU,EAAEC,OAAO,KAAK;EAC7C;EACA,MAAMC,gBAAgB,GAAGF,UAAU,CAACG,MAAM,CAACC,CAAC,IAAI,CAACH,OAAO,CAACI,QAAQ,CAACD,CAAC,CAACvG,IAAI,CAAC,CAAC;EAC1E,IAAIqG,gBAAgB,CAACL,MAAM,KAAK,CAAC,EAAE;IAC/BtD,OAAO,CAACuH,IAAI,CAAC,mFAAmF,CAAC;IACjG,OAAO9D,UAAU,CAAC1G,IAAI,CAACyG,KAAK,CAACzG,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGyG,UAAU,CAACH,MAAM,CAAC,CAAC,CAAC,CAAC;EACtE;EACA,MAAMC,WAAW,GAAGxG,IAAI,CAACyG,KAAK,CAACzG,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG2G,gBAAgB,CAACL,MAAM,CAAC;EACvE,OAAOK,gBAAgB,CAACJ,WAAW,CAAC;AACxC,CAAC;AAED,eAAe9E,GAAG;AAAC,IAAAD,EAAA,EAAA+F,GAAA,EAAAqC,GAAA,EAAAqB,GAAA,EAAAG,GAAA,EAAAQ,GAAA,EAAAqE,GAAA,EAAAU,GAAA,EAAAO,GAAA;AAAAC,YAAA,CAAA3P,EAAA;AAAA2P,YAAA,CAAA5J,GAAA;AAAA4J,YAAA,CAAAvH,GAAA;AAAAuH,YAAA,CAAAlG,GAAA;AAAAkG,YAAA,CAAA/F,GAAA;AAAA+F,YAAA,CAAAvF,GAAA;AAAAuF,YAAA,CAAAlB,GAAA;AAAAkB,YAAA,CAAAR,GAAA;AAAAQ,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}